Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Traffic.X.production.sym \
  --cmf=dist/default/production\Traffic.X.production.cmf -z -Q16F887 \
  -oC:\Users\acer\AppData\Local\Temp\s8ps.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Traffic.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\acer\AppData\Local\Temp\s8ps.o \
  dist/default/production\Traffic.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\acer\AppData\Local\Temp\s8ps.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\Traffic.X.production.o
                cinit                                 F        F       22        8       0
                intentry                              4        4        8        8       0
                text14                              5C5      5C5        7      A4C       0
                text13                              5BD      5BD        8      A4C       0
                text12                              55F      55F       17      A4C       0
                text11                              46E      46E       4E        8       0
                text10                               31       31      179        8       0
                text9                               526      526       1F      A4C       0
                text8                               576      576       16      A4C       0
                text7                               5CC      5CC        4      A4C       0
                text6                               4BC      4BC       40        8       0
                text5                               545      545       1A      A4C       0
                text4                               5D0      5D0        3      A4C       0
                text3                               1AA      1AA      144        8       0
                text2                               59D      59D       11      A4C       0
                text1                               2EE      2EE      10C        8       0
                maintext                            3FA      3FA       74        8       0
                cstackBANK0                          20       20       11       20       1
                cstackCOMMON                         70       70        8       70       1
                inittext                            58C      58C       11      A4C       0
                dataBANK0                            40       40        F       20       1
                bssBANK0                             31       31        F       20       1
                bssCOMMON                            78       78        3       70       1
                strings                             500      500       26      A00       0
                idataBANK0                          5AE      5AE        F      A4C       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       22         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text14                              5C5      5C5        7         0
                text13                              5BD      5BD        8         0
                text12                              55F      55F       17         0
                text11                              46E      46E       4E         0
                text10                               31       31      179         0
                text9                               526      526       1F         0
                text8                               576      576       16         0
                text7                               5CC      5CC        4         0
                text6                               4BC      4BC       40         0
                text5                               545      545       1A         0
                text4                               5D0      5D0        3         0
                text3                               1AA      1AA      144         0
                text2                               59D      59D       11         0
                text1                               2EE      2EE      10C         0
                maintext                            3FA      3FA       74         0
                inittext                            58C      58C       11         0
                idataBANK0                          5AE      5AE        F         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             500      500       26         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        3         1

        CLASS   BANK0          
                cstackBANK0                          20       20       11         1
                dataBANK0                            40       40        F         1
                bssBANK0                             31       31        F         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0004F8  0004FC         8       0  CODE        2
                cstackBANK0                    000020  00002F  00004F        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                strings                        000500  000026  000526       A00       0  STRING      2
                text9                          000526  0000AD  0005D3       A4C       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            004F-006F             21           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         04FC-04FF              4
                         05D3-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         04FC-04FF              4
                         05D3-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         04FC-04FF              4
                         05D3-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              004F-006F             21           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         04FC-04FF              4
                         05D3-1FFF           1A2D
        STRING           0003-0003              1           2
                         04FC-04FF              4
                         05D3-1FFF            100

                                  Symbol Table

Counting@S1                      bssBANK0     0036
Counting@S2                      bssBANK0     0035
Counting@S3                      bssBANK0     0034
Counting@S4                      bssBANK0     0033
Counting@T                       dataBANK0    0040
Counting@i                       bssBANK0     0038
Counting@j                       bssBANK0     0037
Counting@s1                      dataBANK0    0044
Counting@s2                      dataBANK0    0043
Counting@s3                      dataBANK0    0042
Counting@s4                      dataBANK0    0041
LED_7SEGMENT_Update@BlinkCounter bssBANK0     0039
LED_7SEGMENT_Update@State        bssBANK0     003A
LED_7SEGMENT_Update@val          cstackCOMMON 0075
Latch_Traffic_LED@LATptr         cstackCOMMON 0075
Sec2Time@k                       cstackBANK0  0021
Sec2Time@t1                      cstackBANK0  0020
Sec2Time@t2                      cstackCOMMON 0073
Sec2Time@t3                      cstackCOMMON 0074
Sec2Time@t4                      cstackCOMMON 0075
TMR2_Interrupt@En                cstackCOMMON 0074
TMR2_Setup@period                cstackCOMMON 0077
TMR2_Setup@postsc                cstackCOMMON 0074
TMR2_Setup@presc                 cstackCOMMON 0073
Traffic_Light@led                cstackCOMMON 0073
VIP_mode@i                       cstackBANK0  0020
_ANSELH                          (abs)        0189
_BlinkStatus                     bssCOMMON    0078
_Clr_LED                         text4        05D0
_Counting                        text10       0031
_Counting$252                    cstackBANK0  0025
_Counting$253                    cstackBANK0  0027
_Counting$254                    cstackBANK0  0029
_Counting$255                    cstackBANK0  002B
_Counting$256                    cstackBANK0  002D
_INTCON                          (abs)        000B
_INTCONbits                      (abs)        000B
_ISR                             text12       055F
_LAT                             bssCOMMON    0079
_LED                             bssBANK0     0031
_LED_7SEGMENT_Update             text3        01AA
_Latch_Traffic_LED               text2        059D
_OPTION_REG                      (abs)        0081
_OSCCON                          (abs)        008F
_PIE1                            (abs)        008C
_PIR1                            (abs)        000C
_PORTA                           (abs)        0005
_PORTB                           (abs)        0006
_PORTC                           (abs)        0007
_PORTD                           (abs)        0008
_PORT_Init                       text9        0526
_PR2                             (abs)        0092
_Sec2Time                        text11       046E
_Seg                             dataBANK0    0045
_SegTab                          strings      0506
_SysTick                         bssBANK0     003F
_T2CON                           (abs)        0012
_TMR2_ClearIntFlag               text14       05C5
_TMR2_GetIntFlag                 text13       05BD
_TMR2_Interrupt                  text8        0576
_TMR2_ON                         text7        05CC
_TMR2_Setup                      text6        04BC
_TRISA                           (abs)        0085
_TRISB                           (abs)        0086
_TRISC                           (abs)        0087
_TRISD                           (abs)        0088
_Temp                            bssBANK0     003C
_Traffic_Light                   text5        0545
_VIP                             bssBANK0     003D
_VIP_PrioTab                     strings      0516
_VIP_mode                        text1        02EE
_WPUB                            (abs)        0095
__CFG_BOR4V$BOR40V               (abs)        0000
__CFG_BOREN$ON                   (abs)        0000
__CFG_CP$OFF                     (abs)        0000
__CFG_CPD$OFF                    (abs)        0000
__CFG_FCMEN$ON                   (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT        (abs)        0000
__CFG_IESO$ON                    (abs)        0000
__CFG_LVP$OFF                    (abs)        0000
__CFG_MCLRE$ON                   (abs)        0000
__CFG_PWRTE$OFF                  (abs)        0000
__CFG_WDTE$OFF                   (abs)        0000
__CFG_WRT$OFF                    (abs)        0000
__Habs1                          abs1         0000
__Hbank0                         bank0        0000
__Hbank1                         bank1        0000
__Hbank2                         bank2        0000
__Hbank3                         bank3        0000
__HbssBANK0                      bssBANK0     0000
__HbssCOMMON                     bssCOMMON    0000
__Hcinit                         cinit        0031
__Hclrtext                       clrtext      0000
__Hcode                          code         0000
__Hcommon                        common       0000
__Hconfig                        config       2009
__HcstackBANK0                   cstackBANK0  0000
__HcstackCOMMON                  cstackCOMMON 0000
__HdataBANK0                     dataBANK0    0000
__Heeprom_data                   eeprom_data  0000
__Hend_init                      end_init     000F
__Hfunctab                       functab      0000
__HidataBANK0                    idataBANK0   0000
__Hidloc                         idloc        0000
__Hinit                          init         000C
__Hinittext                      inittext     0000
__Hintentry                      intentry     000C
__Hmaintext                      maintext     0000
__Hpowerup                       powerup      0000
__Hram                           ram          0000
__Hreset_vec                     reset_vec    0003
__Hsfr0                          sfr0         0000
__Hsfr1                          sfr1         0000
__Hsfr2                          sfr2         0000
__Hsfr3                          sfr3         0000
__Hspace_0                       (abs)        2009
__Hspace_1                       (abs)        007B
__Hspace_2                       (abs)        0000
__Hspace_3                       (abs)        0000
__Hstack                         stack        0000
__Hstrings                       strings      0000
__Htext                          text         0000
__Labs1                          abs1         0000
__Lbank0                         bank0        0000
__Lbank1                         bank1        0000
__Lbank2                         bank2        0000
__Lbank3                         bank3        0000
__LbssBANK0                      bssBANK0     0000
__LbssCOMMON                     bssCOMMON    0000
__Lcinit                         cinit        000F
__Lclrtext                       clrtext      0000
__Lcode                          code         0000
__Lcommon                        common       0000
__Lconfig                        config       2007
__LcstackBANK0                   cstackBANK0  0000
__LcstackCOMMON                  cstackCOMMON 0000
__LdataBANK0                     dataBANK0    0000
__Leeprom_data                   eeprom_data  0000
__Lend_init                      end_init     000C
__Lfunctab                       functab      0000
__LidataBANK0                    idataBANK0   0000
__Lidloc                         idloc        0000
__Linit                          init         000C
__Linittext                      inittext     0000
__Lintentry                      intentry     0004
__Lmaintext                      maintext     0000
__Lpowerup                       powerup      0000
__Lram                           ram          0000
__Lreset_vec                     reset_vec    0000
__Lsfr0                          sfr0         0000
__Lsfr1                          sfr1         0000
__Lsfr2                          sfr2         0000
__Lsfr3                          sfr3         0000
__Lspace_0                       (abs)        0000
__Lspace_1                       (abs)        0000
__Lspace_2                       (abs)        0000
__Lspace_3                       (abs)        0000
__Lstack                         stack        0000
__Lstrings                       strings      0000
__Ltext                          text         0000
__S0                             (abs)        2009
__S1                             (abs)        007B
__S2                             (abs)        0000
__S3                             (abs)        0000
___int_sp                        stack        0000
___latbits                       (abs)        0002
___sp                            stack        0000
___stackhi                       (abs)        0000
___stacklo                       (abs)        0000
__end_of_Clr_LED                 text4        05D3
__end_of_Counting                text10       01AA
__end_of_ISR                     text12       0576
__end_of_LED_7SEGMENT_Update     text3        02EE
__end_of_Latch_Traffic_LED       text2        05AE
__end_of_PORT_Init               text9        0545
__end_of_Sec2Time                text11       04BC
__end_of_SegTab                  strings      0516
__end_of_TMR2_ClearIntFlag       text14       05CC
__end_of_TMR2_GetIntFlag         text13       05C5
__end_of_TMR2_Interrupt          text8        058C
__end_of_TMR2_ON                 text7        05D0
__end_of_TMR2_Setup              text6        04FC
__end_of_Traffic_Light           text5        055F
__end_of_VIP_PrioTab             strings      0526
__end_of_VIP_mode                text1        03FA
__end_of__initialization         cinit        002D
__end_of__stringtab              strings      0506
__end_of_main                    maintext     046E
__initialization                 cinit        000F
__pbssBANK0                      bssBANK0     0031
__pbssCOMMON                     bssCOMMON    0078
__pcstackBANK0                   cstackBANK0  0020
__pcstackCOMMON                  cstackCOMMON 0070
__pdataBANK0                     dataBANK0    0040
__pidataBANK0                    idataBANK0   05AE
__pintentry                      intentry     0004
__pmaintext                      maintext     03FA
__pstrings                       strings      0500
__ptext1                         text1        02EE
__ptext10                        text10       0031
__ptext11                        text11       046E
__ptext12                        text12       055F
__ptext13                        text13       05BD
__ptext14                        text14       05C5
__ptext2                         text2        059D
__ptext3                         text3        01AA
__ptext4                         text4        05D0
__ptext5                         text5        0545
__ptext6                         text6        04BC
__ptext7                         text7        05CC
__ptext8                         text8        0576
__ptext9                         text9        0526
__size_of_Clr_LED                (abs)        0000
__size_of_Counting               (abs)        0000
__size_of_ISR                    (abs)        0000
__size_of_LED_7SEGMENT_Update    (abs)        0000
__size_of_Latch_Traffic_LED      (abs)        0000
__size_of_PORT_Init              (abs)        0000
__size_of_Sec2Time               (abs)        0000
__size_of_TMR2_ClearIntFlag      (abs)        0000
__size_of_TMR2_GetIntFlag        (abs)        0000
__size_of_TMR2_Interrupt         (abs)        0000
__size_of_TMR2_ON                (abs)        0000
__size_of_TMR2_Setup             (abs)        0000
__size_of_Traffic_Light          (abs)        0000
__size_of_VIP_mode               (abs)        0000
__size_of_main                   (abs)        0000
__stringbase                     strings      0505
__stringtab                      strings      0500
_main                            maintext     03FA
_reset                           bssBANK0     003E
btemp                            (abs)        007E
end_of_initialization            cinit        002D
init_fetch0                      inittext     058C
init_ram0                        inittext     0590
interrupt_function               intentry     0004
intlevel0                        functab      0000
intlevel1                        functab      0000
intlevel2                        functab      0000
intlevel3                        functab      0000
intlevel4                        functab      0000
intlevel5                        functab      0000
reset_vec                        reset_vec    0000
saved_w                          (abs)        007E
start                            init         000C
start_initialization             cinit        000F
wtemp0                           (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 30 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_Clr_LED
		_Counting
		_LED_7SEGMENT_Update
		_Latch_Traffic_LED
		_PORT_Init
		_TMR2_Interrupt
		_TMR2_ON
		_TMR2_Setup
		_Traffic_Light
		_VIP_mode
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _VIP_mode *****************
 Defined at:
		line 6 in file "VIP_MODE.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       1       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Clr_LED
		_LED_7SEGMENT_Update
		_Latch_Traffic_LED
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Latch_Traffic_LED *****************
 Defined at:
		line 4 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
  LATptr          1    wreg     PTR int 
		 -> LAT(2), 
 Auto vars:     Size  Location     Type
  LATptr          1    5[COMMON] PTR int 
		 -> LAT(2), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_VIP_mode
 This function uses a non-reentrant model


 *************** function _LED_7SEGMENT_Update *****************
 Defined at:
		line 21 in file "LED_SEGMENT.c"
 Parameters:    Size  Location     Type
  val             1    wreg     PTR unsigned char 
		 -> Seg(10), 
 Auto vars:     Size  Location     Type
  val             1    5[COMMON] PTR unsigned char 
		 -> Seg(10), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_VIP_mode
 This function uses a non-reentrant model


 *************** function _Clr_LED *****************
 Defined at:
		line 173 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_VIP_mode
 This function uses a non-reentrant model


 *************** function _Traffic_Light *****************
 Defined at:
		line 146 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
  led             2    3[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TMR2_Setup *****************
 Defined at:
		line 4 in file "TMR2.c"
 Parameters:    Size  Location     Type
  period          1    wreg     unsigned char 
  presc           1    3[COMMON] unsigned char 
  postsc          1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  period          1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TMR2_ON *****************
 Defined at:
		line 37 in file "TMR2.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TMR2_Interrupt *****************
 Defined at:
		line 42 in file "TMR2.c"
 Parameters:    Size  Location     Type
  En              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  En              1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _PORT_Init *****************
 Defined at:
		line 59 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Counting *****************
 Defined at:
		line 11 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Sec2Time
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Sec2Time *****************
 Defined at:
		line 118 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
  t1              1    wreg     unsigned char 
  t2              1    3[COMMON] unsigned char 
  t3              1    4[COMMON] unsigned char 
  t4              1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  t1              1    0[BANK0 ] unsigned char 
  k               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       2       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Counting
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 77 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_TMR2_ClearIntFlag
		_TMR2_GetIntFlag
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _TMR2_GetIntFlag *****************
 Defined at:
		line 53 in file "TMR2.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _TMR2_ClearIntFlag *****************
 Defined at:
		line 58 in file "TMR2.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
TRAFFIC.c
		_Sec2Time      		CODE           	046E	0000	79
		_Traffic_Light 		CODE           	0545	0000	27
		_Latch_Traffic_LED		CODE           	059D	0000	18
		_Counting      		CODE           	0031	0000	378
		_Clr_LED       		CODE           	05D0	0000	4

TRAFFIC.c estimated size: 506

VIP_MODE.c
		_VIP_mode      		CODE           	02EE	0000	269

VIP_MODE.c estimated size: 269

TMR2.c
		_TMR2_GetIntFlag		CODE           	05BD	0000	9
		_TMR2_ClearIntFlag		CODE           	05C5	0000	8
		_TMR2_ON       		CODE           	05CC	0000	5
		_TMR2_Setup    		CODE           	04BC	0000	65
		_TMR2_Interrupt		CODE           	0576	0000	23

TMR2.c estimated size: 110

LED_SEGMENT.c
		_LED_7SEGMENT_Update		CODE           	01AA	0000	325

LED_SEGMENT.c estimated size: 325

shared
		__stringtab    		STRING         	0500	0000	7
		_SegTab        		STRING         	0506	0000	17
		_VIP_PrioTab   		STRING         	0516	0000	17
		__initialization		CODE           	000F	0000	31

shared estimated size: 72

main.c
		_ISR           		CODE           	055F	0000	24
		_main          		CODE           	03FA	0000	117
		_PORT_Init     		CODE           	0526	0000	32

main.c estimated size: 173

