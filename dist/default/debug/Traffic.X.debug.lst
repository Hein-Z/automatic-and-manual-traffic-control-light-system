

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Aug 24 15:33:32 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 09/04/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0088                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534                           
   535                           	psect	idataBANK0
   536  069E                     __pidataBANK0:
   537                           
   538                           ;initializer for Counting@T
   539  069E  3401               	retlw	1
   540                           
   541                           ;initializer for Counting@s4
   542  069F  341E               	retlw	30
   543                           
   544                           ;initializer for Counting@s3
   545  06A0  3414               	retlw	20
   546                           
   547                           ;initializer for Counting@s2
   548  06A1  340A               	retlw	10
   549                           
   550                           ;initializer for Counting@s1
   551  06A2  340A               	retlw	10
   552                           
   553                           ;initializer for _Seg
   554  06A3  3401               	retlw	1
   555  06A4  3402               	retlw	2
   556  06A5  3403               	retlw	3
   557  06A6  3404               	retlw	4
   558  06A7  3402               	retlw	2
   559  06A8  3404               	retlw	4
   560  06A9  3402               	retlw	2
   561  06AA  3404               	retlw	4
   562  06AB  3400               	retlw	0
   563  06AC  3400               	retlw	0
   564                           
   565                           	psect	strings
   566  0600                     __pstrings:
   567  0600                     stringtab:
   568  0600                     __stringtab:
   569  0600                     stringcode:	
   570                           ;	String table - string pointers are 1 byte each
   571                           
   572  0600                     stringdir:
   573  0600  3006               	movlw	high stringdir
   574  0601  008A               	movwf	10
   575  0602  0804               	movf	4,w
   576  0603  0A84               	incf	4,f
   577  0604  0782               	addwf	2,f
   578  0605                     __stringbase:
   579  0605  3400               	retlw	0
   580  0606                     __end_of__stringtab:
   581  0606                     _SegTab:
   582  0606  343F               	retlw	63
   583  0607  3406               	retlw	6
   584  0608  345B               	retlw	91
   585  0609  344F               	retlw	79
   586  060A  3466               	retlw	102
   587  060B  346D               	retlw	109
   588  060C  347D               	retlw	125
   589  060D  3407               	retlw	7
   590  060E  347F               	retlw	127
   591  060F  346F               	retlw	111
   592  0610  3477               	retlw	119
   593  0611  347C               	retlw	124
   594  0612  3458               	retlw	88
   595  0613  345E               	retlw	94
   596  0614  3479               	retlw	121
   597  0615  3471               	retlw	113
   598  0616                     __end_of_SegTab:
   599  0616                     _VIP_PrioTab:
   600  0616  3400               	retlw	0
   601  0617  3404               	retlw	4
   602  0618  3405               	retlw	5
   603  0619  3405               	retlw	5
   604  061A  3406               	retlw	6
   605  061B  3406               	retlw	6
   606  061C  3406               	retlw	6
   607  061D  3406               	retlw	6
   608  061E  3407               	retlw	7
   609  061F  3407               	retlw	7
   610  0620  3407               	retlw	7
   611  0621  3407               	retlw	7
   612  0622  3407               	retlw	7
   613  0623  3407               	retlw	7
   614  0624  3407               	retlw	7
   615  0625  3407               	retlw	7
   616  0626                     __end_of_VIP_PrioTab:
   617  000B                     _INTCON	set	11
   618  000C                     _PIR1	set	12
   619  0012                     _T2CON	set	18
   620  0008                     _PORTD	set	8
   621  0007                     _PORTC	set	7
   622  0005                     _PORTA	set	5
   623  0006                     _PORTB	set	6
   624  000B                     _INTCONbits	set	11
   625  008C                     _PIE1	set	140
   626  0092                     _PR2	set	146
   627  008F                     _OSCCON	set	143
   628  0095                     _WPUB	set	149
   629  0081                     _OPTION_REG	set	129
   630  0088                     _TRISD	set	136
   631  0085                     _TRISA	set	133
   632  0086                     _TRISB	set	134
   633  0087                     _TRISC	set	135
   634  0189                     _ANSELH	set	393
   635                           
   636                           	psect	cinit
   637  0013                     start_initialization:	
   638                           ; #config settings
   639                           
   640  0013                     __initialization:
   641                           
   642                           ; Initialize objects allocated to BANK0
   643  0013  1383               	bcf	3,7	;select IRP bank0
   644  0014  303E               	movlw	low (__pdataBANK0+15)
   645  0015  00FD               	movwf	btemp+-1
   646  0016  3006               	movlw	high __pidataBANK0
   647  0017  00FE               	movwf	btemp
   648  0018  309E               	movlw	low __pidataBANK0
   649  0019  00FF               	movwf	btemp+1
   650  001A  302F               	movlw	low __pdataBANK0
   651  001B  0084               	movwf	4
   652  001C  120A  118A  267E  120A  118A  	fcall	init_ram0
   653                           
   654                           ; Clear objects allocated to BANK0
   655  0021  01A0               	clrf	__pbssBANK0& (0+127)
   656  0022  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   657  0023  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   658  0024  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   659  0025  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   660  0026  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   661  0027  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   662  0028  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   663  0029  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   664  002A  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   665  002B  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   666  002C  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   667  002D  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   668  002E  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   669  002F  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   670                           
   671                           ; Clear objects allocated to COMMON
   672  0030  01F8               	clrf	__pbssCOMMON& (0+127)
   673  0031  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   674  0032  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   675  0033                     end_of_initialization:	
   676                           ;End of C runtime variable initialization code
   677                           
   678  0033                     __end_of__initialization:
   679  0033  0183               	clrf	3
   680  0034  120A  118A  2C86   	ljmp	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMMON
   683  0078                     __pbssCOMMON:
   684  0078                     _BlinkStatus:
   685  0078                     	ds	1
   686  0079                     _LAT:
   687  0079                     	ds	2
   688                           
   689                           	psect	bssBANK0
   690  0020                     __pbssBANK0:
   691  0020                     _LED:
   692  0020                     	ds	2
   693  0022                     Counting@S4:
   694  0022                     	ds	1
   695  0023                     Counting@S3:
   696  0023                     	ds	1
   697  0024                     Counting@S2:
   698  0024                     	ds	1
   699  0025                     Counting@S1:
   700  0025                     	ds	1
   701  0026                     Counting@j:
   702  0026                     	ds	1
   703  0027                     Counting@i:
   704  0027                     	ds	1
   705  0028                     LED_7SEGMENT_Update@BlinkCounter:
   706  0028                     	ds	1
   707  0029                     LED_7SEGMENT_Update@State:
   708  0029                     	ds	1
   709  002A                     _SegDigit:
   710  002A                     	ds	1
   711  002B                     _Temp:
   712  002B                     	ds	1
   713  002C                     _VIP:
   714  002C                     	ds	1
   715  002D                     _reset:
   716  002D                     	ds	1
   717  002E                     _SysTick:
   718  002E                     	ds	1
   719                           
   720                           	psect	dataBANK0
   721  002F                     __pdataBANK0:
   722  002F                     Counting@T:
   723  002F                     	ds	1
   724  0030                     Counting@s4:
   725  0030                     	ds	1
   726  0031                     Counting@s3:
   727  0031                     	ds	1
   728  0032                     Counting@s2:
   729  0032                     	ds	1
   730  0033                     Counting@s1:
   731  0033                     	ds	1
   732  0034                     _Seg:
   733  0034                     	ds	10
   734                           
   735                           	psect	inittext
   736  067A                     init_fetch0:	
   737                           ;	Called with low address in FSR and high address in W
   738                           
   739  067A  087E               	movf	btemp,w
   740  067B  008A               	movwf	10
   741  067C  087F               	movf	btemp+1,w
   742  067D  0082               	movwf	2
   743  067E                     init_ram0:	
   744                           ;Called with:
   745                           ;	high address of idata address in btemp 
   746                           ;	low address of idata address in btemp+1 
   747                           ;	low address of data in FSR
   748                           ;	high address + 1 of data in btemp-1
   749                           
   750  067E  120A  118A  267A  120A  118A  	fcall	init_fetch0
   751  0683  0080               	movwf	0
   752  0684  0A84               	incf	4,f
   753  0685  0804               	movf	4,w
   754  0686  067D               	xorwf	btemp+-1,w
   755  0687  1903               	btfsc	3,2
   756  0688  3400               	retlw	0
   757  0689  0AFF               	incf	btemp+1,f
   758  068A  1903               	btfsc	3,2
   759  068B  0AFE               	incf	btemp,f
   760  068C  2E7E               	goto	init_ram0
   761                           
   762                           	psect	cstackCOMMON
   763  0070                     __pcstackCOMMON:
   764  0070                     ?_PORT_Init:
   765  0070                     ?_TMR2_Interrupt:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_TMR2_ON:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_Clr_LED:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_Counting:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_LED_7SEGMENT_Update:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_Latch_Traffic_LED:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_VIP_mode:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_TMR2_GetIntFlag:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ??_TMR2_GetIntFlag:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_TMR2_ClearIntFlag:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ??_TMR2_ClearIntFlag:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_main:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_ISR:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ??_ISR:	
   805                           ; 1 bytes @ 0x0
   806                           
   807                           
   808                           ; 1 bytes @ 0x0
   809  0070                     	ds	3
   810  0073                     ??_PORT_Init:
   811  0073                     ?_TMR2_Setup:	
   812                           ; 1 bytes @ 0x3
   813                           
   814  0073                     ??_TMR2_Interrupt:	
   815                           ; 1 bytes @ 0x3
   816                           
   817  0073                     ??_TMR2_ON:	
   818                           ; 1 bytes @ 0x3
   819                           
   820  0073                     ??_Clr_LED:	
   821                           ; 1 bytes @ 0x3
   822                           
   823  0073                     ??_LED_7SEGMENT_Update:	
   824                           ; 1 bytes @ 0x3
   825                           
   826  0073                     ?_Traffic_Light:	
   827                           ; 1 bytes @ 0x3
   828                           
   829  0073                     ??_Latch_Traffic_LED:	
   830                           ; 1 bytes @ 0x3
   831                           
   832  0073                     ?_Sec2Time:	
   833                           ; 1 bytes @ 0x3
   834                           
   835  0073                     TMR2_Setup@presc:	
   836                           ; 1 bytes @ 0x3
   837                           
   838  0073                     TMR2_Interrupt@En:	
   839                           ; 1 bytes @ 0x3
   840                           
   841  0073                     Sec2Time@t2:	
   842                           ; 1 bytes @ 0x3
   843                           
   844  0073                     Traffic_Light@led:	
   845                           ; 1 bytes @ 0x3
   846                           
   847                           
   848                           ; 2 bytes @ 0x3
   849  0073                     	ds	1
   850  0074                     TMR2_Setup@postsc:
   851  0074                     Sec2Time@t3:	
   852                           ; 1 bytes @ 0x4
   853                           
   854                           
   855                           ; 1 bytes @ 0x4
   856  0074                     	ds	1
   857  0075                     ??_TMR2_Setup:
   858  0075                     ??_Traffic_Light:	
   859                           ; 1 bytes @ 0x5
   860                           
   861  0075                     LED_7SEGMENT_Update@val:	
   862                           ; 1 bytes @ 0x5
   863                           
   864  0075                     Latch_Traffic_LED@LATptr:	
   865                           ; 1 bytes @ 0x5
   866                           
   867  0075                     Sec2Time@t4:	
   868                           ; 1 bytes @ 0x5
   869                           
   870                           
   871                           ; 1 bytes @ 0x5
   872  0075                     	ds	1
   873  0076                     ??_VIP_mode:
   874  0076                     ??_Sec2Time:	
   875                           ; 1 bytes @ 0x6
   876                           
   877  0076                     Sec2Time@t1:	
   878                           ; 1 bytes @ 0x6
   879                           
   880                           
   881                           ; 1 bytes @ 0x6
   882  0076                     	ds	1
   883  0077                     TMR2_Setup@period:
   884  0077                     Sec2Time@k:	
   885                           ; 1 bytes @ 0x7
   886                           
   887  0077                     VIP_mode@i:	
   888                           ; 1 bytes @ 0x7
   889                           
   890                           
   891                           ; 1 bytes @ 0x7
   892  0077                     	ds	1
   893                           
   894                           	psect	cstackBANK0
   895  003E                     __pcstackBANK0:
   896  003E                     ??_Counting:
   897                           
   898                           ; 1 bytes @ 0x0
   899  003E                     	ds	2
   900  0040                     _Counting$252:
   901                           
   902                           ; 2 bytes @ 0x2
   903  0040                     	ds	2
   904  0042                     _Counting$253:
   905                           
   906                           ; 2 bytes @ 0x4
   907  0042                     	ds	2
   908  0044                     _Counting$254:
   909                           
   910                           ; 2 bytes @ 0x6
   911  0044                     	ds	2
   912  0046                     _Counting$255:
   913                           
   914                           ; 2 bytes @ 0x8
   915  0046                     	ds	2
   916  0048                     _Counting$256:
   917                           
   918                           ; 2 bytes @ 0xA
   919  0048                     	ds	2
   920  004A                     ??_main:
   921                           
   922                           ; 1 bytes @ 0xC
   923  004A                     	ds	1
   924                           
   925                           	psect	maintext
   926  0486                     __pmaintext:	
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 30 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : B00/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0
   948 ;;      Temps:          0       1       0       0       0
   949 ;;      Totals:         0       1       0       0       0
   950 ;;Total ram usage:        1 bytes
   951 ;; Hardware stack levels required when called:    4
   952 ;; This function calls:
   953 ;;		_Clr_LED
   954 ;;		_Counting
   955 ;;		_LED_7SEGMENT_Update
   956 ;;		_Latch_Traffic_LED
   957 ;;		_PORT_Init
   958 ;;		_TMR2_Interrupt
   959 ;;		_TMR2_ON
   960 ;;		_TMR2_Setup
   961 ;;		_Traffic_Light
   962 ;;		_VIP_mode
   963 ;; This function is called by:
   964 ;;		Startup code after reset
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _main
   970  0486                     _main:
   971  0486                     l2382:	
   972                           ;incstack = 0
   973                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   974                           
   975                           
   976                           ;main.c: 32:     PORT_Init();
   977  0486  120A  118A  2626  120A  118A  	fcall	_PORT_Init
   978  048B                     l2384:
   979                           
   980                           ;main.c: 33:     TMR2_Setup(250,4,5);
   981  048B  3004               	movlw	4
   982  048C  00FF               	movwf	btemp+1
   983  048D  087F               	movf	btemp+1,w
   984  048E  00F3               	movwf	TMR2_Setup@presc
   985  048F  3005               	movlw	5
   986  0490  00FF               	movwf	btemp+1
   987  0491  087F               	movf	btemp+1,w
   988  0492  00F4               	movwf	TMR2_Setup@postsc
   989  0493  30FA               	movlw	250
   990  0494  120A  118A  255F  120A  118A  	fcall	_TMR2_Setup
   991  0499                     l2386:
   992                           
   993                           ;main.c: 34:     TMR2_Interrupt(1);
   994  0499  3001               	movlw	1
   995  049A  120A  118A  2662  120A  118A  	fcall	_TMR2_Interrupt
   996  049F                     l2388:
   997                           
   998                           ;main.c: 35:     TMR2_ON();
   999  049F  120A  118A  26BD  120A  118A  	fcall	_TMR2_ON
  1000  04A4                     l2390:
  1001                           
  1002                           ;main.c: 36:     (INTCONbits.GIE = 1);
  1003  04A4  178B               	bsf	11,7	;volatile
  1004  04A5                     l2392:
  1005                           
  1006                           ;main.c: 37:     SysTick.On_Off=ON;
  1007  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1008  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  1009  04A7  142E               	bsf	_SysTick,0
  1010  04A8                     l74:	
  1011                           ;main.c: 41:             ;
  1012                           
  1013                           
  1014                           ;main.c: 40:         while(SysTick.On_Off)
  1015  04A8  182E               	btfsc	_SysTick,0
  1016  04A9  2CAB               	goto	u1811
  1017  04AA  2CAC               	goto	u1810
  1018  04AB                     u1811:
  1019  04AB  2CA8               	goto	l74
  1020  04AC                     u1810:
  1021  04AC                     l76:
  1022                           
  1023                           ;main.c: 42:           SysTick.On_Off=ON;
  1024  04AC  142E               	bsf	_SysTick,0
  1025  04AD                     l2394:
  1026                           
  1027                           ;main.c: 44:          Clr_LED();
  1028  04AD  120A  118A  26C1  120A  118A  	fcall	_Clr_LED
  1029  04B2                     l2396:
  1030                           
  1031                           ;main.c: 45:          Counting();
  1032  04B2  120A  118A  2037  120A  118A  	fcall	_Counting
  1033  04B7                     l2398:
  1034                           
  1035                           ;main.c: 46:         LED_7SEGMENT_Update(Seg);
  1036  04B7  3034               	movlw	(low (_Seg| 0))& (0+255)
  1037  04B8  120A  118A  21E1  120A  118A  	fcall	_LED_7SEGMENT_Update
  1038  04BD                     l2400:
  1039                           
  1040                           ;main.c: 47:         Traffic_Light(LED);
  1041  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1042  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1043  04BF  0821               	movf	_LED+1,w
  1044  04C0  00F4               	movwf	Traffic_Light@led+1
  1045  04C1  0820               	movf	_LED,w
  1046  04C2  00F3               	movwf	Traffic_Light@led
  1047  04C3  120A  118A  25A4  120A  118A  	fcall	_Traffic_Light
  1048  04C8                     l2402:
  1049                           
  1050                           ;main.c: 48:         Latch_Traffic_LED(&LAT);
  1051  04C8  3079               	movlw	(low (_LAT| 0))& (0+255)
  1052  04C9  120A  118A  268D  120A  118A  	fcall	_Latch_Traffic_LED
  1053  04CE                     l2404:
  1054                           
  1055                           ;main.c: 49:         Temp=0X00;
  1056  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1057  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1058  04D0  01AB               	clrf	_Temp
  1059  04D1                     l2406:
  1060                           
  1061                           ;main.c: 50:         Temp|=~(PORTB>>4);
  1062  04D1  0806               	movf	6,w	;volatile
  1063  04D2  00CA               	movwf	??_main
  1064  04D3  3004               	movlw	4
  1065  04D4                     u1825:
  1066  04D4  1003               	clrc
  1067  04D5  0CCA               	rrf	??_main,f
  1068  04D6  3EFF               	addlw	-1
  1069  04D7  1D03               	skipz
  1070  04D8  2CD4               	goto	u1825
  1071  04D9  084A               	movf	??_main,w
  1072  04DA  3AFF               	xorlw	255
  1073  04DB  00FF               	movwf	btemp+1
  1074  04DC  087F               	movf	btemp+1,w
  1075  04DD  04AB               	iorwf	_Temp,f
  1076  04DE                     l2408:
  1077                           
  1078                           ;main.c: 51:         Temp&=0X0F;
  1079  04DE  300F               	movlw	15
  1080  04DF  00FF               	movwf	btemp+1
  1081  04E0  087F               	movf	btemp+1,w
  1082  04E1  05AB               	andwf	_Temp,f
  1083  04E2                     l2410:
  1084                           
  1085                           ;main.c: 52:         VIP=VIP_PrioTab[Temp];
  1086  04E2  082B               	movf	_Temp,w
  1087  04E3  3E11               	addlw	low ((_VIP_PrioTab-__stringbase)| (0+32768))
  1088  04E4  0084               	movwf	4
  1089  04E5  120A  118A  2600  120A  118A  	fcall	stringdir
  1090  04EA  00FF               	movwf	btemp+1
  1091  04EB  087F               	movf	btemp+1,w
  1092  04EC  00AC               	movwf	_VIP
  1093  04ED                     l2412:
  1094                           
  1095                           ;main.c: 53:         if(VIP)
  1096  04ED  082C               	movf	_VIP,w
  1097  04EE  1903               	btfsc	3,2
  1098  04EF  2CF1               	goto	u1831
  1099  04F0  2CF2               	goto	u1830
  1100  04F1                     u1831:
  1101  04F1  2CF7               	goto	l2416
  1102  04F2                     u1830:
  1103  04F2                     l2414:
  1104                           
  1105                           ;main.c: 54:             VIP_mode();
  1106  04F2  120A  118A  2367  120A  118A  	fcall	_VIP_mode
  1107  04F7                     l2416:
  1108                           
  1109                           ;main.c: 55:         Seg[9]=Seg[8]=0;
  1110  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1111  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1112  04F9  01BC               	clrf	_Seg+8
  1113  04FA  01BD               	clrf	_Seg+9
  1114  04FB  2CA8               	goto	l74
  1115  04FC  120A  118A  2810   	ljmp	start
  1116  04FF                     __end_of_main:
  1117                           
  1118                           	psect	text1
  1119  0367                     __ptext1:	
  1120 ;; *************** function _VIP_mode *****************
  1121 ;; Defined at:
  1122 ;;		line 6 in file "VIP_MODE.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  i               1    7[COMMON] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         1       0       0       0       0
  1138 ;;      Temps:          1       0       0       0       0
  1139 ;;      Totals:         2       0       0       0       0
  1140 ;;Total ram usage:        2 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    3
  1143 ;; This function calls:
  1144 ;;		_Clr_LED
  1145 ;;		_LED_7SEGMENT_Update
  1146 ;;		_Latch_Traffic_LED
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _VIP_mode
  1154  0367                     _VIP_mode:
  1155  0367                     l2022:	
  1156                           ;incstack = 0
  1157                           ; Regs used in _VIP_mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1158                           
  1159                           
  1160                           ;VIP_MODE.c: 7:   for(char i=0;i<=8;i++)
  1161  0367  01F7               	clrf	VIP_mode@i
  1162  0368                     l2028:
  1163                           
  1164                           ;VIP_MODE.c: 8:        Seg[i]=0;
  1165  0368  0877               	movf	VIP_mode@i,w
  1166  0369  3E34               	addlw	(low (_Seg| 0))& (0+255)
  1167  036A  0084               	movwf	4
  1168  036B  1383               	bcf	3,7	;select IRP bank0
  1169  036C  0180               	clrf	0
  1170  036D                     l2030:
  1171  036D  3001               	movlw	1
  1172  036E  00FF               	movwf	btemp+1
  1173  036F  087F               	movf	btemp+1,w
  1174  0370  07F7               	addwf	VIP_mode@i,f
  1175  0371                     l2032:
  1176  0371  3009               	movlw	9
  1177  0372  0277               	subwf	VIP_mode@i,w
  1178  0373  1C03               	skipc
  1179  0374  2B76               	goto	u1461
  1180  0375  2B77               	goto	u1460
  1181  0376                     u1461:
  1182  0376  2B68               	goto	l2028
  1183  0377                     u1460:
  1184  0377                     l345:
  1185                           
  1186                           ;VIP_MODE.c: 9:        Seg[9]=1;
  1187  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0379  01BD               	clrf	_Seg+9
  1190  037A  0ABD               	incf	_Seg+9,f
  1191                           
  1192                           ;VIP_MODE.c: 10:        Seg[8]=1;
  1193  037B  01BC               	clrf	_Seg+8
  1194  037C  0ABC               	incf	_Seg+8,f
  1195                           
  1196                           ;VIP_MODE.c: 11:     while(VIP==4)
  1197  037D  2BB9               	goto	l2058
  1198  037E                     l348:	
  1199                           ;VIP_MODE.c: 14:             ;
  1200                           
  1201                           
  1202                           ;VIP_MODE.c: 13:         while(SysTick.On_Off)
  1203  037E  182E               	btfsc	_SysTick,0
  1204  037F  2B81               	goto	u1471
  1205  0380  2B82               	goto	u1470
  1206  0381                     u1471:
  1207  0381  2B7E               	goto	l348
  1208  0382                     u1470:
  1209  0382                     l350:
  1210                           
  1211                           ;VIP_MODE.c: 15:         SysTick.On_Off=ON;
  1212  0382  142E               	bsf	_SysTick,0
  1213  0383                     l2034:
  1214                           
  1215                           ;VIP_MODE.c: 16:         Clr_LED();
  1216  0383  120A  118A  26C1  120A  118A  	fcall	_Clr_LED
  1217  0388                     l2036:
  1218                           
  1219                           ;VIP_MODE.c: 17:         LED_7SEGMENT_Update(Seg);
  1220  0388  3034               	movlw	(low (_Seg| 0))& (0+255)
  1221  0389  120A  118A  21E1  120A  118A  	fcall	_LED_7SEGMENT_Update
  1222  038E                     l2038:
  1223                           
  1224                           ;VIP_MODE.c: 18:         ((TrafficLight*)&LAT)->LED.t1green=1;
  1225  038E  1579               	bsf	_LAT,2
  1226  038F                     l2040:
  1227                           
  1228                           ;VIP_MODE.c: 19:         ((TrafficLight*)&LAT)->LED.t2red=1;
  1229  038F  15F9               	bsf	_LAT,3
  1230  0390                     l2042:
  1231                           
  1232                           ;VIP_MODE.c: 20:         ((TrafficLight*)&LAT)->LED.t3red=1;
  1233  0390  1779               	bsf	_LAT,6
  1234  0391                     l2044:
  1235                           
  1236                           ;VIP_MODE.c: 21:         ((TrafficLight*)&LAT)->LED.t4red=1;
  1237  0391  14FA               	bsf	_LAT+1,1
  1238  0392                     l2046:
  1239                           
  1240                           ;VIP_MODE.c: 22:         Latch_Traffic_LED(&LAT);
  1241  0392  3079               	movlw	(low (_LAT| 0))& (0+255)
  1242  0393  120A  118A  268D  120A  118A  	fcall	_Latch_Traffic_LED
  1243  0398                     l2048:
  1244                           
  1245                           ;VIP_MODE.c: 23:         Temp=0X00;
  1246  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1248  039A  01AB               	clrf	_Temp
  1249  039B                     l2050:
  1250                           
  1251                           ;VIP_MODE.c: 24:         Temp|=~(PORTB>>4);
  1252  039B  0806               	movf	6,w	;volatile
  1253  039C  00F6               	movwf	??_VIP_mode
  1254  039D  3004               	movlw	4
  1255  039E                     u1485:
  1256  039E  1003               	clrc
  1257  039F  0CF6               	rrf	??_VIP_mode,f
  1258  03A0  3EFF               	addlw	-1
  1259  03A1  1D03               	skipz
  1260  03A2  2B9E               	goto	u1485
  1261  03A3  0876               	movf	??_VIP_mode,w
  1262  03A4  3AFF               	xorlw	255
  1263  03A5  00FF               	movwf	btemp+1
  1264  03A6  087F               	movf	btemp+1,w
  1265  03A7  04AB               	iorwf	_Temp,f
  1266  03A8                     l2052:
  1267                           
  1268                           ;VIP_MODE.c: 25:         Temp|=0X0F;
  1269  03A8  300F               	movlw	15
  1270  03A9  00FF               	movwf	btemp+1
  1271  03AA  087F               	movf	btemp+1,w
  1272  03AB  04AB               	iorwf	_Temp,f
  1273  03AC                     l2054:
  1274                           
  1275                           ;VIP_MODE.c: 26:         VIP=VIP_PrioTab[Temp];
  1276  03AC  082B               	movf	_Temp,w
  1277  03AD  3E11               	addlw	low ((_VIP_PrioTab-__stringbase)| (0+32768))
  1278  03AE  0084               	movwf	4
  1279  03AF  120A  118A  2600  120A  118A  	fcall	stringdir
  1280  03B4  00FF               	movwf	btemp+1
  1281  03B5  087F               	movf	btemp+1,w
  1282  03B6  00AC               	movwf	_VIP
  1283  03B7                     l2056:
  1284                           
  1285                           ;VIP_MODE.c: 27:         reset=1;
  1286  03B7  01AD               	clrf	_reset
  1287  03B8  0AAD               	incf	_reset,f
  1288  03B9                     l2058:
  1289                           
  1290                           ;VIP_MODE.c: 11:     while(VIP==4)
  1291  03B9  3004               	movlw	4
  1292  03BA  062C               	xorwf	_VIP,w
  1293  03BB  1903               	btfsc	3,2
  1294  03BC  2BBE               	goto	u1491
  1295  03BD  2BBF               	goto	u1490
  1296  03BE                     u1491:
  1297  03BE  2B7E               	goto	l348
  1298  03BF                     u1490:
  1299  03BF  2BFB               	goto	l2084
  1300  03C0                     l354:	
  1301                           ;VIP_MODE.c: 32:             ;
  1302                           
  1303                           
  1304                           ;VIP_MODE.c: 31:          while(SysTick.On_Off)
  1305  03C0  182E               	btfsc	_SysTick,0
  1306  03C1  2BC3               	goto	u1501
  1307  03C2  2BC4               	goto	u1500
  1308  03C3                     u1501:
  1309  03C3  2BC0               	goto	l354
  1310  03C4                     u1500:
  1311  03C4                     l356:
  1312                           
  1313                           ;VIP_MODE.c: 33:         SysTick.On_Off=ON;
  1314  03C4  142E               	bsf	_SysTick,0
  1315  03C5                     l2060:
  1316                           
  1317                           ;VIP_MODE.c: 34:         Clr_LED();
  1318  03C5  120A  118A  26C1  120A  118A  	fcall	_Clr_LED
  1319  03CA                     l2062:
  1320                           
  1321                           ;VIP_MODE.c: 35:         LED_7SEGMENT_Update(Seg);
  1322  03CA  3034               	movlw	(low (_Seg| 0))& (0+255)
  1323  03CB  120A  118A  21E1  120A  118A  	fcall	_LED_7SEGMENT_Update
  1324  03D0                     l2064:
  1325                           
  1326                           ;VIP_MODE.c: 36:         ((TrafficLight*)&LAT)->LED.t2green=1;
  1327  03D0  16F9               	bsf	_LAT,5
  1328  03D1                     l2066:
  1329                           
  1330                           ;VIP_MODE.c: 37:         ((TrafficLight*)&LAT)->LED.t1red=1;
  1331  03D1  1479               	bsf	_LAT,0
  1332  03D2                     l2068:
  1333                           
  1334                           ;VIP_MODE.c: 38:         ((TrafficLight*)&LAT)->LED.t3red=1;
  1335  03D2  1779               	bsf	_LAT,6
  1336  03D3                     l2070:
  1337                           
  1338                           ;VIP_MODE.c: 39:         ((TrafficLight*)&LAT)->LED.t4red=1;
  1339  03D3  14FA               	bsf	_LAT+1,1
  1340  03D4                     l2072:
  1341                           
  1342                           ;VIP_MODE.c: 40:         Latch_Traffic_LED(&LAT);
  1343  03D4  3079               	movlw	(low (_LAT| 0))& (0+255)
  1344  03D5  120A  118A  268D  120A  118A  	fcall	_Latch_Traffic_LED
  1345  03DA                     l2074:
  1346                           
  1347                           ;VIP_MODE.c: 41:         Temp=0X00;
  1348  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1349  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1350  03DC  01AB               	clrf	_Temp
  1351  03DD                     l2076:
  1352                           
  1353                           ;VIP_MODE.c: 42:         Temp|=~(PORTB>>4);
  1354  03DD  0806               	movf	6,w	;volatile
  1355  03DE  00F6               	movwf	??_VIP_mode
  1356  03DF  3004               	movlw	4
  1357  03E0                     u1515:
  1358  03E0  1003               	clrc
  1359  03E1  0CF6               	rrf	??_VIP_mode,f
  1360  03E2  3EFF               	addlw	-1
  1361  03E3  1D03               	skipz
  1362  03E4  2BE0               	goto	u1515
  1363  03E5  0876               	movf	??_VIP_mode,w
  1364  03E6  3AFF               	xorlw	255
  1365  03E7  00FF               	movwf	btemp+1
  1366  03E8  087F               	movf	btemp+1,w
  1367  03E9  04AB               	iorwf	_Temp,f
  1368  03EA                     l2078:
  1369                           
  1370                           ;VIP_MODE.c: 43:         Temp|=0X0F;
  1371  03EA  300F               	movlw	15
  1372  03EB  00FF               	movwf	btemp+1
  1373  03EC  087F               	movf	btemp+1,w
  1374  03ED  04AB               	iorwf	_Temp,f
  1375  03EE                     l2080:
  1376                           
  1377                           ;VIP_MODE.c: 44:         VIP=VIP_PrioTab[Temp];
  1378  03EE  082B               	movf	_Temp,w
  1379  03EF  3E11               	addlw	low ((_VIP_PrioTab-__stringbase)| (0+32768))
  1380  03F0  0084               	movwf	4
  1381  03F1  120A  118A  2600  120A  118A  	fcall	stringdir
  1382  03F6  00FF               	movwf	btemp+1
  1383  03F7  087F               	movf	btemp+1,w
  1384  03F8  00AC               	movwf	_VIP
  1385  03F9                     l2082:
  1386                           
  1387                           ;VIP_MODE.c: 45:         reset=1;
  1388  03F9  01AD               	clrf	_reset
  1389  03FA  0AAD               	incf	_reset,f
  1390  03FB                     l2084:
  1391                           
  1392                           ;VIP_MODE.c: 29:      while(VIP==5)
  1393  03FB  3005               	movlw	5
  1394  03FC  062C               	xorwf	_VIP,w
  1395  03FD  1903               	btfsc	3,2
  1396  03FE  2C00               	goto	u1521
  1397  03FF  2C01               	goto	u1520
  1398  0400                     u1521:
  1399  0400  2BC0               	goto	l354
  1400  0401                     u1520:
  1401  0401  2C3D               	goto	l2110
  1402  0402                     l360:	
  1403                           ;VIP_MODE.c: 50:             ;
  1404                           
  1405                           
  1406                           ;VIP_MODE.c: 49:         while(SysTick.On_Off)
  1407  0402  182E               	btfsc	_SysTick,0
  1408  0403  2C05               	goto	u1531
  1409  0404  2C06               	goto	u1530
  1410  0405                     u1531:
  1411  0405  2C02               	goto	l360
  1412  0406                     u1530:
  1413  0406                     l362:
  1414                           
  1415                           ;VIP_MODE.c: 51:         SysTick.On_Off=ON;
  1416  0406  142E               	bsf	_SysTick,0
  1417  0407                     l2086:
  1418                           
  1419                           ;VIP_MODE.c: 52:         Clr_LED();
  1420  0407  120A  118A  26C1  120A  118A  	fcall	_Clr_LED
  1421  040C                     l2088:
  1422                           
  1423                           ;VIP_MODE.c: 53:         LED_7SEGMENT_Update(Seg);
  1424  040C  3034               	movlw	(low (_Seg| 0))& (0+255)
  1425  040D  120A  118A  21E1  120A  118A  	fcall	_LED_7SEGMENT_Update
  1426  0412                     l2090:
  1427                           
  1428                           ;VIP_MODE.c: 54:         ((TrafficLight*)&LAT)->LED.t3green=1;
  1429  0412  147A               	bsf	_LAT+1,0
  1430  0413                     l2092:
  1431                           
  1432                           ;VIP_MODE.c: 55:         ((TrafficLight*)&LAT)->LED.t1red=1;
  1433  0413  1479               	bsf	_LAT,0
  1434  0414                     l2094:
  1435                           
  1436                           ;VIP_MODE.c: 56:         ((TrafficLight*)&LAT)->LED.t2red=1;
  1437  0414  15F9               	bsf	_LAT,3
  1438  0415                     l2096:
  1439                           
  1440                           ;VIP_MODE.c: 57:         ((TrafficLight*)&LAT)->LED.t4red=1;
  1441  0415  14FA               	bsf	_LAT+1,1
  1442  0416                     l2098:
  1443                           
  1444                           ;VIP_MODE.c: 58:         Latch_Traffic_LED(&LAT);
  1445  0416  3079               	movlw	(low (_LAT| 0))& (0+255)
  1446  0417  120A  118A  268D  120A  118A  	fcall	_Latch_Traffic_LED
  1447  041C                     l2100:
  1448                           
  1449                           ;VIP_MODE.c: 59:         Temp=0X00;
  1450  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1451  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1452  041E  01AB               	clrf	_Temp
  1453  041F                     l2102:
  1454                           
  1455                           ;VIP_MODE.c: 60:         Temp|=~(PORTB>>4);
  1456  041F  0806               	movf	6,w	;volatile
  1457  0420  00F6               	movwf	??_VIP_mode
  1458  0421  3004               	movlw	4
  1459  0422                     u1545:
  1460  0422  1003               	clrc
  1461  0423  0CF6               	rrf	??_VIP_mode,f
  1462  0424  3EFF               	addlw	-1
  1463  0425  1D03               	skipz
  1464  0426  2C22               	goto	u1545
  1465  0427  0876               	movf	??_VIP_mode,w
  1466  0428  3AFF               	xorlw	255
  1467  0429  00FF               	movwf	btemp+1
  1468  042A  087F               	movf	btemp+1,w
  1469  042B  04AB               	iorwf	_Temp,f
  1470  042C                     l2104:
  1471                           
  1472                           ;VIP_MODE.c: 61:         Temp|=0X0F;
  1473  042C  300F               	movlw	15
  1474  042D  00FF               	movwf	btemp+1
  1475  042E  087F               	movf	btemp+1,w
  1476  042F  04AB               	iorwf	_Temp,f
  1477  0430                     l2106:
  1478                           
  1479                           ;VIP_MODE.c: 62:         VIP=VIP_PrioTab[Temp];
  1480  0430  082B               	movf	_Temp,w
  1481  0431  3E11               	addlw	low ((_VIP_PrioTab-__stringbase)| (0+32768))
  1482  0432  0084               	movwf	4
  1483  0433  120A  118A  2600  120A  118A  	fcall	stringdir
  1484  0438  00FF               	movwf	btemp+1
  1485  0439  087F               	movf	btemp+1,w
  1486  043A  00AC               	movwf	_VIP
  1487  043B                     l2108:
  1488                           
  1489                           ;VIP_MODE.c: 63:         reset=1;
  1490  043B  01AD               	clrf	_reset
  1491  043C  0AAD               	incf	_reset,f
  1492  043D                     l2110:
  1493                           
  1494                           ;VIP_MODE.c: 47:    while(VIP==6)
  1495  043D  3006               	movlw	6
  1496  043E  062C               	xorwf	_VIP,w
  1497  043F  1903               	btfsc	3,2
  1498  0440  2C42               	goto	u1551
  1499  0441  2C43               	goto	u1550
  1500  0442                     u1551:
  1501  0442  2C02               	goto	l360
  1502  0443                     u1550:
  1503  0443  2C7F               	goto	l2136
  1504  0444                     l366:	
  1505                           ;VIP_MODE.c: 68:             ;
  1506                           
  1507                           
  1508                           ;VIP_MODE.c: 67:         while(SysTick.On_Off)
  1509  0444  182E               	btfsc	_SysTick,0
  1510  0445  2C47               	goto	u1561
  1511  0446  2C48               	goto	u1560
  1512  0447                     u1561:
  1513  0447  2C44               	goto	l366
  1514  0448                     u1560:
  1515  0448                     l368:
  1516                           
  1517                           ;VIP_MODE.c: 69:         SysTick.On_Off=ON;
  1518  0448  142E               	bsf	_SysTick,0
  1519  0449                     l2112:
  1520                           
  1521                           ;VIP_MODE.c: 70:         Clr_LED();
  1522  0449  120A  118A  26C1  120A  118A  	fcall	_Clr_LED
  1523  044E                     l2114:
  1524                           
  1525                           ;VIP_MODE.c: 71:         LED_7SEGMENT_Update(Seg);
  1526  044E  3034               	movlw	(low (_Seg| 0))& (0+255)
  1527  044F  120A  118A  21E1  120A  118A  	fcall	_LED_7SEGMENT_Update
  1528  0454                     l2116:
  1529                           
  1530                           ;VIP_MODE.c: 72:         ((TrafficLight*)&LAT)->LED.t4green=1;
  1531  0454  15FA               	bsf	_LAT+1,3
  1532  0455                     l2118:
  1533                           
  1534                           ;VIP_MODE.c: 73:         ((TrafficLight*)&LAT)->LED.t2red=1;
  1535  0455  15F9               	bsf	_LAT,3
  1536  0456                     l2120:
  1537                           
  1538                           ;VIP_MODE.c: 74:         ((TrafficLight*)&LAT)->LED.t3red=1;
  1539  0456  1779               	bsf	_LAT,6
  1540  0457                     l2122:
  1541                           
  1542                           ;VIP_MODE.c: 75:         ((TrafficLight*)&LAT)->LED.t1red=1;
  1543  0457  1479               	bsf	_LAT,0
  1544  0458                     l2124:
  1545                           
  1546                           ;VIP_MODE.c: 76:         Latch_Traffic_LED(&LAT);
  1547  0458  3079               	movlw	(low (_LAT| 0))& (0+255)
  1548  0459  120A  118A  268D  120A  118A  	fcall	_Latch_Traffic_LED
  1549  045E                     l2126:
  1550                           
  1551                           ;VIP_MODE.c: 77:         Temp=0X00;
  1552  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1553  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0460  01AB               	clrf	_Temp
  1555  0461                     l2128:
  1556                           
  1557                           ;VIP_MODE.c: 78:         Temp|=~(PORTB>>4);
  1558  0461  0806               	movf	6,w	;volatile
  1559  0462  00F6               	movwf	??_VIP_mode
  1560  0463  3004               	movlw	4
  1561  0464                     u1575:
  1562  0464  1003               	clrc
  1563  0465  0CF6               	rrf	??_VIP_mode,f
  1564  0466  3EFF               	addlw	-1
  1565  0467  1D03               	skipz
  1566  0468  2C64               	goto	u1575
  1567  0469  0876               	movf	??_VIP_mode,w
  1568  046A  3AFF               	xorlw	255
  1569  046B  00FF               	movwf	btemp+1
  1570  046C  087F               	movf	btemp+1,w
  1571  046D  04AB               	iorwf	_Temp,f
  1572  046E                     l2130:
  1573                           
  1574                           ;VIP_MODE.c: 79:         Temp|=0X0F;
  1575  046E  300F               	movlw	15
  1576  046F  00FF               	movwf	btemp+1
  1577  0470  087F               	movf	btemp+1,w
  1578  0471  04AB               	iorwf	_Temp,f
  1579  0472                     l2132:
  1580                           
  1581                           ;VIP_MODE.c: 80:         VIP=VIP_PrioTab[Temp];
  1582  0472  082B               	movf	_Temp,w
  1583  0473  3E11               	addlw	low ((_VIP_PrioTab-__stringbase)| (0+32768))
  1584  0474  0084               	movwf	4
  1585  0475  120A  118A  2600  120A  118A  	fcall	stringdir
  1586  047A  00FF               	movwf	btemp+1
  1587  047B  087F               	movf	btemp+1,w
  1588  047C  00AC               	movwf	_VIP
  1589  047D                     l2134:
  1590                           
  1591                           ;VIP_MODE.c: 81:         reset=1;
  1592  047D  01AD               	clrf	_reset
  1593  047E  0AAD               	incf	_reset,f
  1594  047F                     l2136:
  1595                           
  1596                           ;VIP_MODE.c: 65:     while(VIP==7)
  1597  047F  3007               	movlw	7
  1598  0480  062C               	xorwf	_VIP,w
  1599  0481  1903               	btfsc	3,2
  1600  0482  2C84               	goto	u1581
  1601  0483  2C85               	goto	u1580
  1602  0484                     u1581:
  1603  0484  2C44               	goto	l366
  1604  0485                     u1580:
  1605  0485                     l370:
  1606  0485  0008               	return
  1607  0486                     __end_of_VIP_mode:
  1608                           
  1609                           	psect	text2
  1610  068D                     __ptext2:	
  1611 ;; *************** function _Latch_Traffic_LED *****************
  1612 ;; Defined at:
  1613 ;;		line 4 in file "TRAFFIC.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  LATptr          1    wreg     PTR int 
  1616 ;;		 -> LAT(2), 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  LATptr          1    5[COMMON] PTR int 
  1619 ;;		 -> LAT(2), 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         1       0       0       0       0
  1631 ;;      Temps:          2       0       0       0       0
  1632 ;;      Totals:         3       0       0       0       0
  1633 ;;Total ram usage:        3 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    2
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;;		_VIP_mode
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _Latch_Traffic_LED
  1646  068D                     _Latch_Traffic_LED:
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _Latch_Traffic_LED: [wreg-fsr0h+status,2]
  1650                           ;Latch_Traffic_LED@LATptr stored from wreg
  1651  068D  00F5               	movwf	Latch_Traffic_LED@LATptr
  1652  068E                     l1764:
  1653                           
  1654                           ;TRAFFIC.c: 4: void Latch_Traffic_LED(int *LATptr);TRAFFIC.c: 5: {;TRAFFIC.c: 6:     POR
      +                          TA= *LATptr;
  1655  068E  0875               	movf	Latch_Traffic_LED@LATptr,w
  1656  068F  0084               	movwf	4
  1657  0690  0800               	movf	0,w
  1658  0691  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0692  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0693  0085               	movwf	5	;volatile
  1661  0694                     l1766:
  1662                           
  1663                           ;TRAFFIC.c: 7:    PORTB=(*LATptr>>8);
  1664  0694  0875               	movf	Latch_Traffic_LED@LATptr,w
  1665  0695  0084               	movwf	4
  1666  0696  0800               	movf	0,w
  1667  0697  00F3               	movwf	??_Latch_Traffic_LED
  1668  0698  0A84               	incf	4,f
  1669  0699  0800               	movf	0,w
  1670  069A  00F4               	movwf	??_Latch_Traffic_LED+1
  1671  069B  0874               	movf	??_Latch_Traffic_LED+1,w
  1672  069C  0086               	movwf	6	;volatile
  1673  069D                     l217:
  1674  069D  0008               	return
  1675  069E                     __end_of_Latch_Traffic_LED:
  1676                           
  1677                           	psect	text3
  1678  01E1                     __ptext3:	
  1679 ;; *************** function _LED_7SEGMENT_Update *****************
  1680 ;; Defined at:
  1681 ;;		line 21 in file "LED_SEGMENT.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  val             1    wreg     PTR unsigned char 
  1684 ;;		 -> Seg(10), 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  val             1    5[COMMON] PTR unsigned char 
  1687 ;;		 -> Seg(10), 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         0       0       0       0       0
  1698 ;;      Locals:         1       0       0       0       0
  1699 ;;      Temps:          2       0       0       0       0
  1700 ;;      Totals:         3       0       0       0       0
  1701 ;;Total ram usage:        3 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    2
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;;		_VIP_mode
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _LED_7SEGMENT_Update
  1714  01E1                     _LED_7SEGMENT_Update:
  1715                           
  1716                           ;incstack = 0
  1717                           ; Regs used in _LED_7SEGMENT_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1718                           ;LED_7SEGMENT_Update@val stored from wreg
  1719  01E1  00F5               	movwf	LED_7SEGMENT_Update@val
  1720  01E2                     l1618:
  1721                           
  1722                           ;LED_SEGMENT.c: 21: void LED_7SEGMENT_Update(char val[]);LED_SEGMENT.c: 22: {;LED_SEGMEN
      +                          T.c: 23:    static char State=0;;LED_SEGMENT.c: 24:    static char BlinkCounter=0;;LED_S
      +                          EGMENT.c: 26:    BlinkCounter++;
  1723  01E2  3001               	movlw	1
  1724  01E3  00FF               	movwf	btemp+1
  1725  01E4  087F               	movf	btemp+1,w
  1726  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1727  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1728  01E7  07A8               	addwf	LED_7SEGMENT_Update@BlinkCounter,f
  1729  01E8                     l1620:
  1730                           
  1731                           ;LED_SEGMENT.c: 27:    if ( BlinkCounter==100)
  1732  01E8  3064               	movlw	100
  1733  01E9  0628               	xorwf	LED_7SEGMENT_Update@BlinkCounter,w
  1734  01EA  1D03               	btfss	3,2
  1735  01EB  29ED               	goto	u831
  1736  01EC  29EE               	goto	u830
  1737  01ED                     u831:
  1738  01ED  29F1               	goto	l1624
  1739  01EE                     u830:
  1740  01EE                     l1622:
  1741                           
  1742                           ;LED_SEGMENT.c: 28:    {;LED_SEGMENT.c: 29:        BlinkStatus=1;
  1743  01EE  01F8               	clrf	_BlinkStatus
  1744  01EF  0AF8               	incf	_BlinkStatus,f
  1745                           
  1746                           ;LED_SEGMENT.c: 30:    }
  1747  01F0  29F9               	goto	l163
  1748  01F1                     l1624:
  1749  01F1  30C8               	movlw	200
  1750  01F2  0228               	subwf	LED_7SEGMENT_Update@BlinkCounter,w
  1751  01F3  1C03               	skipc
  1752  01F4  29F6               	goto	u841
  1753  01F5  29F7               	goto	u840
  1754  01F6                     u841:
  1755  01F6  29F9               	goto	l163
  1756  01F7                     u840:
  1757  01F7                     l1626:
  1758                           
  1759                           ;LED_SEGMENT.c: 32:    {;LED_SEGMENT.c: 33:        BlinkStatus=0;
  1760  01F7  01F8               	clrf	_BlinkStatus
  1761                           
  1762                           ;LED_SEGMENT.c: 34:        BlinkCounter=0;
  1763  01F8  01A8               	clrf	LED_7SEGMENT_Update@BlinkCounter
  1764  01F9                     l163:
  1765                           
  1766                           ;LED_SEGMENT.c: 37:    PORTD=0x00;
  1767  01F9  0188               	clrf	8	;volatile
  1768                           
  1769                           ;LED_SEGMENT.c: 38:    switch(State)
  1770  01FA  2B44               	goto	l1758
  1771  01FB                     l1628:
  1772                           
  1773                           ;LED_SEGMENT.c: 41:            PORTC = ~SegTab[val[0]];
  1774  01FB  0875               	movf	LED_7SEGMENT_Update@val,w
  1775  01FC  0084               	movwf	4
  1776  01FD  1383               	bcf	3,7	;select IRP bank0
  1777  01FE  0800               	movf	0,w
  1778  01FF  3E01               	addlw	low ((_SegTab-__stringbase)| (0+32768))
  1779  0200  0084               	movwf	4
  1780  0201  120A  118A  2600  120A  118A  	fcall	stringdir
  1781  0206  3AFF               	xorlw	255
  1782  0207  0087               	movwf	7	;volatile
  1783  0208                     l1630:
  1784                           
  1785                           ;LED_SEGMENT.c: 42:            if( val[8] & 1)
  1786  0208  0875               	movf	LED_7SEGMENT_Update@val,w
  1787  0209  3E08               	addlw	8
  1788  020A  0084               	movwf	4
  1789  020B  1C00               	btfss	0,0
  1790  020C  2A0E               	goto	u851
  1791  020D  2A0F               	goto	u850
  1792  020E                     u851:
  1793  020E  2A10               	goto	l1634
  1794  020F                     u850:
  1795  020F                     l1632:
  1796                           
  1797                           ;LED_SEGMENT.c: 43:            PORTC |=1<<1;
  1798  020F  1487               	bsf	7,1	;volatile
  1799  0210                     l1634:
  1800                           
  1801                           ;LED_SEGMENT.c: 44:            if ( val[9] & 1 && BlinkStatus==1 )
  1802  0210  0875               	movf	LED_7SEGMENT_Update@val,w
  1803  0211  3E09               	addlw	9
  1804  0212  0084               	movwf	4
  1805  0213  1C00               	btfss	0,0
  1806  0214  2A16               	goto	u861
  1807  0215  2A17               	goto	u860
  1808  0216                     u861:
  1809  0216  2A1E               	goto	l1640
  1810  0217                     u860:
  1811  0217                     l1636:
  1812  0217  0378               	decf	_BlinkStatus,w
  1813  0218  1D03               	btfss	3,2
  1814  0219  2A1B               	goto	u871
  1815  021A  2A1C               	goto	u870
  1816  021B                     u871:
  1817  021B  2A1E               	goto	l1640
  1818  021C                     u870:
  1819  021C                     l1638:
  1820                           
  1821                           ;LED_SEGMENT.c: 45:            {;LED_SEGMENT.c: 46:                PORTC=0XFF;
  1822  021C  30FF               	movlw	255
  1823  021D  0087               	movwf	7	;volatile
  1824  021E                     l1640:
  1825                           
  1826                           ;LED_SEGMENT.c: 49:            ((Segment*)&PORTD)->Seg.s1d1=1;
  1827  021E  1408               	bsf	8,0
  1828  021F                     l1642:
  1829                           
  1830                           ;LED_SEGMENT.c: 51:            State=1;
  1831  021F  01A9               	clrf	LED_7SEGMENT_Update@State
  1832  0220  0AA9               	incf	LED_7SEGMENT_Update@State,f
  1833                           
  1834                           ;LED_SEGMENT.c: 52:            break;
  1835  0221  2B66               	goto	l192
  1836  0222                     l1644:
  1837                           
  1838                           ;LED_SEGMENT.c: 54:            PORTC = ~SegTab[val[1]];
  1839  0222  0A75               	incf	LED_7SEGMENT_Update@val,w
  1840  0223  0084               	movwf	4
  1841  0224  1383               	bcf	3,7	;select IRP bank0
  1842  0225  0800               	movf	0,w
  1843  0226  3E01               	addlw	low ((_SegTab-__stringbase)| (0+32768))
  1844  0227  0084               	movwf	4
  1845  0228  120A  118A  2600  120A  118A  	fcall	stringdir
  1846  022D  3AFF               	xorlw	255
  1847  022E  0087               	movwf	7	;volatile
  1848  022F                     l1646:
  1849                           
  1850                           ;LED_SEGMENT.c: 55:            if( val[8] & 1)
  1851  022F  0875               	movf	LED_7SEGMENT_Update@val,w
  1852  0230  3E08               	addlw	8
  1853  0231  0084               	movwf	4
  1854  0232  1C00               	btfss	0,0
  1855  0233  2A35               	goto	u881
  1856  0234  2A36               	goto	u880
  1857  0235                     u881:
  1858  0235  2A37               	goto	l1650
  1859  0236                     u880:
  1860  0236                     l1648:
  1861                           
  1862                           ;LED_SEGMENT.c: 56:            PORTC |=1<<7;
  1863  0236  1787               	bsf	7,7	;volatile
  1864  0237                     l1650:
  1865                           
  1866                           ;LED_SEGMENT.c: 57:            if ( val[9] & 1 && BlinkStatus==1 )
  1867  0237  0875               	movf	LED_7SEGMENT_Update@val,w
  1868  0238  3E09               	addlw	9
  1869  0239  0084               	movwf	4
  1870  023A  1C00               	btfss	0,0
  1871  023B  2A3D               	goto	u891
  1872  023C  2A3E               	goto	u890
  1873  023D                     u891:
  1874  023D  2A45               	goto	l1656
  1875  023E                     u890:
  1876  023E                     l1652:
  1877  023E  0378               	decf	_BlinkStatus,w
  1878  023F  1D03               	btfss	3,2
  1879  0240  2A42               	goto	u901
  1880  0241  2A43               	goto	u900
  1881  0242                     u901:
  1882  0242  2A45               	goto	l1656
  1883  0243                     u900:
  1884  0243                     l1654:
  1885                           
  1886                           ;LED_SEGMENT.c: 58:            {;LED_SEGMENT.c: 59:                PORTC=0XFF;
  1887  0243  30FF               	movlw	255
  1888  0244  0087               	movwf	7	;volatile
  1889  0245                     l1656:
  1890                           
  1891                           ;LED_SEGMENT.c: 63:            ((Segment*)&PORTD)->Seg.s1d2=1;
  1892  0245  1488               	bsf	8,1
  1893  0246                     l1658:
  1894                           
  1895                           ;LED_SEGMENT.c: 65:            State=2;
  1896  0246  3002               	movlw	2
  1897  0247  00FF               	movwf	btemp+1
  1898  0248  087F               	movf	btemp+1,w
  1899  0249  00A9               	movwf	LED_7SEGMENT_Update@State
  1900                           
  1901                           ;LED_SEGMENT.c: 66:            break;
  1902  024A  2B66               	goto	l192
  1903  024B                     l1660:
  1904                           
  1905                           ;LED_SEGMENT.c: 68:            PORTC =~ SegTab[val[2]];
  1906  024B  0875               	movf	LED_7SEGMENT_Update@val,w
  1907  024C  3E02               	addlw	2
  1908  024D  0084               	movwf	4
  1909  024E  1383               	bcf	3,7	;select IRP bank0
  1910  024F  0800               	movf	0,w
  1911  0250  3E01               	addlw	low ((_SegTab-__stringbase)| (0+32768))
  1912  0251  0084               	movwf	4
  1913  0252  120A  118A  2600  120A  118A  	fcall	stringdir
  1914  0257  3AFF               	xorlw	255
  1915  0258  0087               	movwf	7	;volatile
  1916  0259                     l1662:
  1917                           
  1918                           ;LED_SEGMENT.c: 69:            if( val[8] & 1)
  1919  0259  0875               	movf	LED_7SEGMENT_Update@val,w
  1920  025A  3E08               	addlw	8
  1921  025B  0084               	movwf	4
  1922  025C  1C00               	btfss	0,0
  1923  025D  2A5F               	goto	u911
  1924  025E  2A60               	goto	u910
  1925  025F                     u911:
  1926  025F  2A61               	goto	l1666
  1927  0260                     u910:
  1928  0260                     l1664:
  1929                           
  1930                           ;LED_SEGMENT.c: 70:              PORTC |=1<<7;
  1931  0260  1787               	bsf	7,7	;volatile
  1932  0261                     l1666:
  1933                           
  1934                           ;LED_SEGMENT.c: 71:            if ( val[9] & 1 && BlinkStatus==1 )
  1935  0261  0875               	movf	LED_7SEGMENT_Update@val,w
  1936  0262  3E09               	addlw	9
  1937  0263  0084               	movwf	4
  1938  0264  1C00               	btfss	0,0
  1939  0265  2A67               	goto	u921
  1940  0266  2A68               	goto	u920
  1941  0267                     u921:
  1942  0267  2A6F               	goto	l1672
  1943  0268                     u920:
  1944  0268                     l1668:
  1945  0268  0378               	decf	_BlinkStatus,w
  1946  0269  1D03               	btfss	3,2
  1947  026A  2A6C               	goto	u931
  1948  026B  2A6D               	goto	u930
  1949  026C                     u931:
  1950  026C  2A6F               	goto	l1672
  1951  026D                     u930:
  1952  026D                     l1670:
  1953                           
  1954                           ;LED_SEGMENT.c: 72:            {;LED_SEGMENT.c: 73:                PORTC=0XFF;
  1955  026D  30FF               	movlw	255
  1956  026E  0087               	movwf	7	;volatile
  1957  026F                     l1672:
  1958                           
  1959                           ;LED_SEGMENT.c: 76:            ((Segment*)&PORTD)->Seg.s2d1=1;
  1960  026F  1508               	bsf	8,2
  1961  0270                     l1674:
  1962                           
  1963                           ;LED_SEGMENT.c: 78:            State=3;
  1964  0270  3003               	movlw	3
  1965  0271  00FF               	movwf	btemp+1
  1966  0272  087F               	movf	btemp+1,w
  1967  0273  00A9               	movwf	LED_7SEGMENT_Update@State
  1968                           
  1969                           ;LED_SEGMENT.c: 79:            break;
  1970  0274  2B66               	goto	l192
  1971  0275                     l1676:
  1972                           
  1973                           ;LED_SEGMENT.c: 81:            PORTC = ~SegTab[val[3]];
  1974  0275  0875               	movf	LED_7SEGMENT_Update@val,w
  1975  0276  3E03               	addlw	3
  1976  0277  0084               	movwf	4
  1977  0278  1383               	bcf	3,7	;select IRP bank0
  1978  0279  0800               	movf	0,w
  1979  027A  3E01               	addlw	low ((_SegTab-__stringbase)| (0+32768))
  1980  027B  0084               	movwf	4
  1981  027C  120A  118A  2600  120A  118A  	fcall	stringdir
  1982  0281  3AFF               	xorlw	255
  1983  0282  0087               	movwf	7	;volatile
  1984  0283                     l1678:
  1985                           
  1986                           ;LED_SEGMENT.c: 83:            if( val[8] & 1)
  1987  0283  0875               	movf	LED_7SEGMENT_Update@val,w
  1988  0284  3E08               	addlw	8
  1989  0285  0084               	movwf	4
  1990  0286  1C00               	btfss	0,0
  1991  0287  2A89               	goto	u941
  1992  0288  2A8A               	goto	u940
  1993  0289                     u941:
  1994  0289  2A8B               	goto	l1682
  1995  028A                     u940:
  1996  028A                     l1680:
  1997                           
  1998                           ;LED_SEGMENT.c: 84:              PORTC |=1<<7;
  1999  028A  1787               	bsf	7,7	;volatile
  2000  028B                     l1682:
  2001                           
  2002                           ;LED_SEGMENT.c: 85:            if ( val[9] & 1 && BlinkStatus==1 )
  2003  028B  0875               	movf	LED_7SEGMENT_Update@val,w
  2004  028C  3E09               	addlw	9
  2005  028D  0084               	movwf	4
  2006  028E  1C00               	btfss	0,0
  2007  028F  2A91               	goto	u951
  2008  0290  2A92               	goto	u950
  2009  0291                     u951:
  2010  0291  2A99               	goto	l1688
  2011  0292                     u950:
  2012  0292                     l1684:
  2013  0292  0378               	decf	_BlinkStatus,w
  2014  0293  1D03               	btfss	3,2
  2015  0294  2A96               	goto	u961
  2016  0295  2A97               	goto	u960
  2017  0296                     u961:
  2018  0296  2A99               	goto	l1688
  2019  0297                     u960:
  2020  0297                     l1686:
  2021                           
  2022                           ;LED_SEGMENT.c: 86:            {;LED_SEGMENT.c: 87:                PORTC=0XFF;
  2023  0297  30FF               	movlw	255
  2024  0298  0087               	movwf	7	;volatile
  2025  0299                     l1688:
  2026                           
  2027                           ;LED_SEGMENT.c: 89:            ((Segment*)&PORTD)->Seg.s2d2=1;
  2028  0299  1588               	bsf	8,3
  2029  029A                     l1690:
  2030                           
  2031                           ;LED_SEGMENT.c: 91:            State=4;
  2032  029A  3004               	movlw	4
  2033  029B  00FF               	movwf	btemp+1
  2034  029C  087F               	movf	btemp+1,w
  2035  029D  00A9               	movwf	LED_7SEGMENT_Update@State
  2036                           
  2037                           ;LED_SEGMENT.c: 92:            break;
  2038  029E  2B66               	goto	l192
  2039  029F                     l1692:
  2040                           
  2041                           ;LED_SEGMENT.c: 94:            PORTC =~ SegTab[val[4]];
  2042  029F  0875               	movf	LED_7SEGMENT_Update@val,w
  2043  02A0  3E04               	addlw	4
  2044  02A1  0084               	movwf	4
  2045  02A2  1383               	bcf	3,7	;select IRP bank0
  2046  02A3  0800               	movf	0,w
  2047  02A4  3E01               	addlw	low ((_SegTab-__stringbase)| (0+32768))
  2048  02A5  0084               	movwf	4
  2049  02A6  120A  118A  2600  120A  118A  	fcall	stringdir
  2050  02AB  3AFF               	xorlw	255
  2051  02AC  0087               	movwf	7	;volatile
  2052  02AD                     l1694:
  2053                           
  2054                           ;LED_SEGMENT.c: 95:            if( val[8] & 1)
  2055  02AD  0875               	movf	LED_7SEGMENT_Update@val,w
  2056  02AE  3E08               	addlw	8
  2057  02AF  0084               	movwf	4
  2058  02B0  1C00               	btfss	0,0
  2059  02B1  2AB3               	goto	u971
  2060  02B2  2AB4               	goto	u970
  2061  02B3                     u971:
  2062  02B3  2AB5               	goto	l1698
  2063  02B4                     u970:
  2064  02B4                     l1696:
  2065                           
  2066                           ;LED_SEGMENT.c: 96:              PORTC |=1<<7;
  2067  02B4  1787               	bsf	7,7	;volatile
  2068  02B5                     l1698:
  2069                           
  2070                           ;LED_SEGMENT.c: 97:            if ( val[9] & 1 && BlinkStatus==1 )
  2071  02B5  0875               	movf	LED_7SEGMENT_Update@val,w
  2072  02B6  3E09               	addlw	9
  2073  02B7  0084               	movwf	4
  2074  02B8  1C00               	btfss	0,0
  2075  02B9  2ABB               	goto	u981
  2076  02BA  2ABC               	goto	u980
  2077  02BB                     u981:
  2078  02BB  2AC3               	goto	l1704
  2079  02BC                     u980:
  2080  02BC                     l1700:
  2081  02BC  0378               	decf	_BlinkStatus,w
  2082  02BD  1D03               	btfss	3,2
  2083  02BE  2AC0               	goto	u991
  2084  02BF  2AC1               	goto	u990
  2085  02C0                     u991:
  2086  02C0  2AC3               	goto	l1704
  2087  02C1                     u990:
  2088  02C1                     l1702:
  2089                           
  2090                           ;LED_SEGMENT.c: 98:            {;LED_SEGMENT.c: 99:                PORTC=0XFF;
  2091  02C1  30FF               	movlw	255
  2092  02C2  0087               	movwf	7	;volatile
  2093  02C3                     l1704:
  2094                           
  2095                           ;LED_SEGMENT.c: 101:            ((Segment*)&PORTD)->Seg.s3d1=1;
  2096  02C3  1608               	bsf	8,4
  2097  02C4                     l1706:
  2098                           
  2099                           ;LED_SEGMENT.c: 103:            State=5;
  2100  02C4  3005               	movlw	5
  2101  02C5  00FF               	movwf	btemp+1
  2102  02C6  087F               	movf	btemp+1,w
  2103  02C7  00A9               	movwf	LED_7SEGMENT_Update@State
  2104                           
  2105                           ;LED_SEGMENT.c: 104:            break;
  2106  02C8  2B66               	goto	l192
  2107  02C9                     l1708:
  2108                           
  2109                           ;LED_SEGMENT.c: 106:            PORTC = ~SegTab[val[5]];
  2110  02C9  0875               	movf	LED_7SEGMENT_Update@val,w
  2111  02CA  3E05               	addlw	5
  2112  02CB  0084               	movwf	4
  2113  02CC  1383               	bcf	3,7	;select IRP bank0
  2114  02CD  0800               	movf	0,w
  2115  02CE  3E01               	addlw	low ((_SegTab-__stringbase)| (0+32768))
  2116  02CF  0084               	movwf	4
  2117  02D0  120A  118A  2600  120A  118A  	fcall	stringdir
  2118  02D5  3AFF               	xorlw	255
  2119  02D6  0087               	movwf	7	;volatile
  2120  02D7                     l1710:
  2121                           
  2122                           ;LED_SEGMENT.c: 107:            if( val[8] & 1)
  2123  02D7  0875               	movf	LED_7SEGMENT_Update@val,w
  2124  02D8  3E08               	addlw	8
  2125  02D9  0084               	movwf	4
  2126  02DA  1C00               	btfss	0,0
  2127  02DB  2ADD               	goto	u1001
  2128  02DC  2ADE               	goto	u1000
  2129  02DD                     u1001:
  2130  02DD  2ADF               	goto	l1714
  2131  02DE                     u1000:
  2132  02DE                     l1712:
  2133                           
  2134                           ;LED_SEGMENT.c: 108:            PORTC |=1<<7;
  2135  02DE  1787               	bsf	7,7	;volatile
  2136  02DF                     l1714:
  2137                           
  2138                           ;LED_SEGMENT.c: 109:             if ( val[9] & 1 && BlinkStatus==1 )
  2139  02DF  0875               	movf	LED_7SEGMENT_Update@val,w
  2140  02E0  3E09               	addlw	9
  2141  02E1  0084               	movwf	4
  2142  02E2  1C00               	btfss	0,0
  2143  02E3  2AE5               	goto	u1011
  2144  02E4  2AE6               	goto	u1010
  2145  02E5                     u1011:
  2146  02E5  2AED               	goto	l1720
  2147  02E6                     u1010:
  2148  02E6                     l1716:
  2149  02E6  0378               	decf	_BlinkStatus,w
  2150  02E7  1D03               	btfss	3,2
  2151  02E8  2AEA               	goto	u1021
  2152  02E9  2AEB               	goto	u1020
  2153  02EA                     u1021:
  2154  02EA  2AED               	goto	l1720
  2155  02EB                     u1020:
  2156  02EB                     l1718:
  2157                           
  2158                           ;LED_SEGMENT.c: 110:            {;LED_SEGMENT.c: 111:                PORTC=0XFF;
  2159  02EB  30FF               	movlw	255
  2160  02EC  0087               	movwf	7	;volatile
  2161  02ED                     l1720:
  2162                           
  2163                           ;LED_SEGMENT.c: 114:            ((Segment*)&PORTD)->Seg.s3d2=1;
  2164  02ED  1688               	bsf	8,5
  2165  02EE                     l1722:
  2166                           
  2167                           ;LED_SEGMENT.c: 116:            State=6;
  2168  02EE  3006               	movlw	6
  2169  02EF  00FF               	movwf	btemp+1
  2170  02F0  087F               	movf	btemp+1,w
  2171  02F1  00A9               	movwf	LED_7SEGMENT_Update@State
  2172                           
  2173                           ;LED_SEGMENT.c: 117:            break;
  2174  02F2  2B66               	goto	l192
  2175  02F3                     l1724:
  2176                           
  2177                           ;LED_SEGMENT.c: 120:            PORTC =~ SegTab[val[6]];
  2178  02F3  0875               	movf	LED_7SEGMENT_Update@val,w
  2179  02F4  3E06               	addlw	6
  2180  02F5  0084               	movwf	4
  2181  02F6  1383               	bcf	3,7	;select IRP bank0
  2182  02F7  0800               	movf	0,w
  2183  02F8  3E01               	addlw	low ((_SegTab-__stringbase)| (0+32768))
  2184  02F9  0084               	movwf	4
  2185  02FA  120A  118A  2600  120A  118A  	fcall	stringdir
  2186  02FF  3AFF               	xorlw	255
  2187  0300  0087               	movwf	7	;volatile
  2188  0301                     l1726:
  2189                           
  2190                           ;LED_SEGMENT.c: 121:            if( val[8] & 1)
  2191  0301  0875               	movf	LED_7SEGMENT_Update@val,w
  2192  0302  3E08               	addlw	8
  2193  0303  0084               	movwf	4
  2194  0304  1C00               	btfss	0,0
  2195  0305  2B07               	goto	u1031
  2196  0306  2B08               	goto	u1030
  2197  0307                     u1031:
  2198  0307  2B09               	goto	l1730
  2199  0308                     u1030:
  2200  0308                     l1728:
  2201                           
  2202                           ;LED_SEGMENT.c: 122:            PORTC |=1<<7;
  2203  0308  1787               	bsf	7,7	;volatile
  2204  0309                     l1730:
  2205                           
  2206                           ;LED_SEGMENT.c: 123:             if ( val[9] & 1 && BlinkStatus==1 )
  2207  0309  0875               	movf	LED_7SEGMENT_Update@val,w
  2208  030A  3E09               	addlw	9
  2209  030B  0084               	movwf	4
  2210  030C  1C00               	btfss	0,0
  2211  030D  2B0F               	goto	u1041
  2212  030E  2B10               	goto	u1040
  2213  030F                     u1041:
  2214  030F  2B17               	goto	l1736
  2215  0310                     u1040:
  2216  0310                     l1732:
  2217  0310  0378               	decf	_BlinkStatus,w
  2218  0311  1D03               	btfss	3,2
  2219  0312  2B14               	goto	u1051
  2220  0313  2B15               	goto	u1050
  2221  0314                     u1051:
  2222  0314  2B17               	goto	l1736
  2223  0315                     u1050:
  2224  0315                     l1734:
  2225                           
  2226                           ;LED_SEGMENT.c: 124:            {;LED_SEGMENT.c: 125:                PORTC=0XFF;
  2227  0315  30FF               	movlw	255
  2228  0316  0087               	movwf	7	;volatile
  2229  0317                     l1736:
  2230                           
  2231                           ;LED_SEGMENT.c: 128:            ((Segment*)&PORTD)->Seg.s4d1=1;
  2232  0317  1708               	bsf	8,6
  2233  0318                     l1738:
  2234                           
  2235                           ;LED_SEGMENT.c: 130:            State=7;
  2236  0318  3007               	movlw	7
  2237  0319  00FF               	movwf	btemp+1
  2238  031A  087F               	movf	btemp+1,w
  2239  031B  00A9               	movwf	LED_7SEGMENT_Update@State
  2240                           
  2241                           ;LED_SEGMENT.c: 131:            break;
  2242  031C  2B66               	goto	l192
  2243  031D                     l1740:
  2244                           
  2245                           ;LED_SEGMENT.c: 134:            PORTC =~ SegTab[val[7]];
  2246  031D  0875               	movf	LED_7SEGMENT_Update@val,w
  2247  031E  3E07               	addlw	7
  2248  031F  0084               	movwf	4
  2249  0320  1383               	bcf	3,7	;select IRP bank0
  2250  0321  0800               	movf	0,w
  2251  0322  3E01               	addlw	low ((_SegTab-__stringbase)| (0+32768))
  2252  0323  0084               	movwf	4
  2253  0324  120A  118A  2600  120A  118A  	fcall	stringdir
  2254  0329  3AFF               	xorlw	255
  2255  032A  0087               	movwf	7	;volatile
  2256  032B                     l1742:
  2257                           
  2258                           ;LED_SEGMENT.c: 135:            if( val[8] & 1)
  2259  032B  0875               	movf	LED_7SEGMENT_Update@val,w
  2260  032C  3E08               	addlw	8
  2261  032D  0084               	movwf	4
  2262  032E  1C00               	btfss	0,0
  2263  032F  2B31               	goto	u1061
  2264  0330  2B32               	goto	u1060
  2265  0331                     u1061:
  2266  0331  2B33               	goto	l1746
  2267  0332                     u1060:
  2268  0332                     l1744:
  2269                           
  2270                           ;LED_SEGMENT.c: 136:            PORTC |=1<<7;
  2271  0332  1787               	bsf	7,7	;volatile
  2272  0333                     l1746:
  2273                           
  2274                           ;LED_SEGMENT.c: 137:             if ( val[9] & 1 && BlinkStatus==1 )
  2275  0333  0875               	movf	LED_7SEGMENT_Update@val,w
  2276  0334  3E09               	addlw	9
  2277  0335  0084               	movwf	4
  2278  0336  1C00               	btfss	0,0
  2279  0337  2B39               	goto	u1071
  2280  0338  2B3A               	goto	u1070
  2281  0339                     u1071:
  2282  0339  2B41               	goto	l1752
  2283  033A                     u1070:
  2284  033A                     l1748:
  2285  033A  0378               	decf	_BlinkStatus,w
  2286  033B  1D03               	btfss	3,2
  2287  033C  2B3E               	goto	u1081
  2288  033D  2B3F               	goto	u1080
  2289  033E                     u1081:
  2290  033E  2B41               	goto	l1752
  2291  033F                     u1080:
  2292  033F                     l1750:
  2293                           
  2294                           ;LED_SEGMENT.c: 138:            {;LED_SEGMENT.c: 139:                PORTC=0XFF;
  2295  033F  30FF               	movlw	255
  2296  0340  0087               	movwf	7	;volatile
  2297  0341                     l1752:
  2298                           
  2299                           ;LED_SEGMENT.c: 142:            ((Segment*)&PORTD)->Seg.s4d2=1;
  2300  0341  1788               	bsf	8,7
  2301  0342                     l1754:
  2302                           
  2303                           ;LED_SEGMENT.c: 144:            State=0;
  2304  0342  01A9               	clrf	LED_7SEGMENT_Update@State
  2305                           
  2306                           ;LED_SEGMENT.c: 145:            break;
  2307  0343  2B66               	goto	l192
  2308  0344                     l1758:
  2309  0344  0829               	movf	LED_7SEGMENT_Update@State,w
  2310  0345  00F3               	movwf	??_LED_7SEGMENT_Update
  2311  0346  01F4               	clrf	??_LED_7SEGMENT_Update+1
  2312                           
  2313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2314                           ; Switch size 1, requested type "simple"
  2315                           ; Number of cases is 1, Range of values is 0 to 0
  2316                           ; switch strategies available:
  2317                           ; Name         Instructions Cycles
  2318                           ; simple_byte            4     3 (average)
  2319                           ; direct_byte           11     8 (fixed)
  2320                           ; jumptable            260     6 (fixed)
  2321                           ;	Chosen strategy is simple_byte
  2322  0347  0874               	movf	??_LED_7SEGMENT_Update+1,w
  2323  0348  3A00               	xorlw	0	; case 0
  2324  0349  1903               	skipnz
  2325  034A  2B4C               	goto	l2478
  2326  034B  2B42               	goto	l1754
  2327  034C                     l2478:
  2328                           
  2329                           ; Switch size 1, requested type "simple"
  2330                           ; Number of cases is 8, Range of values is 0 to 7
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte           25    13 (average)
  2334                           ; direct_byte           32     8 (fixed)
  2335                           ; jumptable            260     6 (fixed)
  2336                           ;	Chosen strategy is simple_byte
  2337  034C  0873               	movf	??_LED_7SEGMENT_Update,w
  2338  034D  3A00               	xorlw	0	; case 0
  2339  034E  1903               	skipnz
  2340  034F  29FB               	goto	l1628
  2341  0350  3A01               	xorlw	1	; case 1
  2342  0351  1903               	skipnz
  2343  0352  2A22               	goto	l1644
  2344  0353  3A03               	xorlw	3	; case 2
  2345  0354  1903               	skipnz
  2346  0355  2A4B               	goto	l1660
  2347  0356  3A01               	xorlw	1	; case 3
  2348  0357  1903               	skipnz
  2349  0358  2A75               	goto	l1676
  2350  0359  3A07               	xorlw	7	; case 4
  2351  035A  1903               	skipnz
  2352  035B  2A9F               	goto	l1692
  2353  035C  3A01               	xorlw	1	; case 5
  2354  035D  1903               	skipnz
  2355  035E  2AC9               	goto	l1708
  2356  035F  3A03               	xorlw	3	; case 6
  2357  0360  1903               	skipnz
  2358  0361  2AF3               	goto	l1724
  2359  0362  3A01               	xorlw	1	; case 7
  2360  0363  1903               	skipnz
  2361  0364  2B1D               	goto	l1740
  2362  0365  2B42               	goto	l1754
  2363  0366                     l192:
  2364  0366  0008               	return
  2365  0367                     __end_of_LED_7SEGMENT_Update:
  2366                           
  2367                           	psect	text4
  2368  06C1                     __ptext4:	
  2369 ;; *************** function _Clr_LED *****************
  2370 ;; Defined at:
  2371 ;;		line 175 in file "TRAFFIC.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		status,2
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    2
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;;		_VIP_mode
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _Clr_LED
  2402  06C1                     _Clr_LED:
  2403  06C1                     l1616:	
  2404                           ;incstack = 0
  2405                           ; Regs used in _Clr_LED: [status,2]
  2406                           
  2407                           
  2408                           ;TRAFFIC.c: 177:     LAT=0;
  2409  06C1  01F9               	clrf	_LAT
  2410  06C2  01FA               	clrf	_LAT+1
  2411  06C3                     l315:
  2412  06C3  0008               	return
  2413  06C4                     __end_of_Clr_LED:
  2414                           
  2415                           	psect	text5
  2416  05A4                     __ptext5:	
  2417 ;; *************** function _Traffic_Light *****************
  2418 ;; Defined at:
  2419 ;;		line 148 in file "TRAFFIC.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  led             2    3[COMMON] int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		None
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         2       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0
  2436 ;;      Totals:         2       0       0       0       0
  2437 ;;Total ram usage:        2 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    2
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _Traffic_Light
  2449  05A4                     _Traffic_Light:
  2450  05A4                     l1996:	
  2451                           ;incstack = 0
  2452                           ; Regs used in _Traffic_Light: []
  2453                           
  2454                           
  2455                           ;TRAFFIC.c: 148: void Traffic_Light(int led);TRAFFIC.c: 149: {;TRAFFIC.c: 150:     if((l
      +                          ed&1))
  2456  05A4  1C73               	btfss	Traffic_Light@led,0
  2457  05A5  2DA7               	goto	u1341
  2458  05A6  2DA8               	goto	u1340
  2459  05A7                     u1341:
  2460  05A7  2DA9               	goto	l300
  2461  05A8                     u1340:
  2462  05A8                     l1998:
  2463                           
  2464                           ;TRAFFIC.c: 151:         ((TrafficLight*)&LAT)->LED.t1red=1;
  2465  05A8  1479               	bsf	_LAT,0
  2466  05A9                     l300:
  2467                           
  2468                           ;TRAFFIC.c: 152:     if((led&(1<<1)))
  2469  05A9  1CF3               	btfss	Traffic_Light@led,1
  2470  05AA  2DAC               	goto	u1351
  2471  05AB  2DAD               	goto	u1350
  2472  05AC                     u1351:
  2473  05AC  2DAE               	goto	l301
  2474  05AD                     u1350:
  2475  05AD                     l2000:
  2476                           
  2477                           ;TRAFFIC.c: 153:         ((TrafficLight*)&LAT)->LED.t1yellow=1;
  2478  05AD  14F9               	bsf	_LAT,1
  2479  05AE                     l301:
  2480                           
  2481                           ;TRAFFIC.c: 154:     if((led&(1<<2)))
  2482  05AE  1D73               	btfss	Traffic_Light@led,2
  2483  05AF  2DB1               	goto	u1361
  2484  05B0  2DB2               	goto	u1360
  2485  05B1                     u1361:
  2486  05B1  2DB3               	goto	l302
  2487  05B2                     u1360:
  2488  05B2                     l2002:
  2489                           
  2490                           ;TRAFFIC.c: 155:         ((TrafficLight*)&LAT)->LED.t1green=1;
  2491  05B2  1579               	bsf	_LAT,2
  2492  05B3                     l302:
  2493                           
  2494                           ;TRAFFIC.c: 156:      if((led&(1<<3)))
  2495  05B3  1DF3               	btfss	Traffic_Light@led,3
  2496  05B4  2DB6               	goto	u1371
  2497  05B5  2DB7               	goto	u1370
  2498  05B6                     u1371:
  2499  05B6  2DB8               	goto	l303
  2500  05B7                     u1370:
  2501  05B7                     l2004:
  2502                           
  2503                           ;TRAFFIC.c: 157:         ((TrafficLight*)&LAT)->LED.t2red=1;
  2504  05B7  15F9               	bsf	_LAT,3
  2505  05B8                     l303:
  2506                           
  2507                           ;TRAFFIC.c: 158:      if((led&(1<<4)))
  2508  05B8  1E73               	btfss	Traffic_Light@led,4
  2509  05B9  2DBB               	goto	u1381
  2510  05BA  2DBC               	goto	u1380
  2511  05BB                     u1381:
  2512  05BB  2DBD               	goto	l304
  2513  05BC                     u1380:
  2514  05BC                     l2006:
  2515                           
  2516                           ;TRAFFIC.c: 159:         ((TrafficLight*)&LAT)->LED.t2yellow=1;
  2517  05BC  1679               	bsf	_LAT,4
  2518  05BD                     l304:
  2519                           
  2520                           ;TRAFFIC.c: 160:       if((led&(1<<5)))
  2521  05BD  1EF3               	btfss	Traffic_Light@led,5
  2522  05BE  2DC0               	goto	u1391
  2523  05BF  2DC1               	goto	u1390
  2524  05C0                     u1391:
  2525  05C0  2DC2               	goto	l305
  2526  05C1                     u1390:
  2527  05C1                     l2008:
  2528                           
  2529                           ;TRAFFIC.c: 161:         ((TrafficLight*)&LAT)->LED.t2green=1;
  2530  05C1  16F9               	bsf	_LAT,5
  2531  05C2                     l305:
  2532                           
  2533                           ;TRAFFIC.c: 162:        if((led&(1<<6)))
  2534  05C2  1F73               	btfss	Traffic_Light@led,6
  2535  05C3  2DC5               	goto	u1401
  2536  05C4  2DC6               	goto	u1400
  2537  05C5                     u1401:
  2538  05C5  2DC7               	goto	l306
  2539  05C6                     u1400:
  2540  05C6                     l2010:
  2541                           
  2542                           ;TRAFFIC.c: 163:         ((TrafficLight*)&LAT)->LED.t3red=1;
  2543  05C6  1779               	bsf	_LAT,6
  2544  05C7                     l306:
  2545                           
  2546                           ;TRAFFIC.c: 164:         if((led&(1<<7)))
  2547  05C7  1FF3               	btfss	Traffic_Light@led,7
  2548  05C8  2DCA               	goto	u1411
  2549  05C9  2DCB               	goto	u1410
  2550  05CA                     u1411:
  2551  05CA  2DCC               	goto	l307
  2552  05CB                     u1410:
  2553  05CB                     l2012:
  2554                           
  2555                           ;TRAFFIC.c: 165:          ((TrafficLight*)&LAT)->LED.t3yellow=1;
  2556  05CB  17F9               	bsf	_LAT,7
  2557  05CC                     l307:
  2558                           
  2559                           ;TRAFFIC.c: 166:         if((led&(1<<8)))
  2560  05CC  1C74               	btfss	Traffic_Light@led+1,0
  2561  05CD  2DCF               	goto	u1421
  2562  05CE  2DD0               	goto	u1420
  2563  05CF                     u1421:
  2564  05CF  2DD1               	goto	l308
  2565  05D0                     u1420:
  2566  05D0                     l2014:
  2567                           
  2568                           ;TRAFFIC.c: 167:              ((TrafficLight*)&LAT)->LED.t3green=1;
  2569  05D0  147A               	bsf	_LAT+1,0
  2570  05D1                     l308:
  2571                           
  2572                           ;TRAFFIC.c: 168:         if((led&(1<<9)))
  2573  05D1  1CF4               	btfss	Traffic_Light@led+1,1
  2574  05D2  2DD4               	goto	u1431
  2575  05D3  2DD5               	goto	u1430
  2576  05D4                     u1431:
  2577  05D4  2DD6               	goto	l309
  2578  05D5                     u1430:
  2579  05D5                     l2016:
  2580                           
  2581                           ;TRAFFIC.c: 169:              ((TrafficLight*)&LAT)->LED.t4red=1;
  2582  05D5  14FA               	bsf	_LAT+1,1
  2583  05D6                     l309:
  2584                           
  2585                           ;TRAFFIC.c: 170:         if((led&(1<<10)))
  2586  05D6  1D74               	btfss	Traffic_Light@led+1,2
  2587  05D7  2DD9               	goto	u1441
  2588  05D8  2DDA               	goto	u1440
  2589  05D9                     u1441:
  2590  05D9  2DDB               	goto	l310
  2591  05DA                     u1440:
  2592  05DA                     l2018:
  2593                           
  2594                           ;TRAFFIC.c: 171:              ((TrafficLight*)&LAT)->LED.t4yellow=1;
  2595  05DA  157A               	bsf	_LAT+1,2
  2596  05DB                     l310:
  2597                           
  2598                           ;TRAFFIC.c: 172:          if((led&(1<<11)))
  2599  05DB  1DF4               	btfss	Traffic_Light@led+1,3
  2600  05DC  2DDE               	goto	u1451
  2601  05DD  2DDF               	goto	u1450
  2602  05DE                     u1451:
  2603  05DE  2DE0               	goto	l312
  2604  05DF                     u1450:
  2605  05DF                     l2020:
  2606                           
  2607                           ;TRAFFIC.c: 173:              ((TrafficLight*)&LAT)->LED.t4green=1;
  2608  05DF  15FA               	bsf	_LAT+1,3
  2609  05E0                     l312:
  2610  05E0  0008               	return
  2611  05E1                     __end_of_Traffic_Light:
  2612                           
  2613                           	psect	text6
  2614  055F                     __ptext6:	
  2615 ;; *************** function _TMR2_Setup *****************
  2616 ;; Defined at:
  2617 ;;		line 4 in file "TMR2.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  period          1    wreg     unsigned char 
  2620 ;;  presc           1    3[COMMON] unsigned char 
  2621 ;;  postsc          1    4[COMMON] unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  period          1    7[COMMON] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         2       0       0       0       0
  2634 ;;      Locals:         1       0       0       0       0
  2635 ;;      Temps:          2       0       0       0       0
  2636 ;;      Totals:         5       0       0       0       0
  2637 ;;Total ram usage:        5 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    2
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _TMR2_Setup
  2649  055F                     _TMR2_Setup:
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _TMR2_Setup: [wreg-fsr0h+status,2+status,0+btemp+1]
  2653                           ;TMR2_Setup@period stored from wreg
  2654  055F  00F7               	movwf	TMR2_Setup@period
  2655  0560                     l1830:
  2656                           
  2657                           ;TMR2.c: 4: void TMR2_Setup(char period,char presc,char postsc);TMR2.c: 5: {;TMR2.c: 6: 
      +                              PR2= period-1;
  2658  0560  0877               	movf	TMR2_Setup@period,w
  2659  0561  3EFF               	addlw	255
  2660  0562  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0563  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0564  0092               	movwf	18	;volatile
  2663  0565                     l1832:
  2664                           
  2665                           ;TMR2.c: 7:     T2CON &= ~3;
  2666  0565  30FC               	movlw	252
  2667  0566  00FF               	movwf	btemp+1
  2668  0567  087F               	movf	btemp+1,w
  2669  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2671  056A  0592               	andwf	18,f	;volatile
  2672                           
  2673                           ;TMR2.c: 8:     switch(presc)
  2674  056B  2D71               	goto	l1834
  2675  056C                     l105:	
  2676                           ;TMR2.c: 12:         case 4:
  2677                           
  2678                           
  2679                           ;TMR2.c: 13:             T2CON|=1;
  2680  056C  1412               	bsf	18,0	;volatile
  2681                           
  2682                           ;TMR2.c: 14:             break;
  2683  056D  2D84               	goto	l1836
  2684  056E                     l106:	
  2685                           ;TMR2.c: 15:         case 16:
  2686                           
  2687                           
  2688                           ;TMR2.c: 16:             T2CON|=1<<1;
  2689  056E  1492               	bsf	18,1	;volatile
  2690                           
  2691                           ;TMR2.c: 17:             break;
  2692  056F  2D84               	goto	l1836
  2693  0570                     l108:	
  2694                           ;TMR2.c: 19:             while(1)
  2695                           
  2696  0570  2D70               	goto	l108
  2697  0571                     l1834:
  2698  0571  0873               	movf	TMR2_Setup@presc,w
  2699  0572  00F5               	movwf	??_TMR2_Setup
  2700  0573  01F6               	clrf	??_TMR2_Setup+1
  2701                           
  2702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2703                           ; Switch size 1, requested type "simple"
  2704                           ; Number of cases is 1, Range of values is 0 to 0
  2705                           ; switch strategies available:
  2706                           ; Name         Instructions Cycles
  2707                           ; simple_byte            4     3 (average)
  2708                           ; direct_byte           11     8 (fixed)
  2709                           ; jumptable            260     6 (fixed)
  2710                           ;	Chosen strategy is simple_byte
  2711  0574  0876               	movf	??_TMR2_Setup+1,w
  2712  0575  3A00               	xorlw	0	; case 0
  2713  0576  1903               	skipnz
  2714  0577  2D79               	goto	l2480
  2715  0578  2D70               	goto	l108
  2716  0579                     l2480:
  2717                           
  2718                           ; Switch size 1, requested type "simple"
  2719                           ; Number of cases is 3, Range of values is 1 to 16
  2720                           ; switch strategies available:
  2721                           ; Name         Instructions Cycles
  2722                           ; simple_byte           10     6 (average)
  2723                           ; direct_byte           59    11 (fixed)
  2724                           ; jumptable            263     9 (fixed)
  2725                           ;	Chosen strategy is simple_byte
  2726  0579  0875               	movf	??_TMR2_Setup,w
  2727  057A  3A01               	xorlw	1	; case 1
  2728  057B  1903               	skipnz
  2729  057C  2D84               	goto	l1836
  2730  057D  3A05               	xorlw	5	; case 4
  2731  057E  1903               	skipnz
  2732  057F  2D6C               	goto	l105
  2733  0580  3A14               	xorlw	20	; case 16
  2734  0581  1903               	skipnz
  2735  0582  2D6E               	goto	l106
  2736  0583  2D70               	goto	l108
  2737  0584                     l1836:
  2738                           
  2739                           ;TMR2.c: 23:     if (postsc<=16)
  2740  0584  3011               	movlw	17
  2741  0585  0274               	subwf	TMR2_Setup@postsc,w
  2742  0586  1803               	skipnc
  2743  0587  2D89               	goto	u1141
  2744  0588  2D8A               	goto	u1140
  2745  0589                     u1141:
  2746  0589  2DA2               	goto	l114
  2747  058A                     u1140:
  2748  058A                     l1838:
  2749                           
  2750                           ;TMR2.c: 24:     {;TMR2.c: 25:         T2CON &=~( 0xF<<3);
  2751  058A  3087               	movlw	135
  2752  058B  00FF               	movwf	btemp+1
  2753  058C  087F               	movf	btemp+1,w
  2754  058D  0592               	andwf	18,f	;volatile
  2755  058E                     l1840:
  2756                           
  2757                           ;TMR2.c: 26:            if(postsc!=0)
  2758  058E  0874               	movf	TMR2_Setup@postsc,w
  2759  058F  1903               	btfsc	3,2
  2760  0590  2D92               	goto	u1151
  2761  0591  2D93               	goto	u1150
  2762  0592                     u1151:
  2763  0592  2DA3               	goto	l117
  2764  0593                     u1150:
  2765  0593                     l1842:
  2766                           
  2767                           ;TMR2.c: 27:              T2CON|= (postsc-1)<<3;
  2768  0593  0874               	movf	TMR2_Setup@postsc,w	;volatile
  2769  0594  00F5               	movwf	??_TMR2_Setup
  2770  0595  3002               	movlw	2
  2771  0596                     u1165:
  2772  0596  1003               	clrc
  2773  0597  0DF5               	rlf	??_TMR2_Setup,f
  2774  0598  3EFF               	addlw	-1
  2775  0599  1D03               	skipz
  2776  059A  2D96               	goto	u1165
  2777  059B  1003               	clrc
  2778  059C  0D75               	rlf	??_TMR2_Setup,w
  2779  059D  3EF8               	addlw	248
  2780  059E  00FF               	movwf	btemp+1
  2781  059F  087F               	movf	btemp+1,w
  2782  05A0  0492               	iorwf	18,f	;volatile
  2783  05A1  2DA3               	goto	l117
  2784  05A2                     l114:	
  2785                           ;TMR2.c: 31:     {;TMR2.c: 32:         while(1)
  2786                           
  2787  05A2  2DA2               	goto	l114
  2788  05A3                     l117:
  2789  05A3  0008               	return
  2790  05A4                     __end_of_TMR2_Setup:
  2791                           
  2792                           	psect	text7
  2793  06BD                     __ptext7:	
  2794 ;; *************** function _TMR2_ON *****************
  2795 ;; Defined at:
  2796 ;;		line 37 in file "TMR2.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		None
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0
  2813 ;;      Totals:         0       0       0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    2
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _TMR2_ON
  2826  06BD                     _TMR2_ON:
  2827  06BD                     l1858:	
  2828                           ;incstack = 0
  2829                           ; Regs used in _TMR2_ON: []
  2830                           
  2831                           
  2832                           ;TMR2.c: 39:     T2CON|=1<<2;
  2833  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2834  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2835  06BF  1512               	bsf	18,2	;volatile
  2836  06C0                     l120:
  2837  06C0  0008               	return
  2838  06C1                     __end_of_TMR2_ON:
  2839                           
  2840                           	psect	text8
  2841  0662                     __ptext8:	
  2842 ;; *************** function _TMR2_Interrupt *****************
  2843 ;; Defined at:
  2844 ;;		line 42 in file "TMR2.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  En              1    wreg     unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  En              1    3[COMMON] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, btemp+1
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         1       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         1       0       0       0       0
  2862 ;;Total ram usage:        1 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    2
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _TMR2_Interrupt
  2874  0662                     _TMR2_Interrupt:
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _TMR2_Interrupt: [wreg+status,2+status,0+btemp+1]
  2878                           ;TMR2_Interrupt@En stored from wreg
  2879  0662  00F3               	movwf	TMR2_Interrupt@En
  2880  0663                     l1848:
  2881                           
  2882                           ;TMR2.c: 42: void TMR2_Interrupt(char En);TMR2.c: 43: {;TMR2.c: 44:     PIR1 &=~(1<<1);
  2883  0663  30FD               	movlw	253
  2884  0664  00FF               	movwf	btemp+1
  2885  0665  087F               	movf	btemp+1,w
  2886  0666  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0667  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0668  058C               	andwf	12,f	;volatile
  2889  0669                     l1850:
  2890                           
  2891                           ;TMR2.c: 45:     if (En)
  2892  0669  0873               	movf	TMR2_Interrupt@En,w
  2893  066A  1903               	btfsc	3,2
  2894  066B  2E6D               	goto	u1171
  2895  066C  2E6E               	goto	u1170
  2896  066D                     u1171:
  2897  066D  2E72               	goto	l1854
  2898  066E                     u1170:
  2899  066E                     l1852:
  2900                           
  2901                           ;TMR2.c: 46:         PIE1 |=1<<1;
  2902  066E  1683               	bsf	3,5	;RP0=1, select bank1
  2903  066F  1303               	bcf	3,6	;RP1=0, select bank1
  2904  0670  148C               	bsf	12,1	;volatile
  2905  0671  2E78               	goto	l1856
  2906  0672                     l1854:
  2907                           
  2908                           ;TMR2.c: 48:         PIE1 &=~(1<<1);
  2909  0672  30FD               	movlw	253
  2910  0673  00FF               	movwf	btemp+1
  2911  0674  087F               	movf	btemp+1,w
  2912  0675  1683               	bsf	3,5	;RP0=1, select bank1
  2913  0676  1303               	bcf	3,6	;RP1=0, select bank1
  2914  0677  058C               	andwf	12,f	;volatile
  2915  0678                     l1856:
  2916                           
  2917                           ;TMR2.c: 50:     INTCON |=1<<6;
  2918  0678  170B               	bsf	11,6	;volatile
  2919  0679                     l125:
  2920  0679  0008               	return
  2921  067A                     __end_of_TMR2_Interrupt:
  2922                           
  2923                           	psect	text9
  2924  0626                     __ptext9:	
  2925 ;; *************** function _PORT_Init *****************
  2926 ;; Defined at:
  2927 ;;		line 59 in file "main.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, btemp+1
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    2
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _PORT_Init
  2957  0626                     _PORT_Init:
  2958  0626                     l1806:	
  2959                           ;incstack = 0
  2960                           ; Regs used in _PORT_Init: [wreg+status,2+status,0+btemp+1]
  2961                           
  2962                           
  2963                           ;main.c: 61:     TRISC=0X00;
  2964  0626  1683               	bsf	3,5	;RP0=1, select bank1
  2965  0627  1303               	bcf	3,6	;RP1=0, select bank1
  2966  0628  0187               	clrf	7	;volatile
  2967  0629                     l1808:
  2968                           
  2969                           ;main.c: 62:     TRISB=0XF0;
  2970  0629  30F0               	movlw	240
  2971  062A  0086               	movwf	6	;volatile
  2972  062B                     l1810:
  2973                           
  2974                           ;main.c: 63:     TRISA=0X00;
  2975  062B  0185               	clrf	5	;volatile
  2976  062C                     l1812:
  2977                           
  2978                           ;main.c: 64:     TRISD=0X00;
  2979  062C  0188               	clrf	8	;volatile
  2980  062D                     l1814:
  2981                           
  2982                           ;main.c: 65:     PORTA=0X00;
  2983  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2984  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2985  062F  0185               	clrf	5	;volatile
  2986  0630                     l1816:
  2987                           
  2988                           ;main.c: 66:     PORTB=0X00;
  2989  0630  0186               	clrf	6	;volatile
  2990  0631                     l1818:
  2991                           
  2992                           ;main.c: 67:     ANSELH=0X00;
  2993  0631  1683               	bsf	3,5	;RP0=1, select bank3
  2994  0632  1703               	bsf	3,6	;RP1=1, select bank3
  2995  0633  0189               	clrf	9	;volatile
  2996  0634                     l1820:
  2997                           
  2998                           ;main.c: 68:     OPTION_REG &=~(1<<7);
  2999  0634  307F               	movlw	127
  3000  0635  00FF               	movwf	btemp+1
  3001  0636  087F               	movf	btemp+1,w
  3002  0637  1683               	bsf	3,5	;RP0=1, select bank1
  3003  0638  1303               	bcf	3,6	;RP1=0, select bank1
  3004  0639  0581               	andwf	1,f	;volatile
  3005  063A                     l1822:
  3006                           
  3007                           ;main.c: 69:     WPUB=0XF0;
  3008  063A  30F0               	movlw	240
  3009  063B  0095               	movwf	21	;volatile
  3010  063C                     l1824:
  3011                           
  3012                           ;main.c: 70:     PORTC=0X00;
  3013  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3014  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3015  063E  0187               	clrf	7	;volatile
  3016  063F                     l1826:
  3017                           
  3018                           ;main.c: 71:     PORTD=0X00;
  3019  063F  0188               	clrf	8	;volatile
  3020  0640                     l1828:
  3021                           
  3022                           ;main.c: 72:     OSCCON=(1<<6)|(1<<5)|(1<<2)|1;
  3023  0640  3065               	movlw	101
  3024  0641  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0642  1303               	bcf	3,6	;RP1=0, select bank1
  3026  0643  008F               	movwf	15	;volatile
  3027  0644                     l83:
  3028  0644  0008               	return
  3029  0645                     __end_of_PORT_Init:
  3030                           
  3031                           	psect	text10
  3032  0037                     __ptext10:	
  3033 ;; *************** function _Counting *****************
  3034 ;; Defined at:
  3035 ;;		line 11 in file "TRAFFIC.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3049 ;;      Params:         0       0       0       0       0
  3050 ;;      Locals:         0      10       0       0       0
  3051 ;;      Temps:          0       2       0       0       0
  3052 ;;      Totals:         0      12       0       0       0
  3053 ;;Total ram usage:       12 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    3
  3056 ;; This function calls:
  3057 ;;		_Sec2Time
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           
  3064                           ;psect for function _Counting
  3065  0037                     _Counting:
  3066  0037                     l2246:	
  3067                           ;incstack = 0
  3068                           ; Regs used in _Counting: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3069                           
  3070                           
  3071                           ;TRAFFIC.c: 13:     static char i=0;;TRAFFIC.c: 14:      static signed char s1=10;;TRAFF
      +                          IC.c: 15:      static signed char s2=10;;TRAFFIC.c: 16:      static signed char s3=20;;T
      +                          RAFFIC.c: 17:      static signed char s4=30;;TRAFFIC.c: 18:      static char j=0;;TRAFFI
      +                          C.c: 19:      static char T=1;;TRAFFIC.c: 20:      static char S1;;TRAFFIC.c: 21:      s
      +                          tatic char S2;;TRAFFIC.c: 22:      static char S3;;TRAFFIC.c: 23:      static char S4;;T
      +                          RAFFIC.c: 24:      if(reset)
  3072  0037  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0038  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0039  082D               	movf	_reset,w
  3075  003A  1903               	btfsc	3,2
  3076  003B  283D               	goto	u1651
  3077  003C  283E               	goto	u1650
  3078  003D                     u1651:
  3079  003D  2856               	goto	l2260
  3080  003E                     u1650:
  3081  003E                     l2248:
  3082                           
  3083                           ;TRAFFIC.c: 25:      {;TRAFFIC.c: 26:         reset=j=i=0;
  3084  003E  01A7               	clrf	Counting@i
  3085  003F  01A6               	clrf	Counting@j
  3086  0040  01AD               	clrf	_reset
  3087  0041                     l2250:
  3088                           
  3089                           ;TRAFFIC.c: 27:         s1=s2=10;
  3090  0041  300A               	movlw	10
  3091  0042  00B2               	movwf	Counting@s2
  3092  0043  00FF               	movwf	btemp+1
  3093  0044  087F               	movf	btemp+1,w
  3094  0045  00B3               	movwf	Counting@s1
  3095  0046                     l2252:
  3096                           
  3097                           ;TRAFFIC.c: 28:         s3=20;
  3098  0046  3014               	movlw	20
  3099  0047  00FF               	movwf	btemp+1
  3100  0048  087F               	movf	btemp+1,w
  3101  0049  00B1               	movwf	Counting@s3
  3102  004A                     l2254:
  3103                           
  3104                           ;TRAFFIC.c: 29:         s4=30;
  3105  004A  301E               	movlw	30
  3106  004B  00FF               	movwf	btemp+1
  3107  004C  087F               	movf	btemp+1,w
  3108  004D  00B0               	movwf	Counting@s4
  3109  004E                     l2256:
  3110                           
  3111                           ;TRAFFIC.c: 30:         LED|=((1<<2)|(1<<3)|(1<<6)|(1<<9));
  3112  004E  304C               	movlw	76
  3113  004F  04A0               	iorwf	_LED,f
  3114  0050  3002               	movlw	2
  3115  0051  04A1               	iorwf	_LED+1,f
  3116  0052                     l2258:
  3117                           
  3118                           ;TRAFFIC.c: 31:         LED&=~(1|(1<<5)|(1<<8)|(1<<11)|(1<<1)|(1<<4)|(1<<7)|(1<<10));
  3119  0052  304C               	movlw	76
  3120  0053  05A0               	andwf	_LED,f
  3121  0054  30F2               	movlw	242
  3122  0055  05A1               	andwf	_LED+1,f
  3123  0056                     l2260:
  3124                           
  3125                           ;TRAFFIC.c: 33:      i++;
  3126  0056  3001               	movlw	1
  3127  0057  00FF               	movwf	btemp+1
  3128  0058  087F               	movf	btemp+1,w
  3129  0059  07A7               	addwf	Counting@i,f
  3130  005A                     l2262:
  3131                           
  3132                           ;TRAFFIC.c: 34:      if(i<200)
  3133  005A  30C8               	movlw	200
  3134  005B  0227               	subwf	Counting@i,w
  3135  005C  1803               	skipnc
  3136  005D  285F               	goto	u1661
  3137  005E  2860               	goto	u1660
  3138  005F                     u1661:
  3139  005F  2861               	goto	l2266
  3140  0060                     u1660:
  3141  0060  29E0               	goto	l244
  3142  0061                     l2266:
  3143                           
  3144                           ;TRAFFIC.c: 36:      j++;
  3145  0061  3001               	movlw	1
  3146  0062  00FF               	movwf	btemp+1
  3147  0063  087F               	movf	btemp+1,w
  3148  0064  07A6               	addwf	Counting@j,f
  3149  0065                     l2268:
  3150                           
  3151                           ;TRAFFIC.c: 38:      if(j>=10)
  3152  0065  300A               	movlw	10
  3153  0066  0226               	subwf	Counting@j,w
  3154  0067  1C03               	skipc
  3155  0068  286A               	goto	u1671
  3156  0069  286B               	goto	u1670
  3157  006A                     u1671:
  3158  006A  2870               	goto	l2274
  3159  006B                     u1670:
  3160  006B                     l2270:
  3161                           
  3162                           ;TRAFFIC.c: 39:      {;TRAFFIC.c: 40:          j=0;
  3163  006B  01A6               	clrf	Counting@j
  3164  006C                     l2272:
  3165                           
  3166                           ;TRAFFIC.c: 41:          T++;
  3167  006C  3001               	movlw	1
  3168  006D  00FF               	movwf	btemp+1
  3169  006E  087F               	movf	btemp+1,w
  3170  006F  07AF               	addwf	Counting@T,f
  3171  0070                     l2274:
  3172                           
  3173                           ;TRAFFIC.c: 44:      s1--;
  3174  0070  30FF               	movlw	255
  3175  0071  00FF               	movwf	btemp+1
  3176  0072  087F               	movf	btemp+1,w
  3177  0073  07B3               	addwf	Counting@s1,f
  3178  0074                     l2276:
  3179                           
  3180                           ;TRAFFIC.c: 45:      s2--;
  3181  0074  30FF               	movlw	255
  3182  0075  00FF               	movwf	btemp+1
  3183  0076  087F               	movf	btemp+1,w
  3184  0077  07B2               	addwf	Counting@s2,f
  3185  0078                     l2278:
  3186                           
  3187                           ;TRAFFIC.c: 46:      s3--;
  3188  0078  30FF               	movlw	255
  3189  0079  00FF               	movwf	btemp+1
  3190  007A  087F               	movf	btemp+1,w
  3191  007B  07B1               	addwf	Counting@s3,f
  3192  007C                     l2280:
  3193                           
  3194                           ;TRAFFIC.c: 47:      s4--;
  3195  007C  30FF               	movlw	255
  3196  007D  00FF               	movwf	btemp+1
  3197  007E  087F               	movf	btemp+1,w
  3198  007F  07B0               	addwf	Counting@s4,f
  3199  0080                     l2282:
  3200                           
  3201                           ;TRAFFIC.c: 48:      i=0;
  3202  0080  01A7               	clrf	Counting@i
  3203  0081                     l2284:
  3204                           
  3205                           ;TRAFFIC.c: 50:      T=(T>4)? 1:T;
  3206  0081  3005               	movlw	5
  3207  0082  022F               	subwf	Counting@T,w
  3208  0083  1803               	skipnc
  3209  0084  2886               	goto	u1681
  3210  0085  2887               	goto	u1680
  3211  0086                     u1681:
  3212  0086  288F               	goto	l2288
  3213  0087                     u1680:
  3214  0087                     l2286:
  3215  0087  082F               	movf	Counting@T,w
  3216  0088  00BE               	movwf	??_Counting
  3217  0089  01BF               	clrf	??_Counting+1
  3218  008A  083E               	movf	??_Counting,w
  3219  008B  00C0               	movwf	_Counting$252
  3220  008C  083F               	movf	??_Counting+1,w
  3221  008D  00C1               	movwf	_Counting$252+1
  3222  008E  2893               	goto	l2290
  3223  008F                     l2288:
  3224  008F  3001               	movlw	1
  3225  0090  00C0               	movwf	_Counting$252
  3226  0091  3000               	movlw	0
  3227  0092  00C1               	movwf	_Counting$252+1
  3228  0093                     l2290:
  3229  0093  0840               	movf	_Counting$252,w
  3230  0094  00FF               	movwf	btemp+1
  3231  0095  087F               	movf	btemp+1,w
  3232  0096  00AF               	movwf	Counting@T
  3233                           
  3234                           ;TRAFFIC.c: 52:      switch(T)
  3235  0097  28FD               	goto	l2318
  3236  0098                     l2292:
  3237                           
  3238                           ;TRAFFIC.c: 56:              S1=10;
  3239  0098  300A               	movlw	10
  3240  0099  00FF               	movwf	btemp+1
  3241  009A  087F               	movf	btemp+1,w
  3242  009B  00A5               	movwf	Counting@S1
  3243                           
  3244                           ;TRAFFIC.c: 57:              S2=10;
  3245  009C  300A               	movlw	10
  3246  009D  00FF               	movwf	btemp+1
  3247  009E  087F               	movf	btemp+1,w
  3248  009F  00A4               	movwf	Counting@S2
  3249                           
  3250                           ;TRAFFIC.c: 58:              S3=20;
  3251  00A0  3014               	movlw	20
  3252  00A1  00FF               	movwf	btemp+1
  3253  00A2  087F               	movf	btemp+1,w
  3254  00A3  00A3               	movwf	Counting@S3
  3255                           
  3256                           ;TRAFFIC.c: 59:              S4=30;
  3257  00A4  301E               	movlw	30
  3258  00A5  00FF               	movwf	btemp+1
  3259  00A6  087F               	movf	btemp+1,w
  3260  00A7  00A2               	movwf	Counting@S4
  3261  00A8                     l2294:
  3262                           
  3263                           ;TRAFFIC.c: 60:              LED|=((1<<2)|(1<<3)|(1<<6)|(1<<9));
  3264  00A8  304C               	movlw	76
  3265  00A9  04A0               	iorwf	_LED,f
  3266  00AA  3002               	movlw	2
  3267  00AB  04A1               	iorwf	_LED+1,f
  3268  00AC                     l2296:
  3269                           
  3270                           ;TRAFFIC.c: 61:              LED&=~(1|(1<<5)|(1<<8)|(1<<11)|(1<<1)|(1<<4)|(1<<7)|(1<<10)
      +                          );
  3271  00AC  304C               	movlw	76
  3272  00AD  05A0               	andwf	_LED,f
  3273  00AE  30F2               	movlw	242
  3274  00AF  05A1               	andwf	_LED+1,f
  3275                           
  3276                           ;TRAFFIC.c: 62:              break;
  3277  00B0  2916               	goto	l2320
  3278  00B1                     l2298:
  3279                           
  3280                           ;TRAFFIC.c: 64:                 S2=10;
  3281  00B1  300A               	movlw	10
  3282  00B2  00FF               	movwf	btemp+1
  3283  00B3  087F               	movf	btemp+1,w
  3284  00B4  00A4               	movwf	Counting@S2
  3285                           
  3286                           ;TRAFFIC.c: 65:              S1=30;
  3287  00B5  301E               	movlw	30
  3288  00B6  00FF               	movwf	btemp+1
  3289  00B7  087F               	movf	btemp+1,w
  3290  00B8  00A5               	movwf	Counting@S1
  3291                           
  3292                           ;TRAFFIC.c: 66:              S3=10;
  3293  00B9  300A               	movlw	10
  3294  00BA  00FF               	movwf	btemp+1
  3295  00BB  087F               	movf	btemp+1,w
  3296  00BC  00A3               	movwf	Counting@S3
  3297                           
  3298                           ;TRAFFIC.c: 67:              S4=20;
  3299  00BD  3014               	movlw	20
  3300  00BE  00FF               	movwf	btemp+1
  3301  00BF  087F               	movf	btemp+1,w
  3302  00C0  00A2               	movwf	Counting@S4
  3303  00C1                     l2300:
  3304                           
  3305                           ;TRAFFIC.c: 68:              LED|=((1<<5)|1|(1<<6)|(1<<9));
  3306  00C1  3061               	movlw	97
  3307  00C2  04A0               	iorwf	_LED,f
  3308  00C3  3002               	movlw	2
  3309  00C4  04A1               	iorwf	_LED+1,f
  3310  00C5                     l2302:
  3311                           
  3312                           ;TRAFFIC.c: 69:              LED&=~((1<<3)|(1<<2)|(1<<8)|(1<<11)|(1<<1)|(1<<4)|(1<<7)|(1
      +                          <<10));
  3313  00C5  3061               	movlw	97
  3314  00C6  05A0               	andwf	_LED,f
  3315  00C7  30F2               	movlw	242
  3316  00C8  05A1               	andwf	_LED+1,f
  3317                           
  3318                           ;TRAFFIC.c: 70:              break;
  3319  00C9  2916               	goto	l2320
  3320  00CA                     l2304:
  3321                           
  3322                           ;TRAFFIC.c: 72:                 S3=10;
  3323  00CA  300A               	movlw	10
  3324  00CB  00FF               	movwf	btemp+1
  3325  00CC  087F               	movf	btemp+1,w
  3326  00CD  00A3               	movwf	Counting@S3
  3327                           
  3328                           ;TRAFFIC.c: 73:              S1=20;
  3329  00CE  3014               	movlw	20
  3330  00CF  00FF               	movwf	btemp+1
  3331  00D0  087F               	movf	btemp+1,w
  3332  00D1  00A5               	movwf	Counting@S1
  3333                           
  3334                           ;TRAFFIC.c: 74:              S2=30;
  3335  00D2  301E               	movlw	30
  3336  00D3  00FF               	movwf	btemp+1
  3337  00D4  087F               	movf	btemp+1,w
  3338  00D5  00A4               	movwf	Counting@S2
  3339                           
  3340                           ;TRAFFIC.c: 75:              S4=10;
  3341  00D6  300A               	movlw	10
  3342  00D7  00FF               	movwf	btemp+1
  3343  00D8  087F               	movf	btemp+1,w
  3344  00D9  00A2               	movwf	Counting@S4
  3345  00DA                     l2306:
  3346                           
  3347                           ;TRAFFIC.c: 76:               LED|=((1<<8)|1|(1<<3)|(1<<9));
  3348  00DA  3009               	movlw	9
  3349  00DB  04A0               	iorwf	_LED,f
  3350  00DC  3003               	movlw	3
  3351  00DD  04A1               	iorwf	_LED+1,f
  3352  00DE                     l2308:
  3353                           
  3354                           ;TRAFFIC.c: 77:              LED&=~((1<<6)|(1<<2)|(1<<5)|(1<<11)|(1<<1)|(1<<4)|(1<<7)|(1
      +                          <<10));
  3355  00DE  3009               	movlw	9
  3356  00DF  05A0               	andwf	_LED,f
  3357  00E0  30F3               	movlw	243
  3358  00E1  05A1               	andwf	_LED+1,f
  3359                           
  3360                           ;TRAFFIC.c: 78:              break;
  3361  00E2  2916               	goto	l2320
  3362  00E3                     l2310:
  3363                           
  3364                           ;TRAFFIC.c: 80:              S4=10;
  3365  00E3  300A               	movlw	10
  3366  00E4  00FF               	movwf	btemp+1
  3367  00E5  087F               	movf	btemp+1,w
  3368  00E6  00A2               	movwf	Counting@S4
  3369                           
  3370                           ;TRAFFIC.c: 81:              S2=20;
  3371  00E7  3014               	movlw	20
  3372  00E8  00FF               	movwf	btemp+1
  3373  00E9  087F               	movf	btemp+1,w
  3374  00EA  00A4               	movwf	Counting@S2
  3375                           
  3376                           ;TRAFFIC.c: 82:              S3=30;
  3377  00EB  301E               	movlw	30
  3378  00EC  00FF               	movwf	btemp+1
  3379  00ED  087F               	movf	btemp+1,w
  3380  00EE  00A3               	movwf	Counting@S3
  3381                           
  3382                           ;TRAFFIC.c: 83:              S1=10;
  3383  00EF  300A               	movlw	10
  3384  00F0  00FF               	movwf	btemp+1
  3385  00F1  087F               	movf	btemp+1,w
  3386  00F2  00A5               	movwf	Counting@S1
  3387  00F3                     l2312:
  3388                           
  3389                           ;TRAFFIC.c: 84:              LED|=((1<<11)|(1<<3)|(1<<6)|1);
  3390  00F3  3049               	movlw	73
  3391  00F4  04A0               	iorwf	_LED,f
  3392  00F5  3008               	movlw	8
  3393  00F6  04A1               	iorwf	_LED+1,f
  3394  00F7                     l2314:
  3395                           
  3396                           ;TRAFFIC.c: 85:              LED&=~((1<<9)|(1<<5)|(1<<8)|(1<<2)|(1<<1)|(1<<4)|(1<<7)|(1<
      +                          <10));
  3397  00F7  3049               	movlw	73
  3398  00F8  05A0               	andwf	_LED,f
  3399  00F9  30F8               	movlw	248
  3400  00FA  05A1               	andwf	_LED+1,f
  3401                           
  3402                           ;TRAFFIC.c: 86:              break;
  3403  00FB  2916               	goto	l2320
  3404  00FC                     l258:	
  3405                           ;TRAFFIC.c: 88:              while(1)
  3406                           
  3407  00FC  28FC               	goto	l258
  3408  00FD                     l2318:
  3409  00FD  082F               	movf	Counting@T,w
  3410  00FE  00BE               	movwf	??_Counting
  3411  00FF  01BF               	clrf	??_Counting+1
  3412                           
  3413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3414                           ; Switch size 1, requested type "simple"
  3415                           ; Number of cases is 1, Range of values is 0 to 0
  3416                           ; switch strategies available:
  3417                           ; Name         Instructions Cycles
  3418                           ; simple_byte            4     3 (average)
  3419                           ; direct_byte           11     8 (fixed)
  3420                           ; jumptable            260     6 (fixed)
  3421                           ;	Chosen strategy is simple_byte
  3422  0100  083F               	movf	??_Counting+1,w
  3423  0101  3A00               	xorlw	0	; case 0
  3424  0102  1903               	skipnz
  3425  0103  2905               	goto	l2482
  3426  0104  28FC               	goto	l258
  3427  0105                     l2482:
  3428                           
  3429                           ; Switch size 1, requested type "simple"
  3430                           ; Number of cases is 5, Range of values is 0 to 4
  3431                           ; switch strategies available:
  3432                           ; Name         Instructions Cycles
  3433                           ; simple_byte           16     9 (average)
  3434                           ; direct_byte           23     8 (fixed)
  3435                           ; jumptable            260     6 (fixed)
  3436                           ;	Chosen strategy is simple_byte
  3437  0105  083E               	movf	??_Counting,w
  3438  0106  3A00               	xorlw	0	; case 0
  3439  0107  1903               	skipnz
  3440  0108  2898               	goto	l2292
  3441  0109  3A01               	xorlw	1	; case 1
  3442  010A  1903               	skipnz
  3443  010B  2898               	goto	l2292
  3444  010C  3A03               	xorlw	3	; case 2
  3445  010D  1903               	skipnz
  3446  010E  28B1               	goto	l2298
  3447  010F  3A01               	xorlw	1	; case 3
  3448  0110  1903               	skipnz
  3449  0111  28CA               	goto	l2304
  3450  0112  3A07               	xorlw	7	; case 4
  3451  0113  1903               	skipnz
  3452  0114  28E3               	goto	l2310
  3453  0115  28FC               	goto	l258
  3454  0116                     l2320:
  3455                           
  3456                           ;TRAFFIC.c: 92:      if((~LED&1)&&(s1<=1))
  3457  0116  0821               	movf	_LED+1,w
  3458  0117  00BF               	movwf	??_Counting+1
  3459  0118  0820               	movf	_LED,w
  3460  0119  00BE               	movwf	??_Counting
  3461  011A  09BE               	comf	??_Counting,f
  3462  011B  09BF               	comf	??_Counting+1,f
  3463  011C  1C3E               	btfss	??_Counting,0
  3464  011D  291F               	goto	u1691
  3465  011E  2920               	goto	u1690
  3466  011F                     u1691:
  3467  011F  292C               	goto	l261
  3468  0120                     u1690:
  3469  0120                     l2322:
  3470  0120  0833               	movf	Counting@s1,w
  3471  0121  3A80               	xorlw	128
  3472  0122  3E7E               	addlw	-130
  3473  0123  1803               	skipnc
  3474  0124  2926               	goto	u1701
  3475  0125  2927               	goto	u1700
  3476  0126                     u1701:
  3477  0126  292C               	goto	l261
  3478  0127                     u1700:
  3479  0127                     l2324:
  3480                           
  3481                           ;TRAFFIC.c: 93:      {;TRAFFIC.c: 94:          LED|=(1<<1);
  3482  0127  14A0               	bsf	_LED,1
  3483  0128                     l2326:
  3484                           
  3485                           ;TRAFFIC.c: 95:          LED&=~(1<<2);
  3486  0128  30FB               	movlw	251
  3487  0129  05A0               	andwf	_LED,f
  3488  012A  30FF               	movlw	255
  3489  012B  05A1               	andwf	_LED+1,f
  3490  012C                     l261:	
  3491                           ;TRAFFIC.c: 96:      }
  3492                           
  3493                           
  3494                           ;TRAFFIC.c: 97:       if((~LED&(1<<3))&&(s2<=1))
  3495  012C  0821               	movf	_LED+1,w
  3496  012D  00BF               	movwf	??_Counting+1
  3497  012E  0820               	movf	_LED,w
  3498  012F  00BE               	movwf	??_Counting
  3499  0130  09BE               	comf	??_Counting,f
  3500  0131  09BF               	comf	??_Counting+1,f
  3501  0132  1DBE               	btfss	??_Counting,3
  3502  0133  2935               	goto	u1711
  3503  0134  2936               	goto	u1710
  3504  0135                     u1711:
  3505  0135  2942               	goto	l262
  3506  0136                     u1710:
  3507  0136                     l2328:
  3508  0136  0832               	movf	Counting@s2,w
  3509  0137  3A80               	xorlw	128
  3510  0138  3E7E               	addlw	-130
  3511  0139  1803               	skipnc
  3512  013A  293C               	goto	u1721
  3513  013B  293D               	goto	u1720
  3514  013C                     u1721:
  3515  013C  2942               	goto	l262
  3516  013D                     u1720:
  3517  013D                     l2330:
  3518                           
  3519                           ;TRAFFIC.c: 98:       {;TRAFFIC.c: 99:          LED|=(1<<4);
  3520  013D  1620               	bsf	_LED,4
  3521  013E                     l2332:
  3522                           
  3523                           ;TRAFFIC.c: 100:          LED&=~(1<<5);
  3524  013E  30DF               	movlw	223
  3525  013F  05A0               	andwf	_LED,f
  3526  0140  30FF               	movlw	255
  3527  0141  05A1               	andwf	_LED+1,f
  3528  0142                     l262:	
  3529                           ;TRAFFIC.c: 101:       }
  3530                           
  3531                           
  3532                           ;TRAFFIC.c: 102:       if((~LED&(1<<6))&&(s3<=1))
  3533  0142  0821               	movf	_LED+1,w
  3534  0143  00BF               	movwf	??_Counting+1
  3535  0144  0820               	movf	_LED,w
  3536  0145  00BE               	movwf	??_Counting
  3537  0146  09BE               	comf	??_Counting,f
  3538  0147  09BF               	comf	??_Counting+1,f
  3539  0148  1F3E               	btfss	??_Counting,6
  3540  0149  294B               	goto	u1731
  3541  014A  294C               	goto	u1730
  3542  014B                     u1731:
  3543  014B  2958               	goto	l263
  3544  014C                     u1730:
  3545  014C                     l2334:
  3546  014C  0831               	movf	Counting@s3,w
  3547  014D  3A80               	xorlw	128
  3548  014E  3E7E               	addlw	-130
  3549  014F  1803               	skipnc
  3550  0150  2952               	goto	u1741
  3551  0151  2953               	goto	u1740
  3552  0152                     u1741:
  3553  0152  2958               	goto	l263
  3554  0153                     u1740:
  3555  0153                     l2336:
  3556                           
  3557                           ;TRAFFIC.c: 103:       {;TRAFFIC.c: 104:          LED|=(1<<7);
  3558  0153  17A0               	bsf	_LED,7
  3559  0154                     l2338:
  3560                           
  3561                           ;TRAFFIC.c: 105:          LED&=~(1<<8);
  3562  0154  30FF               	movlw	255
  3563  0155  05A0               	andwf	_LED,f
  3564  0156  30FE               	movlw	254
  3565  0157  05A1               	andwf	_LED+1,f
  3566  0158                     l263:	
  3567                           ;TRAFFIC.c: 106:       }
  3568                           
  3569                           
  3570                           ;TRAFFIC.c: 107:       if((~LED&(1<<9))&&(s4<=1))
  3571  0158  0821               	movf	_LED+1,w
  3572  0159  00BF               	movwf	??_Counting+1
  3573  015A  0820               	movf	_LED,w
  3574  015B  00BE               	movwf	??_Counting
  3575  015C  09BE               	comf	??_Counting,f
  3576  015D  09BF               	comf	??_Counting+1,f
  3577  015E  1CBF               	btfss	??_Counting+1,1
  3578  015F  2961               	goto	u1751
  3579  0160  2962               	goto	u1750
  3580  0161                     u1751:
  3581  0161  296E               	goto	l264
  3582  0162                     u1750:
  3583  0162                     l2340:
  3584  0162  0830               	movf	Counting@s4,w
  3585  0163  3A80               	xorlw	128
  3586  0164  3E7E               	addlw	-130
  3587  0165  1803               	skipnc
  3588  0166  2968               	goto	u1761
  3589  0167  2969               	goto	u1760
  3590  0168                     u1761:
  3591  0168  296E               	goto	l264
  3592  0169                     u1760:
  3593  0169                     l2342:
  3594                           
  3595                           ;TRAFFIC.c: 108:       {;TRAFFIC.c: 109:          LED|=(1<<10);
  3596  0169  1521               	bsf	_LED+1,2
  3597  016A                     l2344:
  3598                           
  3599                           ;TRAFFIC.c: 110:          LED&=~(1<<11);
  3600  016A  30FF               	movlw	255
  3601  016B  05A0               	andwf	_LED,f
  3602  016C  30F7               	movlw	247
  3603  016D  05A1               	andwf	_LED+1,f
  3604  016E                     l264:	
  3605                           ;TRAFFIC.c: 111:       }
  3606                           
  3607                           
  3608                           ;TRAFFIC.c: 112:      s1=(s1>0) ? s1: S1;
  3609  016E  0833               	movf	Counting@s1,w
  3610  016F  3A80               	xorlw	128
  3611  0170  3E7F               	addlw	-129
  3612  0171  1803               	skipnc
  3613  0172  2974               	goto	u1771
  3614  0173  2975               	goto	u1770
  3615  0174                     u1771:
  3616  0174  297D               	goto	l2348
  3617  0175                     u1770:
  3618  0175                     l2346:
  3619  0175  0825               	movf	Counting@S1,w
  3620  0176  00BE               	movwf	??_Counting
  3621  0177  01BF               	clrf	??_Counting+1
  3622  0178  083E               	movf	??_Counting,w
  3623  0179  00C2               	movwf	_Counting$253
  3624  017A  083F               	movf	??_Counting+1,w
  3625  017B  00C3               	movwf	_Counting$253+1
  3626  017C  2982               	goto	l2350
  3627  017D                     l2348:
  3628  017D  0833               	movf	Counting@s1,w
  3629  017E  00C2               	movwf	_Counting$253
  3630  017F  01C3               	clrf	_Counting$253+1
  3631  0180  1BC2               	btfsc	_Counting$253,7
  3632  0181  03C3               	decf	_Counting$253+1,f
  3633  0182                     l2350:
  3634  0182  0842               	movf	_Counting$253,w
  3635  0183  00FF               	movwf	btemp+1
  3636  0184  087F               	movf	btemp+1,w
  3637  0185  00B3               	movwf	Counting@s1
  3638  0186                     l2352:
  3639                           
  3640                           ;TRAFFIC.c: 113:      s2=(s2>0) ? s2: S2;
  3641  0186  0832               	movf	Counting@s2,w
  3642  0187  3A80               	xorlw	128
  3643  0188  3E7F               	addlw	-129
  3644  0189  1803               	skipnc
  3645  018A  298C               	goto	u1781
  3646  018B  298D               	goto	u1780
  3647  018C                     u1781:
  3648  018C  2995               	goto	l2356
  3649  018D                     u1780:
  3650  018D                     l2354:
  3651  018D  0824               	movf	Counting@S2,w
  3652  018E  00BE               	movwf	??_Counting
  3653  018F  01BF               	clrf	??_Counting+1
  3654  0190  083E               	movf	??_Counting,w
  3655  0191  00C4               	movwf	_Counting$254
  3656  0192  083F               	movf	??_Counting+1,w
  3657  0193  00C5               	movwf	_Counting$254+1
  3658  0194  299A               	goto	l2358
  3659  0195                     l2356:
  3660  0195  0832               	movf	Counting@s2,w
  3661  0196  00C4               	movwf	_Counting$254
  3662  0197  01C5               	clrf	_Counting$254+1
  3663  0198  1BC4               	btfsc	_Counting$254,7
  3664  0199  03C5               	decf	_Counting$254+1,f
  3665  019A                     l2358:
  3666  019A  0844               	movf	_Counting$254,w
  3667  019B  00FF               	movwf	btemp+1
  3668  019C  087F               	movf	btemp+1,w
  3669  019D  00B2               	movwf	Counting@s2
  3670  019E                     l2360:
  3671                           
  3672                           ;TRAFFIC.c: 114:      s3=(s3>0) ? s3: S3;
  3673  019E  0831               	movf	Counting@s3,w
  3674  019F  3A80               	xorlw	128
  3675  01A0  3E7F               	addlw	-129
  3676  01A1  1803               	skipnc
  3677  01A2  29A4               	goto	u1791
  3678  01A3  29A5               	goto	u1790
  3679  01A4                     u1791:
  3680  01A4  29AD               	goto	l2364
  3681  01A5                     u1790:
  3682  01A5                     l2362:
  3683  01A5  0823               	movf	Counting@S3,w
  3684  01A6  00BE               	movwf	??_Counting
  3685  01A7  01BF               	clrf	??_Counting+1
  3686  01A8  083E               	movf	??_Counting,w
  3687  01A9  00C6               	movwf	_Counting$255
  3688  01AA  083F               	movf	??_Counting+1,w
  3689  01AB  00C7               	movwf	_Counting$255+1
  3690  01AC  29B2               	goto	l2366
  3691  01AD                     l2364:
  3692  01AD  0831               	movf	Counting@s3,w
  3693  01AE  00C6               	movwf	_Counting$255
  3694  01AF  01C7               	clrf	_Counting$255+1
  3695  01B0  1BC6               	btfsc	_Counting$255,7
  3696  01B1  03C7               	decf	_Counting$255+1,f
  3697  01B2                     l2366:
  3698  01B2  0846               	movf	_Counting$255,w
  3699  01B3  00FF               	movwf	btemp+1
  3700  01B4  087F               	movf	btemp+1,w
  3701  01B5  00B1               	movwf	Counting@s3
  3702  01B6                     l2368:
  3703                           
  3704                           ;TRAFFIC.c: 115:      s4=(s4>0) ? s4: S4;
  3705  01B6  0830               	movf	Counting@s4,w
  3706  01B7  3A80               	xorlw	128
  3707  01B8  3E7F               	addlw	-129
  3708  01B9  1803               	skipnc
  3709  01BA  29BC               	goto	u1801
  3710  01BB  29BD               	goto	u1800
  3711  01BC                     u1801:
  3712  01BC  29C5               	goto	l2372
  3713  01BD                     u1800:
  3714  01BD                     l2370:
  3715  01BD  0822               	movf	Counting@S4,w
  3716  01BE  00BE               	movwf	??_Counting
  3717  01BF  01BF               	clrf	??_Counting+1
  3718  01C0  083E               	movf	??_Counting,w
  3719  01C1  00C8               	movwf	_Counting$256
  3720  01C2  083F               	movf	??_Counting+1,w
  3721  01C3  00C9               	movwf	_Counting$256+1
  3722  01C4  29CA               	goto	l2374
  3723  01C5                     l2372:
  3724  01C5  0830               	movf	Counting@s4,w
  3725  01C6  00C8               	movwf	_Counting$256
  3726  01C7  01C9               	clrf	_Counting$256+1
  3727  01C8  1BC8               	btfsc	_Counting$256,7
  3728  01C9  03C9               	decf	_Counting$256+1,f
  3729  01CA                     l2374:
  3730  01CA  0848               	movf	_Counting$256,w
  3731  01CB  00FF               	movwf	btemp+1
  3732  01CC  087F               	movf	btemp+1,w
  3733  01CD  00B0               	movwf	Counting@s4
  3734  01CE                     l2376:
  3735                           
  3736                           ;TRAFFIC.c: 116:      Sec2Time(s1,s2,s3,s4);
  3737  01CE  0832               	movf	Counting@s2,w
  3738  01CF  00FF               	movwf	btemp+1
  3739  01D0  087F               	movf	btemp+1,w
  3740  01D1  00F3               	movwf	Sec2Time@t2
  3741  01D2  0831               	movf	Counting@s3,w
  3742  01D3  00FF               	movwf	btemp+1
  3743  01D4  087F               	movf	btemp+1,w
  3744  01D5  00F4               	movwf	Sec2Time@t3
  3745  01D6  0830               	movf	Counting@s4,w
  3746  01D7  00FF               	movwf	btemp+1
  3747  01D8  087F               	movf	btemp+1,w
  3748  01D9  00F5               	movwf	Sec2Time@t4
  3749  01DA  0833               	movf	Counting@s1,w
  3750  01DB  120A  118A  24FF  120A  118A  	fcall	_Sec2Time
  3751  01E0                     l244:
  3752  01E0  0008               	return
  3753  01E1                     __end_of_Counting:
  3754                           
  3755                           	psect	text11
  3756  04FF                     __ptext11:	
  3757 ;; *************** function _Sec2Time *****************
  3758 ;; Defined at:
  3759 ;;		line 120 in file "TRAFFIC.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  t1              1    wreg     unsigned char 
  3762 ;;  t2              1    3[COMMON] unsigned char 
  3763 ;;  t3              1    4[COMMON] unsigned char 
  3764 ;;  t4              1    5[COMMON] unsigned char 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  t1              1    6[COMMON] unsigned char 
  3767 ;;  k               1    7[COMMON] unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         3       0       0       0       0
  3778 ;;      Locals:         2       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         5       0       0       0       0
  3781 ;;Total ram usage:        5 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    2
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_Counting
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           
  3792                           ;psect for function _Sec2Time
  3793  04FF                     _Sec2Time:
  3794                           
  3795                           ;incstack = 0
  3796                           ; Regs used in _Sec2Time: [wreg-fsr0h+status,2+status,0+btemp+1]
  3797                           ;Sec2Time@t1 stored from wreg
  3798  04FF  00F6               	movwf	Sec2Time@t1
  3799  0500                     l1768:
  3800                           
  3801                           ;TRAFFIC.c: 120: void Sec2Time(char t1,char t2,char t3,char t4);TRAFFIC.c: 121: {;TRAFFI
      +                          C.c: 122:     for(char k=0;k<8;k++)
  3802  0500  01F7               	clrf	Sec2Time@k
  3803  0501                     l1774:
  3804                           
  3805                           ;TRAFFIC.c: 123:          Seg[k]=0;
  3806  0501  0877               	movf	Sec2Time@k,w
  3807  0502  3E34               	addlw	(low (_Seg| 0))& (0+255)
  3808  0503  0084               	movwf	4
  3809  0504  1383               	bcf	3,7	;select IRP bank0
  3810  0505  0180               	clrf	0
  3811  0506                     l1776:
  3812  0506  3001               	movlw	1
  3813  0507  00FF               	movwf	btemp+1
  3814  0508  087F               	movf	btemp+1,w
  3815  0509  07F7               	addwf	Sec2Time@k,f
  3816  050A                     l1778:
  3817  050A  3008               	movlw	8
  3818  050B  0277               	subwf	Sec2Time@k,w
  3819  050C  1C03               	skipc
  3820  050D  2D0F               	goto	u1091
  3821  050E  2D10               	goto	u1090
  3822  050F                     u1091:
  3823  050F  2D01               	goto	l1774
  3824  0510                     u1090:
  3825  0510  2D19               	goto	l1784
  3826  0511                     l1780:
  3827                           
  3828                           ;TRAFFIC.c: 125:     {;TRAFFIC.c: 126:         Seg[0]++;
  3829  0511  3001               	movlw	1
  3830  0512  00FF               	movwf	btemp+1
  3831  0513  087F               	movf	btemp+1,w
  3832  0514  1283               	bcf	3,5	;RP0=0, select bank0
  3833  0515  1303               	bcf	3,6	;RP1=0, select bank0
  3834  0516  07B4               	addwf	_Seg,f
  3835  0517                     l1782:
  3836                           
  3837                           ;TRAFFIC.c: 127:         t1-=10;
  3838  0517  300A               	movlw	10
  3839  0518  02F6               	subwf	Sec2Time@t1,f
  3840  0519                     l1784:
  3841                           
  3842                           ;TRAFFIC.c: 124:     while(t1>=10)
  3843  0519  300A               	movlw	10
  3844  051A  0276               	subwf	Sec2Time@t1,w
  3845  051B  1803               	skipnc
  3846  051C  2D1E               	goto	u1101
  3847  051D  2D1F               	goto	u1100
  3848  051E                     u1101:
  3849  051E  2D11               	goto	l1780
  3850  051F                     u1100:
  3851  051F  2D28               	goto	l1790
  3852  0520                     l1786:
  3853                           
  3854                           ;TRAFFIC.c: 130:      {;TRAFFIC.c: 131:         Seg[2]++;
  3855  0520  3001               	movlw	1
  3856  0521  00FF               	movwf	btemp+1
  3857  0522  087F               	movf	btemp+1,w
  3858  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3859  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3860  0525  07B6               	addwf	_Seg+2,f
  3861  0526                     l1788:
  3862                           
  3863                           ;TRAFFIC.c: 132:         t2-=10;
  3864  0526  300A               	movlw	10
  3865  0527  02F3               	subwf	Sec2Time@t2,f
  3866  0528                     l1790:
  3867                           
  3868                           ;TRAFFIC.c: 129:      while(t2>=10)
  3869  0528  300A               	movlw	10
  3870  0529  0273               	subwf	Sec2Time@t2,w
  3871  052A  1803               	skipnc
  3872  052B  2D2D               	goto	u1111
  3873  052C  2D2E               	goto	u1110
  3874  052D                     u1111:
  3875  052D  2D20               	goto	l1786
  3876  052E                     u1110:
  3877  052E  2D37               	goto	l1796
  3878  052F                     l1792:
  3879                           
  3880                           ;TRAFFIC.c: 135:         Seg[4]++;
  3881  052F  3001               	movlw	1
  3882  0530  00FF               	movwf	btemp+1
  3883  0531  087F               	movf	btemp+1,w
  3884  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3885  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3886  0534  07B8               	addwf	_Seg+4,f
  3887  0535                     l1794:
  3888                           
  3889                           ;TRAFFIC.c: 136:         t3-=10;
  3890  0535  300A               	movlw	10
  3891  0536  02F4               	subwf	Sec2Time@t3,f
  3892  0537                     l1796:
  3893                           
  3894                           ;TRAFFIC.c: 134:      while(t3>=10){
  3895  0537  300A               	movlw	10
  3896  0538  0274               	subwf	Sec2Time@t3,w
  3897  0539  1803               	skipnc
  3898  053A  2D3C               	goto	u1121
  3899  053B  2D3D               	goto	u1120
  3900  053C                     u1121:
  3901  053C  2D2F               	goto	l1792
  3902  053D                     u1120:
  3903  053D  2D46               	goto	l1802
  3904  053E                     l1798:
  3905                           
  3906                           ;TRAFFIC.c: 139:      {;TRAFFIC.c: 140:         Seg[6]++;
  3907  053E  3001               	movlw	1
  3908  053F  00FF               	movwf	btemp+1
  3909  0540  087F               	movf	btemp+1,w
  3910  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3911  0542  1303               	bcf	3,6	;RP1=0, select bank0
  3912  0543  07BA               	addwf	_Seg+6,f
  3913  0544                     l1800:
  3914                           
  3915                           ;TRAFFIC.c: 141:         t4-=10;
  3916  0544  300A               	movlw	10
  3917  0545  02F5               	subwf	Sec2Time@t4,f
  3918  0546                     l1802:
  3919                           
  3920                           ;TRAFFIC.c: 138:      while(t4>=10)
  3921  0546  300A               	movlw	10
  3922  0547  0275               	subwf	Sec2Time@t4,w
  3923  0548  1803               	skipnc
  3924  0549  2D4B               	goto	u1131
  3925  054A  2D4C               	goto	u1130
  3926  054B                     u1131:
  3927  054B  2D3E               	goto	l1798
  3928  054C                     u1130:
  3929  054C                     l1804:
  3930                           
  3931                           ;TRAFFIC.c: 143:     Seg[1]=t1;
  3932  054C  0876               	movf	Sec2Time@t1,w
  3933  054D  00FF               	movwf	btemp+1
  3934  054E  087F               	movf	btemp+1,w
  3935  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3937  0551  00B5               	movwf	_Seg+1
  3938                           
  3939                           ;TRAFFIC.c: 144:     Seg[3]=t2;
  3940  0552  0873               	movf	Sec2Time@t2,w
  3941  0553  00FF               	movwf	btemp+1
  3942  0554  087F               	movf	btemp+1,w
  3943  0555  00B7               	movwf	_Seg+3
  3944                           
  3945                           ;TRAFFIC.c: 145:     Seg[5]=t3;
  3946  0556  0874               	movf	Sec2Time@t3,w
  3947  0557  00FF               	movwf	btemp+1
  3948  0558  087F               	movf	btemp+1,w
  3949  0559  00B9               	movwf	_Seg+5
  3950                           
  3951                           ;TRAFFIC.c: 146:     Seg[7]=t4;
  3952  055A  0875               	movf	Sec2Time@t4,w
  3953  055B  00FF               	movwf	btemp+1
  3954  055C  087F               	movf	btemp+1,w
  3955  055D  00BB               	movwf	_Seg+7
  3956  055E                     l297:
  3957  055E  0008               	return
  3958  055F                     __end_of_Sec2Time:
  3959                           
  3960                           	psect	text12
  3961  0645                     __ptext12:	
  3962 ;; *************** function _ISR *****************
  3963 ;; Defined at:
  3964 ;;		line 77 in file "main.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3978 ;;      Params:         0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0
  3980 ;;      Temps:          3       0       0       0       0
  3981 ;;      Totals:         3       0       0       0       0
  3982 ;;Total ram usage:        3 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    1
  3985 ;; This function calls:
  3986 ;;		_TMR2_ClearIntFlag
  3987 ;;		_TMR2_GetIntFlag
  3988 ;; This function is called by:
  3989 ;;		Interrupt level 1
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function _ISR
  3995  0645                     _ISR:
  3996  0645                     i1l2180:
  3997                           
  3998                           ;main.c: 79:     if( TMR2_GetIntFlag())
  3999  0645  120A  118A  26AD  120A  118A  	fcall	_TMR2_GetIntFlag
  4000  064A  3A00               	xorlw	0
  4001  064B  1903               	skipnz
  4002  064C  2E4E               	goto	u164_21
  4003  064D  2E4F               	goto	u164_20
  4004  064E                     u164_21:
  4005  064E  2E57               	goto	i1l89
  4006  064F                     u164_20:
  4007  064F                     i1l2182:
  4008                           
  4009                           ;main.c: 80:     {;main.c: 81:         TMR2_ClearIntFlag();
  4010  064F  120A  118A  26B6  120A  118A  	fcall	_TMR2_ClearIntFlag
  4011  0654                     i1l2184:
  4012                           
  4013                           ;main.c: 82:         SysTick.On_Off=OFF;
  4014  0654  1283               	bcf	3,5	;RP0=0, select bank0
  4015  0655  1303               	bcf	3,6	;RP1=0, select bank0
  4016  0656  102E               	bcf	_SysTick,0
  4017  0657                     i1l89:
  4018  0657  0872               	movf	??_ISR+2,w
  4019  0658  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0659  1303               	bcf	3,6	;RP1=0, select bank0
  4021  065A  00FF               	movwf	btemp+1
  4022  065B  0871               	movf	??_ISR+1,w
  4023  065C  008A               	movwf	10
  4024  065D  0E70               	swapf	??_ISR^(0+4294967168),w
  4025  065E  0083               	movwf	3
  4026  065F  0EFE               	swapf	btemp,f
  4027  0660  0E7E               	swapf	btemp,w
  4028  0661  0009               	retfie
  4029  0662                     __end_of_ISR:
  4030                           
  4031                           	psect	intentry
  4032  0004                     __pintentry:	
  4033                           ;incstack = 0
  4034                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4035                           
  4036  0004                     interrupt_function:
  4037  007E                     saved_w	set	btemp
  4038  0004  00FE               	movwf	btemp
  4039  0005  0E03               	swapf	3,w
  4040  0006  00F0               	movwf	??_ISR
  4041  0007  080A               	movf	10,w
  4042  0008  00F1               	movwf	??_ISR+1
  4043  0009  1283               	bcf	3,5	;RP0=0, select bank0
  4044  000A  1303               	bcf	3,6	;RP1=0, select bank0
  4045  000B  087F               	movf	btemp+1,w
  4046  000C  00F2               	movwf	??_ISR+2
  4047  000D  120A  118A  2E45   	ljmp	_ISR
  4048                           
  4049                           	psect	text13
  4050  06AD                     __ptext13:	
  4051 ;; *************** function _TMR2_GetIntFlag *****************
  4052 ;; Defined at:
  4053 ;;		line 53 in file "TMR2.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      unsigned char 
  4060 ;; Registers used:
  4061 ;;		wreg
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4067 ;;      Params:         0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_ISR
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function _TMR2_GetIntFlag
  4082  06AD                     _TMR2_GetIntFlag:
  4083  06AD                     i1l2138:	
  4084                           ;incstack = 0
  4085                           ; Regs used in _TMR2_GetIntFlag: [wreg]
  4086                           
  4087                           
  4088                           ;TMR2.c: 55:      return (PIR1 & (1<<1)) ? 1:0;
  4089  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  4090  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  4091  06AF  188C               	btfsc	12,1	;volatile
  4092  06B0  2EB2               	goto	u159_21
  4093  06B1  2EB4               	goto	u159_20
  4094  06B2                     u159_21:
  4095  06B2  3001               	movlw	1
  4096  06B3  2EB5               	goto	u160_20
  4097  06B4                     u159_20:
  4098  06B4  3000               	movlw	0
  4099  06B5                     u160_20:
  4100  06B5                     i1l128:
  4101  06B5  0008               	return
  4102  06B6                     __end_of_TMR2_GetIntFlag:
  4103                           
  4104                           	psect	text14
  4105  06B6                     __ptext14:	
  4106 ;; *************** function _TMR2_ClearIntFlag *****************
  4107 ;; Defined at:
  4108 ;;		line 58 in file "TMR2.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, btemp+1
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0
  4125 ;;      Totals:         0       0       0       0       0
  4126 ;;Total ram usage:        0 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_ISR
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function _TMR2_ClearIntFlag
  4137  06B6                     _TMR2_ClearIntFlag:
  4138  06B6                     i1l2142:	
  4139                           ;incstack = 0
  4140                           ; Regs used in _TMR2_ClearIntFlag: [wreg+status,2+status,0+btemp+1]
  4141                           
  4142                           
  4143                           ;TMR2.c: 60:     PIR1&=~(1<<1);
  4144  06B6  30FD               	movlw	253
  4145  06B7  00FF               	movwf	btemp+1
  4146  06B8  087F               	movf	btemp+1,w
  4147  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  4148  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  4149  06BB  058C               	andwf	12,f	;volatile
  4150  06BC                     i1l131:
  4151  06BC  0008               	return
  4152  06BD                     __end_of_TMR2_ClearIntFlag:
  4153  007E                     btemp	set	126	;btemp
  4154  007E                     wtemp0	set	126
  4155                           
  4156                           	psect	config
  4157                           
  4158                           ;Config register CONFIG1 @ 0x2007
  4159                           ;	Oscillator Selection bits
  4160                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4161                           ;	Watchdog Timer Enable bit
  4162                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4163                           ;	Power-up Timer Enable bit
  4164                           ;	PWRTE = OFF, PWRT disabled
  4165                           ;	RE3/MCLR pin function select bit
  4166                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4167                           ;	Code Protection bit
  4168                           ;	CP = OFF, Program memory code protection is disabled
  4169                           ;	Data Code Protection bit
  4170                           ;	CPD = OFF, Data memory code protection is disabled
  4171                           ;	Brown Out Reset Selection bits
  4172                           ;	BOREN = ON, BOR enabled
  4173                           ;	Internal External Switchover bit
  4174                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4175                           ;	Fail-Safe Clock Monitor Enabled bit
  4176                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4177                           ;	Low Voltage Programming Enable bit
  4178                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4179                           ;	In-Circuit Debugger Mode bit
  4180                           ;	DEBUG = 0x1, unprogrammed default
  4181  2007                     	org	8199
  4182  2007  2FF4               	dw	12276
  4183                           
  4184                           ;Config register CONFIG2 @ 0x2008
  4185                           ;	Brown-out Reset Selection bit
  4186                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4187                           ;	Flash Program Memory Self Write Enable bits
  4188                           ;	WRT = OFF, Write protection off
  4189  2008                     	org	8200
  4190  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        15
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     13      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Latch_Traffic_LED@LATptr	PTR int  size(1) Largest target is 2
		 -> LAT(COMMON[2]), 

    LED_7SEGMENT_Update@val	PTR unsigned char  size(1) Largest target is 10
		 -> Seg(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_TMR2_Setup
    _main->_VIP_mode
    _VIP_mode->_LED_7SEGMENT_Update
    _VIP_mode->_Latch_Traffic_LED
    _Counting->_Sec2Time

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Counting

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3157
                                             12 BANK0      1     1      0
                            _Clr_LED
                           _Counting
                _LED_7SEGMENT_Update
                  _Latch_Traffic_LED
                          _PORT_Init
                     _TMR2_Interrupt
                            _TMR2_ON
                         _TMR2_Setup
                      _Traffic_Light
                           _VIP_mode
 ---------------------------------------------------------------------------------
 (1) _VIP_mode                                             2     2      0     970
                                              6 COMMON     2     2      0
                            _Clr_LED
                _LED_7SEGMENT_Update
                  _Latch_Traffic_LED
 ---------------------------------------------------------------------------------
 (2) _Latch_Traffic_LED                                    3     3      0     209
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LED_7SEGMENT_Update                                  3     3      0     693
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Clr_LED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Traffic_Light                                        2     0      2     340
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_Setup                                           5     3      2     262
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_ON                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Interrupt                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Counting                                            12    12      0     661
                                              0 BANK0     12    12      0
                           _Sec2Time
 ---------------------------------------------------------------------------------
 (2) _Sec2Time                                             5     2      3     476
                                              3 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                  _TMR2_ClearIntFlag
                    _TMR2_GetIntFlag
 ---------------------------------------------------------------------------------
 (4) _TMR2_GetIntFlag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR2_ClearIntFlag                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clr_LED
   _Counting
     _Sec2Time
   _LED_7SEGMENT_Update
   _Latch_Traffic_LED
   _PORT_Init
   _TMR2_Interrupt
   _TMR2_ON
   _TMR2_Setup
   _Traffic_Light
   _VIP_mode
     _Clr_LED
     _LED_7SEGMENT_Update
     _Latch_Traffic_LED

 _ISR (ROOT)
   _TMR2_ClearIntFlag
   _TMR2_GetIntFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Aug 24 15:33:32 2020

                              pc 0002                               l74 04A8                               l83 0644  
                             l76 04AC                               fsr 0004                              l120 06C0  
                            l105 056C                              l114 05A2                              l106 056E  
                            l108 0570                              l300 05A9                              l125 0679  
                            l117 05A3                              l301 05AE                              l310 05DB  
                            l302 05B3                              l303 05B8                              l312 05E0  
                            l304 05BD                              l305 05C2                              l217 069D  
                            l306 05C7                              l307 05CC                              l315 06C3  
                            l163 01F9                              l244 01E0                              l308 05D1  
                            l261 012C                              l309 05D6                              l262 0142  
                            l350 0382                              l263 0158                              l264 016E  
                            l192 0366                              l360 0402                              l345 0377  
                            l258 00FC                              l370 0485                              l362 0406  
                            l354 03C0                              l356 03C4                              l348 037E  
                            l366 0444                              l368 0448                              l297 055E  
                            _LED 0020                              _LAT 0079                              _PR2 0092  
                            _ISR 0645                              u900 0243                              u901 0242  
                            u910 0260                              u830 01EE                              u911 025F  
                            u831 01ED                              u920 0268                              u840 01F7  
                            u921 0267                              u841 01F6                              u930 026D  
                            u850 020F                              u931 026C                              u851 020E  
                            u940 028A                              u860 0217                              u941 0289  
                            u861 0216                              u950 0292                              u870 021C  
                            u951 0291                              u871 021B                              u960 0297  
                            u880 0236                              u961 0296                              u881 0235  
                            u970 02B4                              u890 023E                              u971 02B3  
                            u891 023D                              u980 02BC                              u981 02BB  
                            u990 02C1                              u991 02C0                              _VIP 002C  
                            _Seg 0034                _Latch_Traffic_LED 068D                              fsr0 0004  
                            indf 0000                      _VIP_PrioTab 0616                       Counting@S1 0025  
                     Counting@S2 0024                       Counting@S3 0023                       Counting@S4 0022  
                     Counting@s1 0033                       Counting@s2 0032                       Counting@s3 0031  
                     Counting@s4 0030               ?_Latch_Traffic_LED 0070                             ?_ISR 0070  
                           l2000 05AD                             l2010 05C6                             l2002 05B2  
                           l2020 05DF                             l2012 05CB                             l2004 05B7  
                           l2100 041C                             l2014 05D0                             l2006 05BC  
                           l2102 041F                             l2110 043D                             l2030 036D  
                           l2022 0367                             l2016 05D5                             l2008 05C1  
                           l2120 0456                             l2112 0449                             l2104 042C  
                           l2040 038F                             l2032 0371                             l2018 05DA  
                           l2130 046E                             l2122 0457                             l2114 044E  
                           l2106 0430                             l2050 039B                             l2042 0390  
                           l2034 0383                             l2300 00C1                             l2132 0472  
                           l2124 0458                             l2116 0454                             l2108 043B  
                           l2060 03C5                             l2052 03A8                             l2044 0391  
                           l2036 0388                             l2028 0368                             l2310 00E3  
                           l2302 00C5                             l2134 047D                             l2126 045E  
                           l2118 0455                             l2070 03D3                             l2062 03CA  
                           l2054 03AC                             l2046 0392                             l2038 038E  
                           l2312 00F3                             l2304 00CA                             l2320 0116  
                           l2128 0461                             l2136 047F                             l2080 03EE  
                           l2072 03D4                             l2064 03D0                             l2056 03B7  
                           l2048 0398                             l2400 04BD                             l2330 013D  
                           l2322 0120                             l2314 00F7                             l2306 00DA  
                           l2250 0041                             l2090 0412                             l2082 03F9  
                           l2074 03DA                             l2066 03D1                             l2058 03B9  
                           l2410 04E2                             l2402 04C8                             l2340 0162  
                           l2332 013E                             l2324 0127                             l2308 00DE  
                           l2252 0046                             l2260 0056                             l1700 02BC  
                           l1620 01E8                             l2092 0413                             l2076 03DD  
                           l2068 03D2                             l2084 03FB                             l2412 04ED  
                           l2404 04CE                             l2350 0182                             l2342 0169  
                           l2334 014C                             l2326 0128                             l2318 00FD  
                           l2270 006B                             l2262 005A                             l2254 004A  
                           l2246 0037                             l1710 02D7                             l1702 02C1  
                           l1630 0208                             l1622 01EE                             l2094 0414  
                           l2086 0407                             l2078 03EA                             l2414 04F2  
                           l2406 04D1                             l1800 0544                             l2360 019E  
                           l2352 0186                             l2344 016A                             l2336 0153  
                           l2328 0136                             l2280 007C                             l2272 006C  
                           l2256 004E                             l2248 003E                             l1616 06C1  
                           l1720 02ED                             l1712 02DE                             l1704 02C3  
                           l1640 021E                             l1632 020F                             l1624 01F1  
                           l2096 0415                             l2088 040C                             l2416 04F7  
                           l2408 04DE                             l1802 0546                             l2370 01BD  
                           l2362 01A5                             l2354 018D                             l2346 0175  
                           l2338 0154                             l2290 0093                             l2282 0080  
                           l2274 0070                             l2266 0061                             l2258 0052  
                           l1810 062B                             l1730 0309                             l1722 02EE  
                           l1714 02DF                             l1706 02C4                             l1650 0237  
                           l1642 021F                             l1634 0210                             l1626 01F7  
                           l1618 01E2                             l2098 0416                             l1804 054C  
                           l2372 01C5                             l2364 01AD                             l2356 0195  
                           l2348 017D                             l2292 0098                             l2284 0081  
                           l2276 0074                             l2268 0065                             l1820 0634  
                           l1812 062C                             l1740 031D                             l1732 0310  
                           l1724 02F3                             l1716 02E6                             l1708 02C9  
                           l1660 024B                             l1652 023E                             l1644 0222  
                           l1636 0217                             l1628 01FB                             l2374 01CA  
                           l2366 01B2                             l2358 019A                             l2294 00A8  
                           l2286 0087                             l2278 0078                             l1822 063A  
                           l1814 062D                             l1806 0626                             l1830 0560  
                           l1750 033F                             l1742 032B                             l1734 0315  
                           l1726 0301                             l1718 02EB                             l1670 026D  
                           l1662 0259                             l1654 0243                             l1646 022F  
                           l1638 021C                             l2390 04A4                             l2382 0486  
                           l2376 01CE                             l2368 01B6                             l2296 00AC  
                           l2288 008F                             l1824 063C                             l1816 0630  
                           l1808 0629                             l1840 058E                             l2480 0579  
                           l1832 0565                             l1752 0341                             l1744 0332  
                           l1736 0317                             l1728 0308                             l1680 028A  
                           l1672 026F                             l1664 0260                             l1656 0245  
                           l1648 0236                             l2392 04A5                             l2384 048B  
                           l2482 0105                             l2298 00B1                             l1826 063F  
                           l1818 0631                             l1850 0669                             l1842 0593  
                           l1834 0571                             l1754 0342                             l1746 0333  
                           l1738 0318                             l1690 029A                             l1682 028B  
                           l1674 0270                             l1666 0261                             l1658 0246  
                           l2394 04AD                             l2386 0499                             l1780 0511  
                           l1828 0640                             l1852 066E                             l1836 0584  
                           l1748 033A                             l1692 029F                             l1684 0292  
                           l1676 0275                             l1668 0268                             l1764 068E  
                           l2396 04B2                             l2388 049F                             l1790 0528  
                           l1782 0517                             l1774 0501                             l1854 0672  
                           l1838 058A                             l2478 034C                             l1694 02AD  
                           l1686 0297                             l1678 0283                             l1758 0344  
                           l1766 0694                             l2398 04B7                             l1792 052F  
                           l1784 0519                             l1776 0506                             l1768 0500  
                           l1856 0678                             l1848 0663                             l1696 02B4  
                           l1688 0299                             l1794 0535                             l1786 0520  
                           l1778 050A                             l1858 06BD                             l1698 02B5  
                           l1796 0537                             l1788 0526                             l1798 053E  
                           l1996 05A4                             l1998 05A8                             u1000 02DE  
                           u1001 02DD                             u1010 02E6                             u1011 02E5  
                           u1100 051F                             u1020 02EB                             u1101 051E  
                           u1021 02EA                             u1110 052E                             u1030 0308  
                           u1111 052D                             u1031 0307                             u1120 053D  
                           u1040 0310                             u1121 053C                             u1041 030F  
                           u1130 054C                             u1050 0315                             u1131 054B  
                           u1051 0314                             u1140 058A                             u1060 0332  
                           u1141 0589                             u1061 0331                             u1150 0593  
                           u1070 033A                             u1151 0592                             u1071 0339  
                           u1400 05C6                             u1080 033F                             u1401 05C5  
                           u1081 033E                             u1090 0510                             u1170 066E  
                           u1410 05CB                             u1091 050F                             u1171 066D  
                           u1411 05CA                             u1420 05D0                             u1340 05A8  
                           u1500 03C4                             u1165 0596                             u1421 05CF  
                           u1341 05A7                             u1501 03C3                             u1430 05D5  
                           u1350 05AD                             u1431 05D4                             u1351 05AC  
                           u1440 05DA                             u1360 05B2                             u1520 0401  
                           u1441 05D9                             u1361 05B1                             u1521 0400  
                           u1450 05DF                             u1370 05B7                             u1530 0406  
                           u1451 05DE                             u1371 05B6                             u1531 0405  
                           u1515 03E0                             u1700 0127                             u1380 05BC  
                           u1460 0377                             u1701 0126                             u1381 05BB  
                           u1461 0376                             u1710 0136                             u1390 05C1  
                           u1550 0443                             u1470 0382                             u1711 0135  
                           u1391 05C0                             u1551 0442                             u1471 0381  
                           u1800 01BD                             u1720 013D                             u1560 0448  
                           u1801 01BC                             u1721 013C                             u1561 0447  
                           u1545 0422                             u1730 014C                             u1650 003E  
                           u1490 03BF                             u1810 04AC                             u1731 014B  
                           u1651 003D                             u1491 03BE                             u1811 04AB  
                           u1740 0153                             u1660 0060                             u1580 0485  
                           u1741 0152                             u1661 005F                             u1581 0484  
                           u1485 039E                             u1750 0162                             u1670 006B  
                           u1830 04F2                             u1751 0161                             u1671 006A  
                           u1575 0464                             u1831 04F1                             _PIE1 008C  
                           u1760 0169                             u1680 0087                             u1761 0168  
                           u1681 0086                             u1825 04D4                             u1770 0175  
                           u1690 0120                             u1771 0174                             u1691 011F  
                           u1780 018D                             u1781 018C                             u1790 01A5  
                           u1791 01A4                             _PIR1 000C                             i1l89 0657  
                           _WPUB 0095              ??_Latch_Traffic_LED 0073                             _Temp 002B  
                __end_of_TMR2_ON 06C1                             _main 0486                             btemp 007E  
                           start 0010                  __end_of_Clr_LED 06C4          __end_of_TMR2_GetIntFlag 06B6  
                          ??_ISR 0070        __end_of_Latch_Traffic_LED 069E                            ?_main 0070  
                          _T2CON 0012                            i1l131 06BC                            i1l128 06B5  
                          _PORTA 0005                            _PORTB 0006                            _PORTC 0007  
                          _PORTD 0008                            _TRISA 0085                            _TRISB 0086  
                          _TRISC 0087                            _TRISD 0088                      ?_TMR2_Setup 0073  
                          _reset 002D               __size_of_PORT_Init 001F                            pclath 000A  
               __end_of_VIP_mode 0486                            status 0003                            wtemp0 007E  
                __initialization 0013                 __end_of_Sec2Time 055F                     __end_of_main 04FF  
                    _BlinkStatus 0078                 __end_of_Counting 01E1              _LED_7SEGMENT_Update 01E1  
                         ??_main 004A                        ??_TMR2_ON 0073             ?_LED_7SEGMENT_Update 0070  
                         _ANSELH 0189                           i1l2142 06B6                           i1l2138 06AD  
                         i1l2180 0645                           i1l2182 064F                           i1l2184 0654  
                         u160_20 06B5                           _INTCON 000B                           u164_20 064F  
                         u164_21 064E                           u159_20 06B4                           u159_21 06B2  
                      ??_Clr_LED 0073                           _OSCCON 008F                           _SegTab 0606  
               ?_TMR2_GetIntFlag 0070              __size_of_TMR2_Setup 0045                __end_of_PORT_Init 0645  
     __size_of_Latch_Traffic_LED 0011         LED_7SEGMENT_Update@State 0029                           saved_w 007E  
          ??_LED_7SEGMENT_Update 0073          __end_of__initialization 0033                   __pcstackCOMMON 0070  
                TMR2_Setup@presc 0073                     __pidataBANK0 069E                        ?_VIP_mode 0070  
          __end_of_Traffic_Light 05E1                        ?_Sec2Time 0073                       __pbssBANK0 0020  
                      ?_Counting 0070          __size_of_TMR2_Interrupt 0018                       __pmaintext 0486  
                     __pintentry 0004                 TMR2_Interrupt@En 0073                       ??_VIP_mode 0076  
                   ??_TMR2_Setup 0075                          _TMR2_ON 06BD                       ??_Sec2Time 0076  
                     __stringtab 0600                       ??_Counting 003E                          _Clr_LED 06C1  
                        _SysTick 002E               __end_of_TMR2_Setup 05A4                        VIP_mode@i 0077  
                        __ptext1 0367                          __ptext2 068D                          __ptext3 01E1  
                        __ptext4 06C1                          __ptext5 05A4                          __ptext6 055F  
                        __ptext7 06BD                          __ptext8 0662                          __ptext9 0626  
                   __size_of_ISR 001D             end_of_initialization 0033                     _Counting$252 0040  
                   _Counting$253 0042                     _Counting$254 0044                     _Counting$255 0046  
                   _Counting$256 0048                        _PORT_Init 0626                        Sec2Time@k 0077  
                      Counting@T 002F                        Counting@i 0027                        Counting@j 0026  
                 _TMR2_Interrupt 0662                   __end_of_SegTab 0616                 Traffic_Light@led 0073  
               TMR2_Setup@period 0077                 TMR2_Setup@postsc 0074                       ?_PORT_Init 0070  
    __end_of_LED_7SEGMENT_Update 0367           LED_7SEGMENT_Update@val 0075         __size_of_TMR2_GetIntFlag 0009  
            start_initialization 0013                      __end_of_ISR 0662                __size_of_VIP_mode 011F  
         __end_of_TMR2_Interrupt 067A                __size_of_Sec2Time 0060                __size_of_Counting 01AA  
                     init_fetch0 067A                      __pdataBANK0 002F                      __pbssCOMMON 0078  
                      ___latbits 0002                    __pcstackBANK0 003E                         ?_TMR2_ON 0070  
                       ?_Clr_LED 0070                  ?_TMR2_Interrupt 0070           __size_of_Traffic_Light 003D  
                      __pstrings 0600                      ??_PORT_Init 0073                ??_TMR2_GetIntFlag 0070  
              interrupt_function 0004                      __stringbase 0605                _TMR2_ClearIntFlag 06B6  
                       _VIP_mode 0367               ?_TMR2_ClearIntFlag 0070                    _Traffic_Light 05A4  
                       _Sec2Time 04FF                 __size_of_TMR2_ON 0004              ??_TMR2_ClearIntFlag 0070  
                       _Counting 0037                         _SegDigit 002A                 __size_of_Clr_LED 0003  
      __end_of_TMR2_ClearIntFlag 06BD               __end_of__stringtab 0606          Latch_Traffic_LED@LATptr 0075  
LED_7SEGMENT_Update@BlinkCounter 0028                   ?_Traffic_Light 0073                         __ptext10 0037  
                       __ptext11 04FF                         __ptext12 0645                         __ptext13 06AD  
                       __ptext14 06B6                    __size_of_main 0079                       _INTCONbits 000B  
               ??_TMR2_Interrupt 0073                         init_ram0 067E     __size_of_LED_7SEGMENT_Update 0186  
            __end_of_VIP_PrioTab 0626                         intlevel1 0000                        stringcode 0600  
     __size_of_TMR2_ClearIntFlag 0007                  _TMR2_GetIntFlag 06AD                       _OPTION_REG 0081  
                ??_Traffic_Light 0075                         stringdir 0600                         stringtab 0600  
                     _TMR2_Setup 055F                       Sec2Time@t1 0076                       Sec2Time@t2 0073  
                     Sec2Time@t3 0074                       Sec2Time@t4 0075  
