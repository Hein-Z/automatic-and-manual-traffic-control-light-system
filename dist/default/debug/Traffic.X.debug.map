Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/debug\Traffic.X.debug.sym \
  --cmf=dist/default/debug\Traffic.X.debug.cmf -z -Q16F887 \
  -oC:\Users\User\AppData\Local\Temp\s1ik.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/debug/Traffic.X.debug.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\User\AppData\Local\Temp\s1ik.o \
  dist/default/debug\Traffic.X.debug.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\User\AppData\Local\Temp\s1ik.o
                end_init                             10       10        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/debug\Traffic.X.debug.o
                cinit                                13       13       24        8       0
                intentry                              4        4        C        8       0
                config                             2007     2007        2        0       4
                text14                              6B6      6B6        7      C4C       0
                text13                              6AD      6AD        9      C4C       0
                text12                              645      645       1D      C4C       0
                text11                              4FF      4FF       60        8       0
                text10                               37       37      1AA        8       0
                text9                               626      626       1F      C4C       0
                text8                               662      662       18      C4C       0
                text7                               6BD      6BD        4      C4C       0
                text6                               55F      55F       45        8       0
                text5                               5A4      5A4       3D        8       0
                text4                               6C1      6C1        3      C4C       0
                text3                               1E1      1E1      186        8       0
                text2                               68D      68D       11      C4C       0
                text1                               367      367      11F        8       0
                maintext                            486      486       79        8       0
                cstackBANK0                          3E       3E        D       20       1
                cstackCOMMON                         70       70        8       70       1
                inittext                            67A      67A       13      C4C       0
                dataBANK0                            2F       2F        F       20       1
                bssBANK0                             20       20        F       20       1
                bssCOMMON                            78       78        3       70       1
                strings                             600      600       26      C00       0
                idataBANK0                          69E      69E        F      C4C       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        3         0
                cinit                                13       13       24         0
                intentry                              4        4        C         0
                reset_vec                             0        0        3         0
                text14                              6B6      6B6        7         0
                text13                              6AD      6AD        9         0
                text12                              645      645       1D         0
                text11                              4FF      4FF       60         0
                text10                               37       37      1AA         0
                text9                               626      626       1F         0
                text8                               662      662       18         0
                text7                               6BD      6BD        4         0
                text6                               55F      55F       45         0
                text5                               5A4      5A4       3D         0
                text4                               6C1      6C1        3         0
                text3                               1E1      1E1      186         0
                text2                               68D      68D       11         0
                text1                               367      367      11F         0
                maintext                            486      486       79         0
                inittext                            67A      67A       13         0
                idataBANK0                          69E      69E        F         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             600      600       26         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        3         1

        CLASS   BANK0          
                cstackBANK0                          3E       3E        D         1
                dataBANK0                            2F       2F        F         1
                bssBANK0                             20       20        F         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0005DD  0005E1         8       0  CODE        2
                bssBANK0                       000020  00002B  00004B        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                strings                        000600  000026  000626       C00       0  STRING      2
                text9                          000626  00009E  0006C4       C4C       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            004B-006F             25           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         05E1-05FF             1F
                         06C4-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         05E1-05FF             1F
                         06C4-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         05E1-05FF             1F
                         06C4-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              004B-006F             25           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         05E1-05FF             1F
                         06C4-1FFF           193C
        STRING           0003-0003              1           2
                         05E1-05FF             1F
                         06C4-1FFF            100

                                  Symbol Table

Counting@S1                      bssBANK0     0025
Counting@S2                      bssBANK0     0024
Counting@S3                      bssBANK0     0023
Counting@S4                      bssBANK0     0022
Counting@T                       dataBANK0    002F
Counting@i                       bssBANK0     0027
Counting@j                       bssBANK0     0026
Counting@s1                      dataBANK0    0033
Counting@s2                      dataBANK0    0032
Counting@s3                      dataBANK0    0031
Counting@s4                      dataBANK0    0030
LED_7SEGMENT_Update@BlinkCounter bssBANK0     0028
LED_7SEGMENT_Update@State        bssBANK0     0029
LED_7SEGMENT_Update@val          cstackCOMMON 0075
Latch_Traffic_LED@LATptr         cstackCOMMON 0075
Sec2Time@k                       cstackCOMMON 0077
Sec2Time@t1                      cstackCOMMON 0076
Sec2Time@t2                      cstackCOMMON 0073
Sec2Time@t3                      cstackCOMMON 0074
Sec2Time@t4                      cstackCOMMON 0075
TMR2_Interrupt@En                cstackCOMMON 0073
TMR2_Setup@period                cstackCOMMON 0077
TMR2_Setup@postsc                cstackCOMMON 0074
TMR2_Setup@presc                 cstackCOMMON 0073
Traffic_Light@led                cstackCOMMON 0073
VIP_mode@i                       cstackCOMMON 0077
_ANSELH                          (abs)        0189
_BlinkStatus                     bssCOMMON    0078
_Clr_LED                         text4        06C1
_Counting                        text10       0037
_Counting$252                    cstackBANK0  0040
_Counting$253                    cstackBANK0  0042
_Counting$254                    cstackBANK0  0044
_Counting$255                    cstackBANK0  0046
_Counting$256                    cstackBANK0  0048
_INTCON                          (abs)        000B
_INTCONbits                      (abs)        000B
_ISR                             text12       0645
_LAT                             bssCOMMON    0079
_LED                             bssBANK0     0020
_LED_7SEGMENT_Update             text3        01E1
_Latch_Traffic_LED               text2        068D
_OPTION_REG                      (abs)        0081
_OSCCON                          (abs)        008F
_PIE1                            (abs)        008C
_PIR1                            (abs)        000C
_PORTA                           (abs)        0005
_PORTB                           (abs)        0006
_PORTC                           (abs)        0007
_PORTD                           (abs)        0008
_PORT_Init                       text9        0626
_PR2                             (abs)        0092
_Sec2Time                        text11       04FF
_Seg                             dataBANK0    0034
_SegTab                          strings      0606
_SysTick                         bssBANK0     002E
_T2CON                           (abs)        0012
_TMR2_ClearIntFlag               text14       06B6
_TMR2_GetIntFlag                 text13       06AD
_TMR2_Interrupt                  text8        0662
_TMR2_ON                         text7        06BD
_TMR2_Setup                      text6        055F
_TRISA                           (abs)        0085
_TRISB                           (abs)        0086
_TRISC                           (abs)        0087
_TRISD                           (abs)        0088
_Temp                            bssBANK0     002B
_Traffic_Light                   text5        05A4
_VIP                             bssBANK0     002C
_VIP_PrioTab                     strings      0616
_VIP_mode                        text1        0367
_WPUB                            (abs)        0095
__Habs1                          abs1         0000
__Hbank0                         bank0        0000
__Hbank1                         bank1        0000
__Hbank2                         bank2        0000
__Hbank3                         bank3        0000
__HbssBANK0                      bssBANK0     0000
__HbssCOMMON                     bssCOMMON    0000
__Hcinit                         cinit        0037
__Hclrtext                       clrtext      0000
__Hcode                          code         0000
__Hcommon                        common       0000
__Hconfig                        config       2009
__HcstackBANK0                   cstackBANK0  0000
__HcstackCOMMON                  cstackCOMMON 0000
__HdataBANK0                     dataBANK0    0000
__Heeprom_data                   eeprom_data  0000
__Hend_init                      end_init     0013
__Hfunctab                       functab      0000
__HidataBANK0                    idataBANK0   0000
__Hinit                          init         0010
__Hinittext                      inittext     0000
__Hintentry                      intentry     0010
__Hmaintext                      maintext     0000
__Hpowerup                       powerup      0000
__Hram                           ram          0000
__Hreset_vec                     reset_vec    0003
__Hsfr0                          sfr0         0000
__Hsfr1                          sfr1         0000
__Hsfr2                          sfr2         0000
__Hsfr3                          sfr3         0000
__Hspace_0                       (abs)        06C4
__Hspace_1                       (abs)        007B
__Hspace_2                       (abs)        0000
__Hspace_3                       (abs)        0000
__Hspace_4                       (abs)        4010
__Hstack                         stack        0000
__Hstrings                       strings      0000
__Htext                          text         0000
__Labs1                          abs1         0000
__Lbank0                         bank0        0000
__Lbank1                         bank1        0000
__Lbank2                         bank2        0000
__Lbank3                         bank3        0000
__LbssBANK0                      bssBANK0     0000
__LbssCOMMON                     bssCOMMON    0000
__Lcinit                         cinit        0013
__Lclrtext                       clrtext      0000
__Lcode                          code         0000
__Lcommon                        common       0000
__Lconfig                        config       0000
__LcstackBANK0                   cstackBANK0  0000
__LcstackCOMMON                  cstackCOMMON 0000
__LdataBANK0                     dataBANK0    0000
__Leeprom_data                   eeprom_data  0000
__Lend_init                      end_init     0010
__Lfunctab                       functab      0000
__LidataBANK0                    idataBANK0   0000
__Linit                          init         0010
__Linittext                      inittext     0000
__Lintentry                      intentry     0004
__Lmaintext                      maintext     0000
__Lpowerup                       powerup      0000
__Lram                           ram          0000
__Lreset_vec                     reset_vec    0000
__Lsfr0                          sfr0         0000
__Lsfr1                          sfr1         0000
__Lsfr2                          sfr2         0000
__Lsfr3                          sfr3         0000
__Lspace_0                       (abs)        0000
__Lspace_1                       (abs)        0000
__Lspace_2                       (abs)        0000
__Lspace_3                       (abs)        0000
__Lspace_4                       (abs)        0000
__Lstack                         stack        0000
__Lstrings                       strings      0000
__Ltext                          text         0000
__S0                             (abs)        06C4
__S1                             (abs)        007B
__S2                             (abs)        0000
__S3                             (abs)        0000
___int_sp                        stack        0000
___latbits                       (abs)        0002
___sp                            stack        0000
___stackhi                       (abs)        0000
___stacklo                       (abs)        0000
__end_of_Clr_LED                 text4        06C4
__end_of_Counting                text10       01E1
__end_of_ISR                     text12       0662
__end_of_LED_7SEGMENT_Update     text3        0367
__end_of_Latch_Traffic_LED       text2        069E
__end_of_PORT_Init               text9        0645
__end_of_Sec2Time                text11       055F
__end_of_SegTab                  strings      0616
__end_of_TMR2_ClearIntFlag       text14       06BD
__end_of_TMR2_GetIntFlag         text13       06B6
__end_of_TMR2_Interrupt          text8        067A
__end_of_TMR2_ON                 text7        06C1
__end_of_TMR2_Setup              text6        05A4
__end_of_Traffic_Light           text5        05E1
__end_of_VIP_PrioTab             strings      0626
__end_of_VIP_mode                text1        0486
__end_of__initialization         cinit        0033
__end_of__stringtab              strings      0606
__end_of_main                    maintext     04FF
__initialization                 cinit        0013
__pbssBANK0                      bssBANK0     0020
__pbssCOMMON                     bssCOMMON    0078
__pcstackBANK0                   cstackBANK0  003E
__pcstackCOMMON                  cstackCOMMON 0070
__pdataBANK0                     dataBANK0    002F
__pidataBANK0                    idataBANK0   069E
__pintentry                      intentry     0004
__pmaintext                      maintext     0486
__pstrings                       strings      0600
__ptext1                         text1        0367
__ptext10                        text10       0037
__ptext11                        text11       04FF
__ptext12                        text12       0645
__ptext13                        text13       06AD
__ptext14                        text14       06B6
__ptext2                         text2        068D
__ptext3                         text3        01E1
__ptext4                         text4        06C1
__ptext5                         text5        05A4
__ptext6                         text6        055F
__ptext7                         text7        06BD
__ptext8                         text8        0662
__ptext9                         text9        0626
__size_of_Clr_LED                (abs)        0000
__size_of_Counting               (abs)        0000
__size_of_ISR                    (abs)        0000
__size_of_LED_7SEGMENT_Update    (abs)        0000
__size_of_Latch_Traffic_LED      (abs)        0000
__size_of_PORT_Init              (abs)        0000
__size_of_Sec2Time               (abs)        0000
__size_of_TMR2_ClearIntFlag      (abs)        0000
__size_of_TMR2_GetIntFlag        (abs)        0000
__size_of_TMR2_Interrupt         (abs)        0000
__size_of_TMR2_ON                (abs)        0000
__size_of_TMR2_Setup             (abs)        0000
__size_of_Traffic_Light          (abs)        0000
__size_of_VIP_mode               (abs)        0000
__size_of_main                   (abs)        0000
__stringbase                     strings      0605
__stringtab                      strings      0600
_main                            maintext     0486
_reset                           bssBANK0     002D
btemp                            (abs)        007E
end_of_initialization            cinit        0033
init_fetch0                      inittext     067A
init_ram0                        inittext     067E
interrupt_function               intentry     0004
intlevel0                        functab      0000
intlevel1                        functab      0000
intlevel2                        functab      0000
intlevel3                        functab      0000
intlevel4                        functab      0000
intlevel5                        functab      0000
reset_vec                        reset_vec    0000
saved_w                          (abs)        007E
start                            init         0010
start_initialization             cinit        0013
wtemp0                           (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 30 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_Clr_LED
		_Counting
		_LED_7SEGMENT_Update
		_Latch_Traffic_LED
		_PORT_Init
		_TMR2_Interrupt
		_TMR2_ON
		_TMR2_Setup
		_Traffic_Light
		_VIP_mode
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _VIP_mode *****************
 Defined at:
		line 6 in file "VIP_MODE.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Clr_LED
		_LED_7SEGMENT_Update
		_Latch_Traffic_LED
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Latch_Traffic_LED *****************
 Defined at:
		line 4 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
  LATptr          1    wreg     PTR int 
		 -> LAT(2), 
 Auto vars:     Size  Location     Type
  LATptr          1    5[COMMON] PTR int 
		 -> LAT(2), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_VIP_mode
 This function uses a non-reentrant model


 *************** function _LED_7SEGMENT_Update *****************
 Defined at:
		line 21 in file "LED_SEGMENT.c"
 Parameters:    Size  Location     Type
  val             1    wreg     PTR unsigned char 
		 -> Seg(10), 
 Auto vars:     Size  Location     Type
  val             1    5[COMMON] PTR unsigned char 
		 -> Seg(10), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_VIP_mode
 This function uses a non-reentrant model


 *************** function _Clr_LED *****************
 Defined at:
		line 175 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_VIP_mode
 This function uses a non-reentrant model


 *************** function _Traffic_Light *****************
 Defined at:
		line 148 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
  led             2    3[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TMR2_Setup *****************
 Defined at:
		line 4 in file "TMR2.c"
 Parameters:    Size  Location     Type
  period          1    wreg     unsigned char 
  presc           1    3[COMMON] unsigned char 
  postsc          1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  period          1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TMR2_ON *****************
 Defined at:
		line 37 in file "TMR2.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TMR2_Interrupt *****************
 Defined at:
		line 42 in file "TMR2.c"
 Parameters:    Size  Location     Type
  En              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  En              1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _PORT_Init *****************
 Defined at:
		line 59 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Counting *****************
 Defined at:
		line 11 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Sec2Time
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Sec2Time *****************
 Defined at:
		line 120 in file "TRAFFIC.c"
 Parameters:    Size  Location     Type
  t1              1    wreg     unsigned char 
  t2              1    3[COMMON] unsigned char 
  t3              1    4[COMMON] unsigned char 
  t4              1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  t1              1    6[COMMON] unsigned char 
  k               1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Counting
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 77 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_TMR2_ClearIntFlag
		_TMR2_GetIntFlag
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _TMR2_GetIntFlag *****************
 Defined at:
		line 53 in file "TMR2.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _TMR2_ClearIntFlag *****************
 Defined at:
		line 58 in file "TMR2.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
TRAFFIC.c
		_Sec2Time      		CODE           	04FF	0000	97
		_Traffic_Light 		CODE           	05A4	0000	62
		_Latch_Traffic_LED		CODE           	068D	0000	18
		_Counting      		CODE           	0037	0000	427
		_Clr_LED       		CODE           	06C1	0000	4

TRAFFIC.c estimated size: 608

VIP_MODE.c
		_VIP_mode      		CODE           	0367	0000	288

VIP_MODE.c estimated size: 288

TMR2.c
		_TMR2_GetIntFlag		CODE           	06AD	0000	10
		_TMR2_ClearIntFlag		CODE           	06B6	0000	8
		_TMR2_ON       		CODE           	06BD	0000	5
		_TMR2_Setup    		CODE           	055F	0000	70
		_TMR2_Interrupt		CODE           	0662	0000	25

TMR2.c estimated size: 118

LED_SEGMENT.c
		_LED_7SEGMENT_Update		CODE           	01E1	0000	391

LED_SEGMENT.c estimated size: 391

shared
		__stringtab    		STRING         	0600	0000	7
		_SegTab        		STRING         	0606	0000	17
		_VIP_PrioTab   		STRING         	0616	0000	17
		__initialization		CODE           	0013	0000	33

shared estimated size: 74

main.c
		_ISR           		CODE           	0645	0000	30
		_main          		CODE           	0486	0000	122
		_PORT_Init     		CODE           	0626	0000	32

main.c estimated size: 184

